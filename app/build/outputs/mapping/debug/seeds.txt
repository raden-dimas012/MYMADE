com.airbnb.lottie.animation.keyframe.MaskKeyframeAnimation
com.airbnb.lottie.model.animatable.AnimatableIntegerValue
androidx.media.AudioAttributesImplApi21Parcelizer
com.airbnb.lottie.LottieAnimationView$4
net.sqlcipher.database.SQLiteDatabase$5
com.airbnb.lottie.model.content.ShapePath
com.airbnb.lottie.LottieDrawable$ColorFilterData
com.airbnb.lottie.animation.keyframe.package-info
androidx.fragment.app.FragmentManager$6
com.airbnb.lottie.LottieImageAsset
androidx.appcompat.widget.ActionBarOverlayLayout
com.google.android.material.appbar.AppBarLayout$BaseBehavior
com.airbnb.lottie.value.LottieInterpolatedValue
androidx.activity.ComponentActivity$4
com.airbnb.lottie.LottieOnCompositionLoadedListener
com.airbnb.lottie.model.animatable.AnimatableFloatValue
com.airbnb.lottie.parser.LottieCompositionMoshiParser
net.sqlcipher.database.SupportHelper
com.airbnb.lottie.model.content.ShapeStroke$LineCapType
com.google.gson.Gson$2
com.airbnb.lottie.animation.content.GradientStrokeContent
com.airbnb.lottie.animation.content.StrokeContent
com.airbnb.lottie.animation.content.FillContent
com.airbnb.lottie.model.layer.ShapeLayer
com.airbnb.lottie.utils.package-info
androidx.core.widget.NestedScrollView
com.airbnb.lottie.animation.content.ContentGroup
androidx.fragment.app.FragmentContainerView
com.google.gson.internal.bind.TypeAdapters$6
com.airbnb.lottie.utils.LottieValueAnimator
com.airbnb.lottie.parser.LottieCompositionParser
com.airbnb.lottie.model.content.ShapeGroup
com.airbnb.lottie.animation.content.RepeaterContent
com.airbnb.lottie.animation.LPaint
com.airbnb.lottie.LottieDrawable$7
com.airbnb.lottie.network.package-info
com.google.gson.Gson$FutureTypeAdapter
leakcanary.internal.DisplayLeakConnectorView
com.google.android.material.button.MaterialButtonToggleGroup
net.sqlcipher.DefaultCursorWindowAllocation
androidx.constraintlayout.widget.Barrier
com.airbnb.lottie.animation.keyframe.KeyframeAnimation
com.airbnb.lottie.LottieCompositionFactory$5
androidx.lifecycle.LifecycleController$observer$1
com.airbnb.lottie.parser.AnimatableTransformParser
net.sqlcipher.database.DatabaseObjectNotClosedException
com.airbnb.lottie.model.animatable.package-info
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$EmptyKeyframeWrapper
com.dimas.made1.core.data.source.local.room.AppDatabase_Impl
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$EntrySet$1
com.airbnb.lottie.parser.ShapeDataParser
com.airbnb.lottie.animation.content.ModifierContent
com.airbnb.lottie.parser.moshi.JsonEncodingException
net.sqlcipher.database.SQLiteCursorDriver
androidx.media.AudioAttributesCompatParcelizer
com.airbnb.lottie.animation.keyframe.ValueCallbackKeyframeAnimation
net.sqlcipher.CustomCursorWindowAllocation
leakcanary.internal.PlumberInstaller
leakcanary.internal.HeapAnalyzerService
com.airbnb.lottie.parser.ShapeFillParser
com.airbnb.lottie.LottieCompositionFactory$10
com.airbnb.lottie.model.content.ShapeStroke$LineJoinType
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder
com.google.gson.internal.bind.TreeTypeAdapter
com.airbnb.lottie.LottieCompositionFactory$3
com.airbnb.lottie.model.layer.TextLayer$2
android.support.v4.app.RemoteActionCompatParcelizer
com.airbnb.lottie.animation.content.GradientFillContent
com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory
net.sqlcipher.StaleDataException
com.airbnb.lottie.animation.keyframe.PathKeyframe
com.airbnb.lottie.model.content.CircleShape
androidx.appcompat.widget.ContentFrameLayout
com.airbnb.lottie.utils.BaseLottieAnimator
com.airbnb.lottie.value.SimpleLottieValueCallback
com.google.gson.internal.bind.TypeAdapters$28
com.airbnb.lottie.animation.content.KeyPathElementContent
androidx.activity.ComponentActivity$5
com.airbnb.lottie.LottieCompositionFactory
net.sqlcipher.BulkCursorNative
androidx.navigation.fragment.DialogFragmentNavigator$1
com.airbnb.lottie.model.MutablePair
com.airbnb.lottie.LottieComposition
com.airbnb.lottie.animation.content.PolystarContent$1
com.airbnb.lottie.parser.ValueParser
com.airbnb.lottie.model.layer.TextLayer$3
androidx.lifecycle.SingleGeneratedAdapterObserver
net.sqlcipher.CursorWindow$1
com.airbnb.lottie.value.LottieRelativePointValueCallback
com.airbnb.lottie.animation.keyframe.ColorKeyframeAnimation
com.airbnb.lottie.animation.content.PathContent
com.airbnb.lottie.model.content.ShapeFill
com.google.gson.internal.bind.TimeTypeAdapter
androidx.work.impl.workers.CombineContinuationsWorker
com.airbnb.lottie.LottieCompositionFactory$2
com.dimas.made1.home.content.ContentFragment
androidx.navigation.dynamicfeatures.fragment.ui.DefaultProgressFragment
com.airbnb.lottie.model.content.PolystarShape$Type
com.google.gson.internal.bind.TypeAdapters$23
com.airbnb.lottie.model.content.ContentModel
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy
com.airbnb.lottie.model.animatable.AnimatablePointValue
com.airbnb.lottie.LottieCompositionFactory$4
com.airbnb.lottie.parser.CircleShapeParser
androidx.work.OverwritingInputMerger
com.airbnb.lottie.LottieProperty
com.airbnb.lottie.parser.AnimatablePathValueParser
com.airbnb.lottie.model.Marker
com.airbnb.lottie.value.LottieValueCallback
androidx.appcompat.widget.ButtonBarLayout
net.sqlcipher.DatabaseErrorHandler
com.google.android.material.internal.CheckableImageButton
com.google.gson.internal.bind.TypeAdapters$11
com.airbnb.lottie.parser.AnimatableValueParser
com.google.android.material.appbar.MaterialToolbar
androidx.appcompat.view.menu.ExpandedMenuView
com.airbnb.lottie.model.animatable.AnimatableShapeValue
com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation
com.google.gson.internal.bind.TypeAdapters$32
com.airbnb.lottie.model.layer.Layer$MatteType
com.airbnb.lottie.parser.RectangleShapeParser
com.airbnb.lottie.model.FontCharacter
com.airbnb.lottie.model.animatable.BaseAnimatableValue
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper
leakcanary.internal.AppWatcherInstaller
androidx.lifecycle.Lifecycling$1
com.google.android.material.card.MaterialCardView
com.google.gson.TypeAdapter$1
com.google.gson.internal.bind.TypeAdapters$15
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter
com.google.gson.internal.bind.TypeAdapters$30
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$SingleKeyframeWrapper
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
com.google.gson.internal.Excluder$1
com.airbnb.lottie.LottieTask
androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy
androidx.media.AudioAttributesImpl
androidx.work.impl.workers.ConstraintTrackingWorker
com.google.android.material.bottomappbar.BottomAppBar$Behavior
com.airbnb.lottie.LottieCompositionFactory$1
com.airbnb.lottie.animation.keyframe.PointKeyframeAnimation
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
net.sqlcipher.database.SQLiteClosable
leakcanary.internal.AppWatcherInstaller$MainProcess
com.airbnb.lottie.network.NetworkCache
net.sqlcipher.database.SQLiteQueryStats
androidx.navigation.NavController$1
com.google.android.material.timepicker.ClockHandView
net.sqlcipher.R$string
com.airbnb.lottie.animation.content.MergePathsContent$1
net.sqlcipher.BulkCursorToCursorAdaptor
net.sqlcipher.database.SQLiteDatabase$SyncUpdateInfo
com.google.gson.internal.bind.TypeAdapters$21
com.airbnb.lottie.LottieComposition$Factory$ListenerAdapter
androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration
com.google.android.material.timepicker.TimePickerView
androidx.work.Worker
com.google.gson.internal.bind.TypeAdapters$5
com.google.android.material.chip.Chip
com.airbnb.lottie.LottieDrawable$15
androidx.lifecycle.ReflectiveGenericLifecycleObserver
com.airbnb.lottie.animation.content.ShapeContent
com.airbnb.lottie.utils.MeanCalculator
android.support.v4.media.RatingCompat
com.airbnb.lottie.value.LottieRelativeIntegerValueCallback
androidx.constraintlayout.helper.widget.Flow
com.airbnb.lottie.parser.MergePathsParser
com.airbnb.lottie.R$color
com.google.android.material.behavior.SwipeDismissBehavior
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$EntrySet
com.airbnb.lottie.model.Font
com.airbnb.lottie.value.LottieInterpolatedIntegerValue
androidx.work.impl.WorkManagerInitializer
com.google.android.play.core.common.PlayCoreDialogWrapperActivity
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node
net.sqlcipher.UnknownTypeException
com.airbnb.lottie.parser.ColorParser
com.airbnb.lottie.animation.content.BaseStrokeContent$PathGroup
com.airbnb.lottie.parser.moshi.JsonScope
com.airbnb.lottie.animation.package-info
com.airbnb.lottie.parser.PathParser
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$AvlBuilder
androidx.media.AudioAttributesImplBaseParcelizer
net.sqlcipher.database.SupportFactory
leakcanary.internal.LeakCanaryFileProvider
com.dimas.made1.favorite.content.FavoriteMovieTvFragment
com.google.gson.internal.bind.TypeAdapters$14
net.sqlcipher.IContentObserver$Stub
androidx.savedstate.Recreator
com.airbnb.lottie.LottieAnimationView$3
com.airbnb.lottie.model.content.ShapeTrimPath
leakcanary.internal.NotificationReceiver
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
androidx.room.MultiInstanceInvalidationService
net.sqlcipher.AbstractCursor
androidx.work.WorkerParameters
androidx.work.impl.WorkDatabase
com.airbnb.lottie.animation.content.BaseStrokeContent$1
com.airbnb.lottie.PerformanceTracker
leakcanary.KeyedWeakReference
leakcanary.internal.RowElementLayout
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
com.google.gson.internal.bind.TypeAdapters$16
com.airbnb.lottie.model.content.GradientColor
net.sqlcipher.database.SQLiteDebug
com.airbnb.lottie.value.LottieRelativeFloatValueCallback
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3
net.sqlcipher.database.SQLiteDatabaseHook
com.google.gson.internal.bind.TypeAdapters$35$1
com.airbnb.lottie.LottieAnimationView$2
net.sqlcipher.database.SQLiteMisuseException
com.airbnb.lottie.parser.KeyframesParser
com.airbnb.lottie.model.layer.BaseLayer
androidx.viewpager2.adapter.FragmentStateAdapter$2
com.airbnb.lottie.parser.LayerParser
com.airbnb.lottie.LottieDrawable$1
com.airbnb.lottie.model.KeyPathElement
com.google.gson.internal.bind.TypeAdapters$17
net.sqlcipher.database.SQLiteDatabase
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
com.google.android.material.chip.ChipGroup
com.airbnb.lottie.LottieTask$LottieFutureTask
com.google.android.material.floatingactionbutton.FloatingActionButton
com.airbnb.lottie.animation.content.BaseStrokeContent
androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$$inlined$suspendCancellableCoroutine$lambda$1
com.airbnb.lottie.parser.FloatParser
net.sqlcipher.database.SQLiteDatabase$2
com.airbnb.lottie.utils.Logger
com.airbnb.lottie.parser.moshi.package-info
androidx.work.CoroutineWorker
leakcanary.internal.AndroidSupportFragmentDestroyWatcher
com.google.gson.internal.bind.TypeAdapters$29
com.airbnb.lottie.parser.RepeaterParser
com.airbnb.lottie.model.layer.SolidLayer
androidx.lifecycle.SavedStateHandleController
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
com.dimas.made1.favorite.FavoriteFragment
com.dimas.made1.explore.ExploreFragment
net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType
androidx.lifecycle.SavedStateHandleController$1
org.koin.androidx.scope.LifecycleScopeDelegate$2
com.airbnb.lottie.model.content.RectangleShape
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
com.airbnb.lottie.utils.LogcatLogger
androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver
com.airbnb.lottie.parser.ShapeStrokeParser
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
com.airbnb.lottie.parser.MaskParser
net.sqlcipher.DefaultDatabaseErrorHandler
com.dimas.made1.explore.content.MovieTvFragment
com.airbnb.lottie.model.content.GradientStroke
com.airbnb.lottie.value.LottieFrameInfo
net.sqlcipher.IContentObserver$Stub$Proxy
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
androidx.viewpager2.adapter.FragmentStateAdapter$5
androidx.core.app.RemoteActionCompat
net.sqlcipher.CursorIndexOutOfBoundsException
net.sqlcipher.database.SQLiteCursor$QueryThread
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap
net.sqlcipher.database.SQLiteDoneException
com.airbnb.lottie.LottieDrawable$RepeatMode
com.airbnb.lottie.R$integer
com.airbnb.lottie.model.DocumentData
androidx.appcompat.widget.ActionBarContextView
com.airbnb.lottie.FontAssetDelegate
com.airbnb.lottie.LottieResult
com.airbnb.lottie.manager.FontAssetManager
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$AvlIterator
com.airbnb.lottie.model.layer.BaseLayer$1
com.airbnb.lottie.LottieComposition$Factory
com.google.gson.internal.bind.CollectionTypeAdapterFactory
com.google.gson.internal.bind.TypeAdapters$4
androidx.lifecycle.ProcessLifecycleOwnerInitializer
net.sqlcipher.database.SQLiteDiskIOException
com.airbnb.lottie.animation.content.EllipseContent
com.google.gson.internal.bind.TypeAdapters$35
com.dimas.made1.home.HomeActivity
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$1
com.airbnb.lottie.LottieDrawable$13
androidx.viewpager2.widget.ViewPager2
androidx.appcompat.view.menu.ListMenuItemView
android.support.v4.media.session.PlaybackStateCompat$CustomAction
androidx.annotation.Keep
com.google.gson.internal.bind.TypeAdapters$26$1
com.airbnb.lottie.LottieAnimationView$SavedState
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapper
androidx.activity.ComponentActivity$3
com.google.gson.internal.bind.TypeAdapters$22
com.airbnb.lottie.R$styleable
com.airbnb.lottie.model.content.MergePaths$MergePathsMode
com.airbnb.lottie.R$style
net.sqlcipher.database.SQLiteDatabase$1
androidx.appcompat.app.AlertController$RecycleListView
leakcanary.internal.RequestStoragePermissionActivity
com.airbnb.lottie.model.animatable.AnimatableScaleValue
com.google.android.material.timepicker.ChipTextInputComboView
com.airbnb.lottie.OnCompositionLoadedListener
com.airbnb.lottie.R$dimen
android.support.v4.graphics.drawable.IconCompatParcelizer
com.airbnb.lottie.LottieDrawable$10
com.google.gson.internal.bind.ArrayTypeAdapter$1
com.airbnb.lottie.manager.package-info
com.airbnb.lottie.LottieAnimationView$1
com.airbnb.lottie.manager.ImageAssetManager
com.google.gson.Gson$3
com.airbnb.lottie.utils.GammaEvaluator
net.sqlcipher.database.SQLiteCompiledSql
androidx.navigation.dynamicfeatures.fragment.ui.AbstractProgressFragment
com.airbnb.lottie.LottieComposition$1
androidx.appcompat.widget.ActionMenuView
com.airbnb.lottie.parser.FontParser
com.airbnb.lottie.animation.keyframe.PathKeyframeAnimation
com.google.gson.internal.bind.TypeAdapters$34
com.bumptech.glide.GeneratedAppGlideModule
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$KeySet
com.google.android.material.datepicker.MaterialCalendar
com.google.gson.internal.bind.TypeAdapters$10
com.airbnb.lottie.model.KeyPath
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory
net.sqlcipher.IBulkCursor
com.airbnb.lottie.LottieDrawable$2
net.sqlcipher.database.SQLiteAbortException
com.airbnb.lottie.model.layer.BaseLayer$2
com.google.gson.internal.bind.TypeAdapters$13
com.airbnb.lottie.LottieDrawable$17
android.support.v4.media.session.MediaSessionCompat$Token
com.airbnb.lottie.model.animatable.AnimatableTransform
com.google.android.material.internal.NavigationMenuView
com.google.gson.internal.bind.SqlDateTypeAdapter$1
net.sqlcipher.database.SQLiteStatement
com.google.gson.internal.bind.TypeAdapters$8
com.google.gson.internal.bind.DateTypeAdapter
com.airbnb.lottie.parser.package-info
androidx.fragment.app.DialogFragment
net.sqlcipher.database.SQLiteFullException
com.google.android.material.snackbar.SnackbarContentLayout
net.sqlcipher.database.SQLiteQuery
net.sqlcipher.AbstractCursor$SelfContentObserver
com.google.gson.Gson$1
com.airbnb.lottie.R$drawable
android.support.v4.media.MediaBrowserCompat$ItemReceiver
com.google.android.play.core.missingsplits.PlayCoreMissingSplitsActivity
kotlinx.coroutines.android.AndroidDispatcherFactory
com.bumptech.glide.manager.SupportRequestManagerFragment
com.airbnb.lottie.model.content.ShapeData
net.sqlcipher.database.SQLiteDatabase$CursorFactory
androidx.lifecycle.ViewModelStore
com.airbnb.lottie.model.CubicCurveData
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
androidx.coordinatorlayout.widget.CoordinatorLayout
com.google.gson.internal.bind.TypeAdapters$12
com.airbnb.lottie.LottieTask$1
com.google.android.material.textfield.TextInputEditText
androidx.sqlite.db.SupportSQLiteOpenHelper
com.dimas.made1.core.data.source.remote.network.ApiService
com.airbnb.lottie.animation.content.TrimPathContent
com.google.gson.internal.bind.TypeAdapters$7
com.airbnb.lottie.LottieCompositionFactory$9
com.google.gson.internal.bind.MapTypeAdapterFactory
com.google.android.material.datepicker.MaterialCalendarGridView
leakcanary.internal.activity.LeakActivity
net.sqlcipher.database.SQLiteDebug$PagerStats
com.airbnb.lottie.LottieDrawable$6
com.airbnb.lottie.R$anim
androidx.lifecycle.LiveData$LifecycleBoundObserver
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$AnimationListener
com.airbnb.lottie.model.content.PolystarShape
com.airbnb.lottie.model.animatable.AnimatableTextFrame
com.airbnb.lottie.LottieDrawable$9
android.support.v4.media.MediaBrowserCompat$MediaItem
com.google.android.material.snackbar.Snackbar$SnackbarLayout
com.google.android.material.transformation.FabTransformationSheetBehavior
com.dimas.made1.core.domain.model.DataDomain
com.google.android.material.textview.MaterialTextView
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter
androidx.appcompat.widget.ActivityChooserView$InnerLayout
net.sqlcipher.CrossProcessCursorWrapper
androidx.media.AudioAttributesImplBase
com.airbnb.lottie.R$id
com.google.gson.DefaultDateTypeAdapter
androidx.appcompat.widget.ActionBarContainer
com.airbnb.lottie.parser.FontCharacterParser
androidx.navigation.fragment.NavHostFragment
com.airbnb.lottie.model.layer.package-info
androidx.recyclerview.widget.RecyclerView
android.support.v4.media.session.PlaybackStateCompat
com.airbnb.lottie.parser.PolystarShapeParser
com.airbnb.lottie.LottieCompositionFactory$6
com.airbnb.lottie.model.LottieCompositionCache
androidx.work.impl.diagnostics.DiagnosticsReceiver
net.sqlcipher.MatrixCursor$RowBuilder
com.airbnb.lottie.LottieDrawable$14
com.airbnb.lottie.model.animatable.AnimatableColorValue
com.airbnb.lottie.parser.moshi.JsonDataException
com.dimas.made1.splashscreen.SplashScreenFragment
com.google.gson.internal.bind.TypeAdapters$26
leakcanary.internal.InternalLeakCanary
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter
com.google.gson.internal.bind.TypeAdapters$33
androidx.constraintlayout.widget.ConstraintLayout
com.airbnb.lottie.model.animatable.AnimatableGradientColorValue
androidx.fragment.app.Fragment$5
androidx.appcompat.widget.AlertDialogLayout
net.sqlcipher.CursorWindowAllocation
androidx.core.app.CoreComponentFactory
net.sqlcipher.database.SQLiteCursor
com.google.gson.internal.bind.TimeTypeAdapter$1
com.airbnb.lottie.parser.GradientStrokeParser
net.sqlcipher.database.SupportHelper$1
com.google.android.material.theme.MaterialComponentsViewInflater
com.google.android.material.datepicker.MaterialTextInputPicker
androidx.work.ArrayCreatingInputMerger
com.airbnb.lottie.network.NetworkFetcher
com.airbnb.lottie.parser.moshi.JsonReader$Options
com.airbnb.lottie.parser.moshi.JsonReader
com.airbnb.lottie.model.content.Mask$MaskMode
android.support.v4.media.MediaDescriptionCompat
androidx.sqlite.db.SupportSQLiteDatabase
com.google.android.material.datepicker.MaterialDatePicker
com.airbnb.lottie.parser.moshi.JsonUtf8Reader
com.airbnb.lottie.LottieDrawable$11
com.airbnb.lottie.model.content.GradientType
com.airbnb.lottie.PerformanceTracker$1
com.google.gson.internal.bind.TypeAdapters$20
com.google.android.material.transformation.ExpandableBehavior
androidx.lifecycle.FullLifecycleObserverAdapter
com.airbnb.lottie.R$layout
net.sqlcipher.BuildConfig
com.airbnb.lottie.parser.ShapePathParser
com.airbnb.lottie.model.content.MergePaths
androidx.core.graphics.drawable.IconCompatParcelizer
androidx.appcompat.view.menu.ActionMenuItemView
com.airbnb.lottie.model.layer.Layer
com.airbnb.lottie.LottieDrawable
net.sqlcipher.DatabaseUtils$InsertHelper
com.airbnb.lottie.animation.content.MergePathsContent
com.airbnb.lottie.model.content.ShapeStroke$1
com.airbnb.lottie.value.Keyframe
androidx.activity.result.ActivityResultRegistry$1
com.google.gson.internal.bind.ObjectTypeAdapter
com.airbnb.lottie.model.content.Mask
com.airbnb.lottie.R$attr
com.airbnb.lottie.model.layer.CompositionLayer
net.sqlcipher.database.SQLiteTransactionListener
com.airbnb.lottie.LottieAnimationView$SavedState$1
net.sqlcipher.database.SqliteWrapper
com.airbnb.lottie.parser.JsonUtils$1
com.airbnb.lottie.model.content.ShapeTrimPath$Type
net.sqlcipher.IContentObserver
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$KeySet$1
com.airbnb.lottie.parser.DocumentDataParser
com.airbnb.lottie.L
net.sqlcipher.BulkCursorProxy
com.google.gson.internal.bind.ArrayTypeAdapter
com.google.android.material.button.MaterialButton
com.airbnb.lottie.parser.ShapeGroupParser
androidx.lifecycle.CompositeGeneratedAdaptersObserver
net.sqlcipher.database.SQLiteDatabase$4
com.airbnb.lottie.model.layer.Layer$LayerType
com.dimas.made1.base.BaseNavigationFragment
com.airbnb.lottie.parser.PathKeyframeParser
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$1
androidx.lifecycle.LifecycleCoroutineScopeImpl
androidx.work.impl.background.systemjob.SystemJobService
com.airbnb.lottie.parser.GradientColorParser
net.sqlcipher.AbstractWindowedCursor
com.google.gson.internal.bind.SqlDateTypeAdapter
com.google.gson.internal.bind.TypeAdapters$24
com.airbnb.lottie.parser.PointFParser
com.airbnb.lottie.LottieDrawable$8
com.facebook.shimmer.ShimmerFrameLayout
androidx.media.AudioAttributesCompat
com.airbnb.lottie.ImageAssetDelegate
androidx.recyclerview.widget.StaggeredGridLayoutManager
net.sqlcipher.InvalidRowColumnException
com.airbnb.lottie.LottieDrawable$4
net.sqlcipher.database.SQLiteConstraintException
com.airbnb.lottie.LottieCompositionFactory$7
com.airbnb.lottie.parser.ShapeTrimPathParser
androidx.core.app.RemoteActionCompatParcelizer
com.google.android.material.tabs.TabLayout
kotlinx.coroutines.android.AndroidExceptionPreHandler
net.sqlcipher.database.SQLiteQueryBuilder
com.google.gson.internal.bind.TypeAdapters$27
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter
com.airbnb.lottie.model.animatable.AnimatablePathValue
androidx.versionedparcelable.ParcelImpl
com.airbnb.lottie.animation.keyframe.SplitDimensionPathKeyframeAnimation
com.google.android.material.transformation.ExpandableTransformationBehavior
com.dimas.made1.core.data.source.local.room.AppDatabase
com.google.android.material.appbar.AppBarLayout$Behavior
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation
com.google.gson.internal.bind.TypeAdapters$31
com.google.gson.internal.bind.TypeAdapters$9
com.google.gson.internal.Excluder
androidx.media.AudioAttributesImplApi21
com.google.gson.internal.bind.ObjectTypeAdapter$1
com.airbnb.lottie.RenderMode
net.sqlcipher.CursorWindow
com.airbnb.lottie.animation.keyframe.TextKeyframeAnimation
com.airbnb.lottie.value.ScaleXY
com.airbnb.lottie.SimpleColorFilter
com.google.gson.internal.bind.TypeAdapters$25
com.google.android.material.bottomnavigation.BottomNavigationView
com.airbnb.lottie.animation.keyframe.ShapeKeyframeAnimation
com.airbnb.lottie.model.content.Repeater
com.airbnb.lottie.BuildConfig
com.google.gson.internal.bind.TypeAdapters$2
com.airbnb.lottie.parser.moshi.JsonReader$Token
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapperImpl
com.airbnb.lottie.model.animatable.AnimatableValue
com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation
androidx.work.impl.workers.DiagnosticsWorker
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy
net.sqlcipher.CursorWrapper
com.airbnb.lottie.animation.content.GreedyContent
androidx.sqlite.db.SupportSQLiteStatement
androidx.work.impl.background.systemalarm.SystemAlarmService
net.sqlcipher.database.SQLiteDatabaseCorruptException
com.dimas.made1.detail.DetailFragment
com.airbnb.lottie.utils.Utils
com.airbnb.lottie.LottieDrawable$12
com.airbnb.lottie.LottieCompositionFactory$11
net.sqlcipher.SQLException
com.airbnb.lottie.LottieAnimationView$5
net.sqlcipher.RowAllocationException
androidx.savedstate.SavedStateRegistry$1
com.airbnb.lottie.model.DocumentData$Justification
com.google.gson.internal.bind.TypeAdapters$18
com.google.android.material.tabs.TabItem
com.google.android.material.internal.NavigationMenuItemView
androidx.sqlite.db.SupportSQLiteQuery
net.sqlcipher.R
com.google.android.material.textfield.TextInputLayout
com.airbnb.lottie.animation.content.CompoundTrimPathContent
com.airbnb.lottie.animation.content.RectangleContent
com.airbnb.lottie.model.layer.TextLayer
com.airbnb.lottie.model.layer.NullLayer
androidx.appcompat.widget.ViewStubCompat
androidx.appcompat.widget.FitWindowsLinearLayout
com.google.gson.internal.bind.TypeAdapters$1
androidx.recyclerview.widget.GridLayoutManager
com.airbnb.lottie.model.animatable.AnimatableTextProperties
com.google.android.material.internal.BaselineLayout
com.airbnb.lottie.PerformanceTracker$FrameListener
com.airbnb.lottie.parser.ScaleXYParser
com.airbnb.lottie.R
com.airbnb.lottie.animation.content.package-info
com.airbnb.lottie.value.LottieInterpolatedPointValue
com.airbnb.lottie.animation.keyframe.ScaleKeyframeAnimation
androidx.versionedparcelable.CustomVersionedParcelable
com.airbnb.lottie.parser.ContentModelParser
androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy
com.airbnb.lottie.LottieAnimationView
com.airbnb.lottie.animation.keyframe.IntegerKeyframeAnimation
com.airbnb.lottie.LottieDrawable$LazyCompositionTask
androidx.appcompat.widget.FitWindowsFrameLayout
com.bumptech.glide.load.ImageHeaderParser$ImageType
com.airbnb.lottie.model.layer.CompositionLayer$1
com.airbnb.lottie.animation.content.Content
com.airbnb.lottie.LottieDrawable$3
androidx.recyclerview.widget.LinearLayoutManager
android.support.v4.media.MediaMetadataCompat
androidx.navigation.dynamicfeatures.fragment.DynamicNavHostFragment
android.support.v4.media.session.ParcelableVolumeInfo
com.airbnb.lottie.LottieLogger
com.airbnb.lottie.model.animatable.AnimatableSplitDimensionPathValue
net.sqlcipher.MatrixCursor
com.airbnb.lottie.value.LottieInterpolatedFloatValue
com.airbnb.lottie.R$string
com.google.gson.internal.bind.TypeAdapters$3
androidx.appcompat.widget.SearchView
androidx.constraintlayout.widget.Guideline
androidx.appcompat.widget.SearchView$SearchAutoComplete
com.airbnb.lottie.R$bool
com.airbnb.lottie.LottieCompositionFactory$8
com.airbnb.lottie.model.content.GradientFill
androidx.activity.ImmLeaksCleaner
leakcanary.internal.AndroidXFragmentDestroyWatcher
leakcanary.internal.AndroidHeapDumper
com.airbnb.lottie.model.layer.ImageLayer
com.airbnb.lottie.animation.content.PolystarContent
net.sqlcipher.database.SQLiteDirectCursorDriver
net.sqlcipher.DatabaseUtils
com.google.gson.internal.bind.DateTypeAdapter$1
net.sqlcipher.database.SQLiteDatabase$3
com.airbnb.lottie.parser.IntegerParser
com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory
net.sqlcipher.database.SQLiteContentHelper
net.sqlcipher.database.SQLiteException
androidx.work.impl.WorkDatabase_Impl
com.airbnb.lottie.LottieDrawable$5
com.google.android.material.timepicker.ClockFaceView
com.airbnb.lottie.network.FileExtension
android.support.v4.media.session.MediaSessionCompat$QueueItem
com.google.android.material.transformation.FabTransformationBehavior
com.airbnb.lottie.parser.GradientFillParser
com.google.gson.Gson$4
com.airbnb.lottie.parser.AnimatableTextPropertiesParser
androidx.core.graphics.drawable.IconCompat
com.google.gson.Gson$5
com.airbnb.lottie.animation.content.DrawingContent
net.sqlcipher.database.SQLiteProgram
com.airbnb.lottie.parser.JsonUtils
androidx.work.impl.background.systemalarm.RescheduleReceiver
com.airbnb.lottie.parser.KeyframeParser
net.sqlcipher.database.SQLiteOpenHelper
androidx.work.ListenableWorker
net.sqlcipher.Cursor
com.google.android.play.core.assetpacks.AssetPackExtractionService
com.airbnb.lottie.model.layer.TextLayer$1
androidx.work.impl.foreground.SystemForegroundService
com.google.android.material.transformation.FabTransformationScrimBehavior
com.airbnb.lottie.TextDelegate
com.airbnb.lottie.Cancellable
net.sqlcipher.database.SQLiteCursor$MainThreadNotificationHandler
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver
shark.AndroidResourceIdNames
com.airbnb.lottie.model.content.package-info
net.sqlcipher.database.SQLiteDatabase$LibraryLoader
com.airbnb.lottie.LottieDrawable$16
com.airbnb.lottie.utils.MiscUtils
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$LinkedTreeMapIterator
com.google.android.material.bottomsheet.BottomSheetBehavior
com.airbnb.lottie.LottieListener
com.airbnb.lottie.model.content.ShapeStroke
androidx.appcompat.widget.Toolbar
androidx.appcompat.widget.DialogTitle
com.google.gson.internal.bind.TypeAdapters$19
com.airbnb.lottie.animation.keyframe.GradientColorKeyframeAnimation
com.google.android.play.core.assetpacks.ExtractionForegroundService
com.dimas.made1.MyApplication
net.sqlcipher.database.SQLiteDebug$DbStats
com.airbnb.lottie.R$id: int search_badge
com.airbnb.lottie.R$styleable: int LottieAnimationView_lottie_loop
com.airbnb.lottie.R$layout: int abc_list_menu_item_icon
com.airbnb.lottie.R$styleable: int StateListDrawable_android_constantSize
com.airbnb.lottie.value.Keyframe: android.graphics.PointF pathCp1
com.airbnb.lottie.R$dimen: int abc_dialog_fixed_width_major
com.airbnb.lottie.model.layer.TextLayer: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation strokeColorCallbackAnimation
com.airbnb.lottie.animation.content.ShapeContent: android.graphics.Path path
com.airbnb.lottie.model.layer.Layer$MatteType: com.airbnb.lottie.model.layer.Layer$MatteType INVERT
com.airbnb.lottie.R$styleable: int Toolbar_android_gravity
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Large
leakcanary.internal.InternalLeakCanary: leakcanary.internal.InternalLeakCanary INSTANCE
com.airbnb.lottie.R$styleable: int AppCompatTheme_listPreferredItemPaddingRight
com.airbnb.lottie.R$attr: int listPreferredItemHeightLarge
com.airbnb.lottie.R$dimen: int abc_text_size_menu_material
net.sqlcipher.database.SQLiteDatabase: int mFlags
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: java.lang.Object _originalNext
com.airbnb.lottie.R$id: int restart
net.sqlcipher.IBulkCursor: int ON_MOVE_TRANSACTION
com.airbnb.lottie.R$styleable: int ColorStateListItem_android_color
net.sqlcipher.database.SupportHelper: byte[] passphrase
com.airbnb.lottie.PerformanceTracker: java.util.Set frameListeners
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Header
com.airbnb.lottie.model.layer.TextLayer: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation strokeWidthCallbackAnimation
com.airbnb.lottie.LottieAnimationView$4: com.airbnb.lottie.LottieAnimationView this$0
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: okio.ByteString UNQUOTED_STRING_TERMINALS
com.airbnb.lottie.R$styleable: int AppCompatTheme_editTextBackground
com.airbnb.lottie.R$attr: int actionBarStyle
com.airbnb.lottie.R$style: int TextAppearance_Compat_Notification_Line2
com.airbnb.lottie.R$style: int Widget_AppCompat_Light_ActionBar_TabText_Inverse
com.airbnb.lottie.R$id: int image
com.airbnb.lottie.R$style: int Widget_AppCompat_Button
com.airbnb.lottie.R$dimen: int abc_seekbar_track_progress_height_material
com.airbnb.lottie.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Text
com.airbnb.lottie.animation.content.GradientStrokeContent: androidx.collection.LongSparseArray linearGradientCache
com.airbnb.lottie.R$drawable: int abc_btn_check_material
com.airbnb.lottie.R$drawable: int abc_ic_arrow_drop_right_black_24dp
com.airbnb.lottie.model.content.Mask$MaskMode: com.airbnb.lottie.model.content.Mask$MaskMode MASK_MODE_ADD
com.airbnb.lottie.R$color: int abc_color_highlight_material
com.airbnb.lottie.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Title
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_DrawerArrowToggle_Common
com.airbnb.lottie.parser.moshi.JsonReader$Token: com.airbnb.lottie.parser.moshi.JsonReader$Token NAME
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _parentHandle
com.airbnb.lottie.R$styleable: int FontFamilyFont_fontStyle
com.airbnb.lottie.R$attr: int actionModeShareDrawable
com.airbnb.lottie.parser.FloatParser: com.airbnb.lottie.parser.FloatParser INSTANCE
com.airbnb.lottie.utils.LottieValueAnimator: int repeatCount
com.airbnb.lottie.R$style: int Theme_AppCompat_DayNight
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
com.airbnb.lottie.R$attr: int listPreferredItemPaddingLeft
com.airbnb.lottie.R$dimen: int abc_edit_text_inset_bottom_material
com.airbnb.lottie.R$styleable: int AppCompatTheme_editTextStyle
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_Toolbar
com.airbnb.lottie.R$drawable: int abc_ic_clear_material
com.airbnb.lottie.R$styleable: int View_android_theme
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionBarTabTextStyle
net.sqlcipher.IBulkCursor: int GET_EXTRAS_TRANSACTION
com.airbnb.lottie.R$styleable: int AppCompatTheme_checkedTextViewStyle
com.airbnb.lottie.R$styleable: int AppCompatTheme_listPreferredItemPaddingStart
com.airbnb.lottie.R$styleable: int StateListDrawable_android_dither
com.airbnb.lottie.R$styleable: int[] LinearLayoutCompat_Layout
com.airbnb.lottie.R$style: int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
com.airbnb.lottie.R$styleable: int SearchView_android_focusable
com.airbnb.lottie.model.layer.BaseLayer$1: com.airbnb.lottie.model.layer.BaseLayer this$0
com.airbnb.lottie.RenderMode: com.airbnb.lottie.RenderMode HARDWARE
com.airbnb.lottie.R$styleable: int GradientColor_android_startColor
com.airbnb.lottie.R$styleable: int TextAppearance_android_typeface
com.airbnb.lottie.animation.content.BaseStrokeContent: android.graphics.Path path
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText
com.airbnb.lottie.animation.content.StrokeContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation colorFilterAnimation
com.airbnb.lottie.R$styleable: int AppCompatSeekBar_tickMarkTint
com.airbnb.lottie.LottieDrawable$10: java.lang.String val$markerName
net.sqlcipher.database.SQLiteDatabase: java.util.Map mCompiledQueries
com.airbnb.lottie.R$styleable: int CoordinatorLayout_Layout_layout_insetEdge
com.airbnb.lottie.R$styleable: int FontFamilyFont_font
net.sqlcipher.database.SQLiteDatabase: int LOCK_WARNING_WINDOW_IN_MS
net.sqlcipher.database.SQLiteDatabase: java.lang.String mTimeOpened
com.airbnb.lottie.LottieDrawable$14: com.airbnb.lottie.LottieDrawable this$0
com.airbnb.lottie.network.NetworkFetcher: com.airbnb.lottie.network.NetworkCache networkCache
com.airbnb.lottie.LottieCompositionFactory$3: java.lang.ref.WeakReference val$contextRef
com.airbnb.lottie.R$style: int Animation_AppCompat_Tooltip
com.airbnb.lottie.R$styleable: int Toolbar_titleMargins
com.airbnb.lottie.R$drawable: int abc_list_focused_holo
com.airbnb.lottie.R$attr: int customNavigationLayout
net.sqlcipher.R$string: int library_android_database_sqlcipher_author
net.sqlcipher.BuildConfig: boolean DEBUG
androidx.lifecycle.ProcessLifecycleOwner$3: androidx.lifecycle.ProcessLifecycleOwner this$0
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
com.airbnb.lottie.animation.content.RepeaterContent: com.airbnb.lottie.animation.content.ContentGroup contentGroup
com.airbnb.lottie.R$dimen: int abc_dropdownitem_text_padding_left
com.airbnb.lottie.LottieAnimationView$SavedState: boolean isAnimating
com.airbnb.lottie.animation.content.MergePathsContent: android.graphics.Path path
com.airbnb.lottie.R$styleable: int ColorStateListItem_android_alpha
com.airbnb.lottie.R$styleable: int AppCompatTheme_panelMenuListTheme
com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.content.GradientType gradientType
leakcanary.internal.InternalLeakCanary: kotlin.Lazy isInstantApp$delegate
com.airbnb.lottie.R$id: int custom
com.airbnb.lottie.R$style: int Widget_AppCompat_Light_ActionMode_Inverse
com.airbnb.lottie.R$styleable: int FontFamilyFont_fontVariationSettings
com.airbnb.lottie.model.layer.Layer: int preCompHeight
com.airbnb.lottie.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
com.airbnb.lottie.LottieProperty: android.graphics.PointF POSITION
com.airbnb.lottie.R$attr: int listLayout
com.airbnb.lottie.model.content.MergePaths$MergePathsMode: com.airbnb.lottie.model.content.MergePaths$MergePathsMode INTERSECT
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Small
com.airbnb.lottie.R$styleable: int LottieAnimationView_lottie_cacheComposition
com.airbnb.lottie.R$styleable: int Toolbar_contentInsetEnd
com.airbnb.lottie.model.content.PolystarShape: com.airbnb.lottie.model.animatable.AnimatableFloatValue points
com.airbnb.lottie.R$color: int tooltip_background_dark
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionDropDownStyle
com.airbnb.lottie.R$style: int Platform_ThemeOverlay_AppCompat_Dark
com.airbnb.lottie.LottieDrawable$6: int val$maxFrame
com.airbnb.lottie.R$drawable: int abc_btn_colored_material
com.airbnb.lottie.parser.AnimatablePathValueParser: com.airbnb.lottie.parser.moshi.JsonReader$Options NAMES
com.airbnb.lottie.R$styleable: int AppCompatTheme_listPreferredItemHeightLarge
com.airbnb.lottie.R$styleable: int Toolbar_titleMarginEnd
com.airbnb.lottie.parser.moshi.JsonReader$Token: com.airbnb.lottie.parser.moshi.JsonReader$Token BOOLEAN
com.airbnb.lottie.R$style: int Platform_V21_AppCompat_Light
com.airbnb.lottie.R$attr: int colorPrimary
com.airbnb.lottie.R$dimen: int abc_text_size_display_2_material
com.airbnb.lottie.model.content.RectangleShape: com.airbnb.lottie.model.animatable.AnimatablePointValue size
com.airbnb.lottie.R$string: int abc_capital_off
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_ActivityChooserView
com.airbnb.lottie.R$attr: int tickMarkTintMode
com.airbnb.lottie.R$styleable: int AppCompatTheme_tooltipForegroundColor
com.airbnb.lottie.model.layer.TextLayer: androidx.collection.LongSparseArray codePointCache
com.airbnb.lottie.R$styleable: int AlertDialog_buttonIconDimen
com.airbnb.lottie.LottieDrawable$8: com.airbnb.lottie.LottieDrawable this$0
com.airbnb.lottie.R$styleable: int MenuView_subMenuArrow
com.airbnb.lottie.R$drawable: int notification_icon_background
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Medium
com.airbnb.lottie.R$dimen: int abc_select_dialog_padding_start_material
com.airbnb.lottie.animation.content.GradientFillContent: com.airbnb.lottie.model.content.GradientType type
com.airbnb.lottie.R$style: int ThemeOverlay_AppCompat_Dark
com.airbnb.lottie.R$styleable: int AppCompatTheme_colorError
com.airbnb.lottie.LottieAnimationView$SavedState: int repeatCount
com.airbnb.lottie.model.content.RectangleShape: com.airbnb.lottie.model.animatable.AnimatableFloatValue cornerRadius
com.airbnb.lottie.model.DocumentData: int tracking
com.airbnb.lottie.R$dimen: int tooltip_y_offset_touch
net.sqlcipher.database.SQLiteDebug$DbStats: long dbSize
com.airbnb.lottie.LottieDrawable: java.lang.String imageAssetsFolder
net.sqlcipher.CursorWindow: int mStartPos
net.sqlcipher.database.SQLiteDatabase: int mMaxSqlCacheSize
com.airbnb.lottie.R$styleable: int AppCompatTheme_windowMinWidthMinor
com.airbnb.lottie.R$attr: int actionModeFindDrawable
net.sqlcipher.database.SQLiteDatabase: int CONFLICT_NONE
com.airbnb.lottie.R$color: int background_material_light
com.airbnb.lottie.R$drawable: int abc_btn_switch_to_on_mtrl_00012
com.airbnb.lottie.R$attr: int buttonGravity
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: okio.BufferedSource source
com.airbnb.lottie.R$style: int Base_V21_ThemeOverlay_AppCompat_Dialog
com.airbnb.lottie.model.layer.TextLayer: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation colorCallbackAnimation
com.airbnb.lottie.R$styleable: int SearchView_android_inputType
net.sqlcipher.IBulkCursor: java.lang.String descriptor
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int PEEKED_DOUBLE_QUOTED
com.airbnb.lottie.R$style: int Theme_AppCompat_DayNight_DialogWhenLarge
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node parent
com.airbnb.lottie.R$attr: int subtitleTextAppearance
com.airbnb.lottie.animation.content.FillContent: java.lang.String name
com.airbnb.lottie.R$dimen: int disabled_alpha_material_dark
net.sqlcipher.database.SQLiteCursor: java.util.Map mColumnNameMap
net.sqlcipher.CursorWrapper: net.sqlcipher.Cursor mCursor
com.airbnb.lottie.R$color: int ripple_material_dark
com.airbnb.lottie.LottieAnimationView: com.airbnb.lottie.RenderMode renderMode
com.airbnb.lottie.R$style: int Widget_AppCompat_Light_ActionBar_TabBar_Inverse
com.airbnb.lottie.animation.keyframe.GradientColorKeyframeAnimation: com.airbnb.lottie.model.content.GradientColor gradientColor
com.airbnb.lottie.R$dimen: int compat_button_padding_vertical_material
com.airbnb.lottie.R$styleable: int FontFamilyFont_android_fontWeight
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_PopupWindow
com.airbnb.lottie.parser.KeyframeParser: android.view.animation.Interpolator LINEAR_INTERPOLATOR
com.airbnb.lottie.R$attr: int closeIcon
com.airbnb.lottie.R$styleable: int ActionBar_contentInsetLeft
com.airbnb.lottie.R$drawable: int abc_btn_radio_material
com.airbnb.lottie.R$styleable: int AppCompatTextView_lineHeight
com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation rotation
com.airbnb.lottie.R$id: int action_menu_divider
com.airbnb.lottie.R$styleable: int TextAppearance_android_textColorLink
net.sqlcipher.database.SQLiteOpenHelper: boolean mEnableWriteAheadLogging
com.airbnb.lottie.R$attr: int itemPadding
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
net.sqlcipher.database.SQLiteQuery: java.lang.String TAG
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_Toolbar_Button_Navigation
com.airbnb.lottie.R$styleable: int[] ColorStateListItem
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$styleable: int LottieAnimationView_lottie_fallbackRes
com.airbnb.lottie.R$styleable: int PopupWindow_android_popupAnimationStyle
com.airbnb.lottie.R$attr: int gapBetweenBars
net.sqlcipher.database.DatabaseObjectNotClosedException: java.lang.String s
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Headline
com.airbnb.lottie.R$style: int Base_V7_ThemeOverlay_AppCompat_Dialog
com.airbnb.lottie.LottieAnimationView: boolean cacheComposition
com.airbnb.lottie.R$attr: int lottie_progress
com.airbnb.lottie.R$style: int Widget_AppCompat_ListView_DropDown
com.airbnb.lottie.animation.content.TrimPathContent: java.lang.String name
com.airbnb.lottie.R$styleable: int LottieAnimationView_lottie_enableMergePathsForKitKatAndAbove
com.airbnb.lottie.R$styleable: int CompoundButton_android_button
com.airbnb.lottie.R$color: int error_color_material_dark
com.airbnb.lottie.R$layout: int abc_list_menu_item_radio
com.airbnb.lottie.animation.content.ContentGroup: boolean hidden
com.airbnb.lottie.animation.content.PolystarContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation outerRadiusAnimation
com.airbnb.lottie.R$style: int TextAppearance_AppCompat
com.airbnb.lottie.model.DocumentData: float lineHeight
com.airbnb.lottie.R$id: int icon_group
com.airbnb.lottie.R$styleable: int SwitchCompat_showText
com.airbnb.lottie.LottieTask: java.util.concurrent.Executor EXECUTOR
com.airbnb.lottie.R$string: int abc_toolbar_collapse_description
com.airbnb.lottie.parser.moshi.JsonReader$Token: com.airbnb.lottie.parser.moshi.JsonReader$Token NULL
com.airbnb.lottie.R$drawable: int abc_list_selector_background_transition_holo_dark
com.airbnb.lottie.R$dimen: int abc_text_size_medium_material
kotlinx.coroutines.CommonPool: java.util.concurrent.Executor pool
com.airbnb.lottie.R$string: int abc_menu_shift_shortcut_label
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Title_Inverse
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionModeCloseButtonStyle
com.airbnb.lottie.LottieAnimationView: com.airbnb.lottie.LottieListener failureListener
com.airbnb.lottie.model.layer.BaseLayer$2: int[] $SwitchMap$com$airbnb$lottie$model$content$Mask$MaskMode
com.airbnb.lottie.R$attr: int textAppearanceLargePopupMenu
com.airbnb.lottie.LottieDrawable: com.airbnb.lottie.model.layer.CompositionLayer compositionLayer
com.airbnb.lottie.value.Keyframe: float startFrame
com.airbnb.lottie.R$dimen: int abc_action_bar_stacked_tab_max_width
com.airbnb.lottie.model.layer.SolidLayer: android.graphics.Path path
com.airbnb.lottie.LottieDrawable$12: com.airbnb.lottie.LottieDrawable this$0
com.airbnb.lottie.LottieCompositionFactory$8: java.util.zip.ZipInputStream val$inputStream
com.airbnb.lottie.R$style: int Base_V7_Theme_AppCompat_Light
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Body2
com.airbnb.lottie.LottieImageAsset: java.lang.String dirName
com.airbnb.lottie.model.layer.BaseLayer: boolean visible
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_DropDownItem_Spinner
com.airbnb.lottie.animation.content.EllipseContent: com.airbnb.lottie.model.content.CircleShape circleShape
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_SearchResult_Subtitle
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Widget_Button_Inverse
com.airbnb.lottie.model.layer.Layer: com.airbnb.lottie.LottieComposition composition
com.airbnb.lottie.model.content.GradientType: com.airbnb.lottie.model.content.GradientType RADIAL
com.airbnb.lottie.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_SearchResult
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_ActionButton_CloseMode
com.airbnb.lottie.model.content.CircleShape: boolean hidden
net.sqlcipher.database.SQLiteDebug: boolean DEBUG_SQL_CACHE
com.airbnb.lottie.R$drawable: int abc_textfield_search_default_mtrl_alpha
com.airbnb.lottie.R$drawable: int notification_bg_low_pressed
com.airbnb.lottie.R$style: int Base_Theme_AppCompat_DialogWhenLarge
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds mViewBounds
com.airbnb.lottie.LottieAnimationView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$id: int info
com.airbnb.lottie.R$color: int material_deep_teal_500
com.airbnb.lottie.R$attr: int suggestionRowLayout
com.airbnb.lottie.R$id: int search_mag_icon
androidx.work.impl.utils.futures.AbstractFuture$Waiter: androidx.work.impl.utils.futures.AbstractFuture$Waiter next
com.airbnb.lottie.R$string: int abc_searchview_description_query
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Display1
com.airbnb.lottie.R$style: int Theme_AppCompat_DayNight_Dialog_Alert
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapperImpl: com.airbnb.lottie.value.Keyframe cachedCurrentKeyframe
net.sqlcipher.database.SQLiteCompiledSql: java.lang.String mSqlStmt
com.airbnb.lottie.R$style: int Theme_AppCompat_Light_Dialog_Alert
com.airbnb.lottie.parser.DocumentDataParser: com.airbnb.lottie.parser.DocumentDataParser INSTANCE
com.airbnb.lottie.LottieDrawable$4: int val$minFrame
com.airbnb.lottie.model.content.ShapeFill: java.lang.String name
com.airbnb.lottie.R$color: int material_blue_grey_900
com.airbnb.lottie.animation.content.RepeaterContent: boolean hidden
com.airbnb.lottie.model.layer.SolidLayer: float[] points
com.airbnb.lottie.parser.GradientStrokeParser: com.airbnb.lottie.parser.moshi.JsonReader$Options GRADIENT_NAMES
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: java.lang.Object cachedGetValue
com.airbnb.lottie.R$styleable: int AnimatedStateListDrawableCompat_android_dither
com.airbnb.lottie.R$styleable: int FontFamily_fontProviderFetchStrategy
com.airbnb.lottie.R$attr: int tickMarkTint
com.airbnb.lottie.model.content.ShapeStroke: com.airbnb.lottie.model.animatable.AnimatableFloatValue width
com.airbnb.lottie.R$dimen: int abc_action_bar_subtitle_top_margin_material
com.airbnb.lottie.parser.RepeaterParser: com.airbnb.lottie.parser.moshi.JsonReader$Options NAMES
com.airbnb.lottie.R$attr: int fontWeight
com.airbnb.lottie.R$attr: int tooltipText
shark.AndroidResourceIdNames: shark.AndroidResourceIdNames holderField
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Body1
com.airbnb.lottie.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
net.sqlcipher.database.SQLiteDatabase: int mTempTableSequence
com.airbnb.lottie.LottieAnimationView: com.airbnb.lottie.LottieListener loadedListener
com.airbnb.lottie.parser.GradientColorParser: int colorPoints
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.TextDelegate: java.util.Map stringMap
com.airbnb.lottie.R$color: int button_material_light
com.airbnb.lottie.LottieDrawable: int REVERSE
com.airbnb.lottie.animation.content.EllipseContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation positionAnimation
net.sqlcipher.IBulkCursor: int COUNT_TRANSACTION
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Menu
com.airbnb.lottie.model.layer.BaseLayer: int MATRIX_SAVE_FLAG
net.sqlcipher.database.SQLiteDatabase: int CONFLICT_ROLLBACK
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType WEBP_A
com.airbnb.lottie.R$id: int hardware
com.airbnb.lottie.R$attr: int firstBaselineToTopHeight
net.sqlcipher.IBulkCursor: int DELETE_ROW_TRANSACTION
com.airbnb.lottie.LottieDrawable: android.graphics.Matrix matrix
net.sqlcipher.BuildConfig: java.lang.String BUILD_TYPE
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Display2
com.airbnb.lottie.model.content.ShapeStroke: com.airbnb.lottie.model.animatable.AnimatableFloatValue offset
net.sqlcipher.CursorWindow: long nWindow
com.airbnb.lottie.LottieProperty: java.lang.Integer COLOR
shark.AndroidResourceIdNames: int[] resourceIds
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Display4
com.airbnb.lottie.R$bool: int abc_action_bar_embed_tabs
net.sqlcipher.DatabaseUtils$InsertHelper: java.util.HashMap mColumns
kotlinx.coroutines.JobSupport: java.lang.Object _state
com.airbnb.lottie.R$attr: int actionModeSelectAllDrawable
com.airbnb.lottie.R$styleable: int Toolbar_titleTextColor
com.airbnb.lottie.R$attr: int trackTintMode
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Subhead_Inverse
net.sqlcipher.MatrixCursor: java.lang.String[] columnNames
com.airbnb.lottie.R$drawable: int abc_scrubber_control_to_pressed_mtrl_000
com.airbnb.lottie.LottieDrawable: java.util.Set colorFilterData
com.airbnb.lottie.R$id: int search_bar
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$KeySet$1: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$KeySet this$1
com.dimas.made1.core.data.source.remote.response.movie.Movie: int id
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType PNG
com.airbnb.lottie.value.Keyframe: java.lang.Object endValue
com.airbnb.lottie.R$styleable: int CoordinatorLayout_Layout_android_layout_gravity
com.airbnb.lottie.R$attr: int windowMinWidthMinor
com.airbnb.lottie.LottieTask$LottieFutureTask: com.airbnb.lottie.LottieTask this$0
com.airbnb.lottie.R$styleable: int AppCompatTextHelper_android_drawableTop
com.airbnb.lottie.R$style: int Widget_AppCompat_Button_Colored
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int NUMBER_CHAR_EXP_SIGN
com.airbnb.lottie.R$style: int Widget_AppCompat_PopupMenu
com.airbnb.lottie.LottieDrawable$11: java.lang.String val$startMarkerName
com.airbnb.lottie.parser.ColorParser: com.airbnb.lottie.parser.ColorParser INSTANCE
net.sqlcipher.database.SQLiteDatabase: java.util.regex.Pattern EMAIL_IN_DB_PATTERN
com.airbnb.lottie.R$styleable: int LinearLayoutCompat_android_baselineAligned
com.airbnb.lottie.R$styleable: int FontFamilyFont_ttcIndex
com.airbnb.lottie.R$styleable: int Toolbar_contentInsetStart
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionOverflowMenuStyle
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_Light_PopupMenu
com.airbnb.lottie.model.content.PolystarShape: com.airbnb.lottie.model.animatable.AnimatableFloatValue innerRadius
com.airbnb.lottie.LottieProperty: com.airbnb.lottie.value.ScaleXY TRANSFORM_SCALE
com.airbnb.lottie.R$styleable: int AnimatedStateListDrawableTransition_android_toId
com.airbnb.lottie.R$styleable: int AppCompatTheme_buttonBarStyle
com.airbnb.lottie.R$color: int abc_primary_text_material_dark
com.airbnb.lottie.R$id: int topPanel
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.airbnb.lottie.LottieTask: java.util.Set failureListeners
com.airbnb.lottie.R$drawable: int notification_bg_normal_pressed
com.airbnb.lottie.R$style: int ThemeOverlay_AppCompat_Dialog
com.airbnb.lottie.R$styleable: int LottieAnimationView_lottie_repeatMode
net.sqlcipher.BuildConfig: java.lang.String FLAVOR
com.airbnb.lottie.R$attr: int lottie_repeatCount
com.airbnb.lottie.R$id: int decor_content_parent
net.sqlcipher.database.SQLiteCompiledSql: java.lang.String TAG
net.sqlcipher.database.SQLiteOpenHelper: net.sqlcipher.DatabaseErrorHandler mErrorHandler
com.airbnb.lottie.model.layer.TextLayer: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation trackingCallbackAnimation
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_Light_ActionBar
com.airbnb.lottie.R$style: int Base_ThemeOverlay_AppCompat_Dialog_Alert
com.airbnb.lottie.R$styleable: int AppCompatTextHelper_android_drawableStart
com.dimas.made1.core.data.source.remote.response.movie.Movie: java.lang.String posterPath
com.airbnb.lottie.R$style: int Widget_AppCompat_Light_ActionBar_TabBar
com.airbnb.lottie.R$anim: int abc_grow_fade_in_from_bottom
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapper keyframesWrapper
com.airbnb.lottie.R$color: int secondary_text_disabled_material_light
com.airbnb.lottie.R$drawable: int abc_ic_voice_search_api_material
com.airbnb.lottie.model.DocumentData: float size
com.airbnb.lottie.R$attr: int listMenuViewStyle
com.airbnb.lottie.R$styleable: int Toolbar_subtitleTextColor
com.airbnb.lottie.animation.content.MergePathsContent: com.airbnb.lottie.model.content.MergePaths mergePaths
net.sqlcipher.Cursor: int FIELD_TYPE_FLOAT
net.sqlcipher.database.SQLiteDatabase: int mNumCacheHits
net.sqlcipher.database.SQLiteProgram: net.sqlcipher.database.SQLiteDatabase mDatabase
kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.lang.Object onCloseHandler
net.sqlcipher.MatrixCursor: int columnCount
com.airbnb.lottie.R$attr: int lottie_fileName
com.airbnb.lottie.R$attr: int drawerArrowStyle
net.sqlcipher.BuildConfig: int VERSION_CODE
com.airbnb.lottie.R$styleable: int AppCompatTextView_drawableTintMode
net.sqlcipher.database.SQLiteDatabase: int EVENT_DB_OPERATION
net.sqlcipher.database.SQLiteOpenHelper: java.lang.String TAG
com.airbnb.lottie.R$style: int Platform_ThemeOverlay_AppCompat_Light
com.dimas.made1.core.data.source.remote.response.tv.Tv: java.lang.Double popularity
com.airbnb.lottie.R$styleable: int DrawerArrowToggle_color
com.airbnb.lottie.R$styleable: int Spinner_android_entries
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionBarItemBackground
com.airbnb.lottie.R$id: int right_side
net.sqlcipher.database.SQLiteDatabase: int CONFLICT_REPLACE
com.airbnb.lottie.LottieAnimationView: boolean autoPlay
net.sqlcipher.DatabaseUtils$InsertHelper: net.sqlcipher.database.SQLiteStatement mInsertStatement
com.airbnb.lottie.R$styleable: int Spinner_android_popupBackground
com.airbnb.lottie.model.CubicCurveData: android.graphics.PointF controlPoint2
com.airbnb.lottie.animation.keyframe.MaskKeyframeAnimation: java.util.List maskAnimations
com.airbnb.lottie.R$attr: int switchMinWidth
com.airbnb.lottie.parser.LayerParser: com.airbnb.lottie.parser.moshi.JsonReader$Options TEXT_NAMES
net.sqlcipher.database.SQLiteProgram: java.lang.String mSql
com.airbnb.lottie.R$attr: int fontProviderFetchTimeout
com.airbnb.lottie.R$styleable: int FontFamily_fontProviderFetchTimeout
com.airbnb.lottie.R$attr: int controlBackground
com.airbnb.lottie.R$style: int Widget_AppCompat_ProgressBar
com.airbnb.lottie.R$style: int AlertDialog_AppCompat_Light
com.airbnb.lottie.R$attr: int lottieAnimationViewStyle
com.airbnb.lottie.BuildConfig: int VERSION_CODE
com.airbnb.lottie.model.animatable.AnimatableTextProperties: com.airbnb.lottie.model.animatable.AnimatableFloatValue strokeWidth
com.airbnb.lottie.LottieAnimationView$4: com.airbnb.lottie.value.SimpleLottieValueCallback val$callback
net.sqlcipher.database.SQLiteQueryBuilder: boolean mStrictProjectionMap
com.airbnb.lottie.animation.content.RectangleContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation sizeAnimation
com.airbnb.lottie.value.LottieFrameInfo: float overallProgress
com.airbnb.lottie.R$styleable: int TextAppearance_android_fontFamily
com.airbnb.lottie.parser.moshi.JsonScope: int CLOSED
com.airbnb.lottie.R$attr: int contentDescription
com.airbnb.lottie.LottieCompositionFactory$9: com.airbnb.lottie.LottieComposition val$cachedComposition
com.airbnb.lottie.R$attr: int toolbarNavigationButtonStyle
com.airbnb.lottie.R$styleable: int AppCompatTheme_listChoiceIndicatorMultipleAnimated
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Widget_DropDownItem
com.airbnb.lottie.parser.AnimatableTransformParser: com.airbnb.lottie.parser.moshi.JsonReader$Options ANIMATABLE_NAMES
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$attr: int lottie_imageAssetsFolder
com.airbnb.lottie.animation.content.FillContent: com.airbnb.lottie.LottieDrawable lottieDrawable
com.airbnb.lottie.R$id: int buttonPanel
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$KeySet keySet
com.airbnb.lottie.R$styleable: int AppCompatTheme_textAppearanceSearchResultTitle
com.airbnb.lottie.R$styleable: int CoordinatorLayout_Layout_layout_anchorGravity
com.airbnb.lottie.R$styleable: int AppCompatTheme_homeAsUpIndicator
com.airbnb.lottie.animation.content.GradientFillContent: com.airbnb.lottie.model.layer.BaseLayer layer
com.airbnb.lottie.R$style: int Base_V21_Theme_AppCompat
net.sqlcipher.database.SQLiteDatabase: int LOCK_ACQUIRED_WARNING_TIME_IN_MS
com.airbnb.lottie.R$styleable: int AppCompatTextView_drawableLeftCompat
com.airbnb.lottie.R$style: int Widget_AppCompat_Light_ActionBar_Solid_Inverse
com.airbnb.lottie.LottieAnimationView: com.airbnb.lottie.LottieDrawable lottieDrawable
com.airbnb.lottie.R$layout: int abc_action_bar_up_container
com.airbnb.lottie.LottieProperty: java.lang.Integer STROKE_COLOR
com.airbnb.lottie.R$drawable: int abc_textfield_default_mtrl_alpha
com.airbnb.lottie.R$id: int src_over
com.airbnb.lottie.R$attr: int activityChooserViewStyle
com.airbnb.lottie.model.LottieCompositionCache: androidx.collection.LruCache cache
net.sqlcipher.database.SQLiteDebug$PagerStats: int numPagers
com.airbnb.lottie.R$attr: int submitBackground
com.airbnb.lottie.R$string: int abc_shareactionprovider_share_with_application
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
com.airbnb.lottie.R$attr: int actionModeCopyDrawable
com.airbnb.lottie.LottieTask: android.os.Handler handler
com.airbnb.lottie.model.content.ShapeTrimPath: com.airbnb.lottie.model.animatable.AnimatableFloatValue end
com.airbnb.lottie.R$attr: int progressBarPadding
net.sqlcipher.database.SQLiteProgram: long nStatement
com.airbnb.lottie.R$styleable: int AlertDialog_android_layout
com.airbnb.lottie.R$attr: int toolbarStyle
com.airbnb.lottie.model.content.ShapeFill: boolean hidden
com.airbnb.lottie.R$style: int Widget_AppCompat_ListView
com.airbnb.lottie.R$attr: int alphabeticModifiers
com.airbnb.lottie.R$dimen: int abc_text_size_display_4_material
com.airbnb.lottie.R$anim: int abc_slide_out_bottom
com.airbnb.lottie.R$attr: int state_above_anchor
com.airbnb.lottie.R$style: int Platform_Widget_AppCompat_Spinner
com.airbnb.lottie.R$attr: int tintMode
com.airbnb.lottie.R$styleable: int[] MenuItem
com.airbnb.lottie.R$dimen: int highlight_alpha_material_colored
com.airbnb.lottie.model.animatable.AnimatableTextProperties: com.airbnb.lottie.model.animatable.AnimatableColorValue stroke
net.sqlcipher.R$string: int library_android_database_sqlcipher_authorWebsite
com.airbnb.lottie.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
com.airbnb.lottie.R$attr: int popupTheme
com.airbnb.lottie.R$dimen: int abc_dialog_fixed_width_minor
com.airbnb.lottie.R$style: int Widget_AppCompat_SearchView
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
com.airbnb.lottie.R$id: int search_edit_frame
com.airbnb.lottie.R$styleable: int AppCompatTheme_activityChooserViewStyle
com.airbnb.lottie.R$style: int Widget_AppCompat_ListView_Menu
com.airbnb.lottie.R$style: int ThemeOverlay_AppCompat_Dialog_Alert
net.sqlcipher.BuildConfig: java.lang.String VERSION_NAME
com.airbnb.lottie.animation.content.RepeaterContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation offset
com.airbnb.lottie.R$id: int software
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: java.lang.Object _affectedNode
com.airbnb.lottie.R$styleable: int AppCompatTheme_ratingBarStyle
com.airbnb.lottie.R$attr: int listPopupWindowStyle
com.airbnb.lottie.R$id: int edit_query
com.airbnb.lottie.R$layout: int abc_popup_menu_header_item_layout
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Display4
com.airbnb.lottie.animation.content.ContentGroup: java.util.List pathContents
com.airbnb.lottie.R$bool: int abc_config_actionMenuItemAllCaps
leakcanary.KeyedWeakReference: leakcanary.KeyedWeakReference$Companion Companion
com.airbnb.lottie.utils.LottieValueAnimator: com.airbnb.lottie.LottieComposition composition
leakcanary.internal.navigation.BackstackFrame: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$attr: int actionBarItemBackground
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int PEEKED_TRUE
com.airbnb.lottie.R$styleable: int[] ButtonBarLayout
com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.animatable.AnimatableFloatValue width
com.airbnb.lottie.network.FileExtension: com.airbnb.lottie.network.FileExtension JSON
com.airbnb.lottie.R$layout: int abc_alert_dialog_button_bar_material
com.airbnb.lottie.R$color: int primary_text_disabled_material_light
net.sqlcipher.database.SQLiteQueryBuilder: java.lang.String mTables
com.airbnb.lottie.R$style: int TextAppearance_Compat_Notification_Info
com.airbnb.lottie.R$styleable: int ActionBar_displayOptions
net.sqlcipher.database.SQLiteDatabase: boolean mLockingEnabled
com.airbnb.lottie.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
com.airbnb.lottie.R$styleable: int AppCompatTheme_dividerVertical
net.sqlcipher.database.SQLiteCursor: java.lang.Throwable mStackTrace
com.airbnb.lottie.LottieProperty: java.lang.Float POLYSTAR_POINTS
com.airbnb.lottie.animation.content.GradientFillContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation colorFilterAnimation
com.airbnb.lottie.R$style: int Widget_AppCompat_ActionBar_TabBar
com.airbnb.lottie.R$attr: int colorBackgroundFloating
com.airbnb.lottie.parser.GradientFillParser: com.airbnb.lottie.parser.moshi.JsonReader$Options GRADIENT_NAMES
com.airbnb.lottie.R$styleable: int LinearLayoutCompat_dividerPadding
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int PEEKED_BEGIN_OBJECT
net.sqlcipher.database.SQLiteDatabase: int MAX_SQL_CACHE_SIZE
com.airbnb.lottie.R$id: int search_plate
com.airbnb.lottie.R$id: int select_dialog_listview
com.airbnb.lottie.R$color: int background_material_dark
com.airbnb.lottie.R$dimen: int abc_dropdownitem_text_padding_right
net.sqlcipher.IBulkCursor: int GET_COLUMN_NAMES_TRANSACTION
com.airbnb.lottie.animation.content.ShapeContent: com.airbnb.lottie.animation.content.CompoundTrimPathContent trimPaths
net.sqlcipher.database.SQLiteDebug$DbStats: long pageSize
com.airbnb.lottie.R$style: int Theme_AppCompat_DialogWhenLarge
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
com.airbnb.lottie.model.content.MergePaths$MergePathsMode: com.airbnb.lottie.model.content.MergePaths$MergePathsMode SUBTRACT
com.airbnb.lottie.R$style: int Base_V28_Theme_AppCompat
com.airbnb.lottie.LottieDrawable$ColorFilterData: android.graphics.ColorFilter colorFilter
com.airbnb.lottie.R$style: int Base_Theme_AppCompat_Light_Dialog
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionModeFindDrawable
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
com.airbnb.lottie.R$styleable: int[] PopupWindowBackgroundState
com.airbnb.lottie.animation.content.PolystarContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation rotationAnimation
com.airbnb.lottie.LottieDrawable$16: com.airbnb.lottie.LottieDrawable this$0
com.airbnb.lottie.R$string: int abc_menu_enter_shortcut_label
com.airbnb.lottie.R$styleable: int AppCompatTheme_viewInflaterClass
com.airbnb.lottie.R$styleable: int Toolbar_maxButtonHeight
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$LinkedTreeMapIterator: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap this$0
com.airbnb.lottie.R$styleable: int CoordinatorLayout_Layout_layout_anchor
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$styleable: int[] MenuView
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_SearchView
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
net.sqlcipher.DefaultCursorWindowAllocation: long initialAllocationSize
com.airbnb.lottie.model.content.GradientFill: com.airbnb.lottie.model.animatable.AnimatablePointValue endPoint
com.airbnb.lottie.model.content.ShapeStroke$LineCapType: com.airbnb.lottie.model.content.ShapeStroke$LineCapType ROUND
com.airbnb.lottie.value.Keyframe: android.graphics.PointF pathCp2
com.airbnb.lottie.model.layer.TextLayer: com.airbnb.lottie.animation.keyframe.TextKeyframeAnimation textAnimation
com.airbnb.lottie.R$styleable: int AppCompatTheme_colorControlActivated
com.airbnb.lottie.R$styleable: int AppCompatTextView_drawableTint
com.airbnb.lottie.R$style: int Theme_AppCompat_Light_Dialog_MinWidth
com.airbnb.lottie.R$style: int Theme_AppCompat_DayNight_NoActionBar
com.airbnb.lottie.model.FontCharacter: double size
com.airbnb.lottie.model.layer.Layer$MatteType: com.airbnb.lottie.model.layer.Layer$MatteType[] $VALUES
com.airbnb.lottie.animation.content.PolystarContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation innerRoundednessAnimation
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node: java.lang.Object key
com.airbnb.lottie.model.content.ShapeTrimPath$Type: com.airbnb.lottie.model.content.ShapeTrimPath$Type SIMULTANEOUSLY
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
net.sqlcipher.database.SQLiteCursor: java.lang.String[] mColumns
com.airbnb.lottie.animation.keyframe.ShapeKeyframeAnimation: com.airbnb.lottie.model.content.ShapeData tempShapeData
com.airbnb.lottie.R$dimen: int abc_control_corner_material
com.airbnb.lottie.model.content.MergePaths: com.airbnb.lottie.model.content.MergePaths$MergePathsMode mode
com.airbnb.lottie.R$styleable: int GradientColorItem_android_color
com.airbnb.lottie.LottieProperty: java.lang.Float TRANSFORM_END_OPACITY
net.sqlcipher.database.SQLiteDatabase: int EVENT_DB_CORRUPT
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$LinkedTreeMapIterator: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node lastReturned
com.airbnb.lottie.R$styleable: int MenuItem_android_titleCondensed
com.airbnb.lottie.R$styleable: int AppCompatTheme_ratingBarStyleSmall
com.airbnb.lottie.R$attr: int textColorSearchUrl
com.airbnb.lottie.R$styleable: int[] GradientColorItem
com.airbnb.lottie.R$styleable: int SearchView_android_maxWidth
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Headline
com.airbnb.lottie.R$style: int Base_V21_Theme_AppCompat_Light_Dialog
com.airbnb.lottie.R$dimen: int abc_control_padding_material
net.sqlcipher.database.SQLiteDebug: boolean DEBUG_LOCK_TIME_TRACKING_STACK_TRACE
com.airbnb.lottie.R$attr: int titleMargins
com.airbnb.lottie.R$id: int src_in
kotlinx.coroutines.CancelledContinuation: int _resumed
com.airbnb.lottie.R$styleable: int MenuItem_android_checkable
com.dimas.made1.core.data.source.remote.response.movie.Movie: java.lang.String name
com.airbnb.lottie.R$attr: int preserveIconSpacing
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType WEBP
com.airbnb.lottie.R$attr: int paddingEnd
com.airbnb.lottie.R$id: int notification_background
com.airbnb.lottie.R$styleable: int LottieAnimationView_lottie_colorFilter
com.airbnb.lottie.R$layout: int notification_template_icon_group
net.sqlcipher.AbstractCursor: android.database.ContentObservable mContentObservable
com.airbnb.lottie.R$dimen: int tooltip_horizontal_padding
com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.content.ShapeStroke$LineCapType capType
com.airbnb.lottie.R$styleable: int Toolbar_subtitle
com.airbnb.lottie.TextDelegate: com.airbnb.lottie.LottieDrawable drawable
shark.AndroidResourceIdNames: java.lang.String[] names
com.airbnb.lottie.R$styleable: int[] Spinner
com.airbnb.lottie.R$id: int list_item
net.sqlcipher.AbstractWindowedCursor: net.sqlcipher.CursorWindow mWindow
com.airbnb.lottie.utils.LottieValueAnimator: float maxFrame
com.airbnb.lottie.R$color: int secondary_text_disabled_material_dark
com.airbnb.lottie.animation.content.PolystarContent: boolean isPathValid
com.airbnb.lottie.animation.content.RepeaterContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation copies
com.airbnb.lottie.animation.content.GradientStrokeContent: int CACHE_STEPS_MS
com.airbnb.lottie.model.layer.TextLayer: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation colorAnimation
com.airbnb.lottie.LottieDrawable$7: float val$maxProgress
net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType: net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType Immediate
com.airbnb.lottie.R$styleable: int ActionBar_progressBarStyle
com.airbnb.lottie.R$drawable: int abc_list_selector_disabled_holo_light
com.airbnb.lottie.LottieCompositionFactory$2: java.lang.String val$cacheKey
com.dimas.made1.core.data.source.remote.response.movie.MovieResponse: java.util.List results
com.airbnb.lottie.R$styleable: int ActionMode_closeItemLayout
androidx.navigation.NavBackStackEntryState: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$attr: int contentInsetLeft
com.airbnb.lottie.R$dimen: int abc_dialog_title_divider_material
net.sqlcipher.DatabaseUtils$InsertHelper: int TABLE_INFO_PRAGMA_DEFAULT_INDEX
com.airbnb.lottie.R$styleable: int SearchView_commitIcon
com.airbnb.lottie.R$drawable: int notify_panel_notification_icon_bg
com.airbnb.lottie.animation.content.PolystarContent: com.airbnb.lottie.animation.content.CompoundTrimPathContent trimPaths
com.airbnb.lottie.model.DocumentData: int strokeColor
net.sqlcipher.DatabaseUtils$InsertHelper: net.sqlcipher.database.SQLiteStatement mReplaceStatement
com.airbnb.lottie.R$attr: int multiChoiceItemLayout
com.airbnb.lottie.R$color: int material_grey_850
com.airbnb.lottie.R$attr: int dividerHorizontal
net.sqlcipher.R$string: int library_android_database_sqlcipher_libraryDescription
net.sqlcipher.database.SQLiteDatabase$3: char[] val$keyMaterial
com.airbnb.lottie.model.content.ShapeTrimPath$Type: com.airbnb.lottie.model.content.ShapeTrimPath$Type[] $VALUES
com.airbnb.lottie.network.NetworkFetcher: android.content.Context appContext
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$EntrySet$1: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$EntrySet this$1
com.airbnb.lottie.parser.GradientStrokeParser: com.airbnb.lottie.parser.moshi.JsonReader$Options NAMES
com.airbnb.lottie.R$styleable: int Toolbar_navigationContentDescription
com.airbnb.lottie.model.content.Mask: com.airbnb.lottie.model.content.Mask$MaskMode maskMode
com.airbnb.lottie.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
com.airbnb.lottie.R$styleable: int AppCompatTheme_dividerHorizontal
com.airbnb.lottie.R$styleable: int View_android_focusable
com.airbnb.lottie.LottieAnimationView: com.airbnb.lottie.LottieTask compositionTask
com.airbnb.lottie.model.content.ShapePath: boolean hidden
com.airbnb.lottie.R$style: int Platform_AppCompat_Light
com.airbnb.lottie.R$id: int action_bar
com.airbnb.lottie.R$styleable: int View_theme
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int NUMBER_CHAR_DECIMAL
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionBarDivider
com.airbnb.lottie.R$styleable: int AppCompatTheme_buttonBarNeutralButtonStyle
com.airbnb.lottie.R$layout: int notification_template_custom_big
com.airbnb.lottie.R$style: int ThemeOverlay_AppCompat_ActionBar
com.airbnb.lottie.L: long[] startTimeNs
com.airbnb.lottie.R$attr: int actionModeSplitBackground
com.airbnb.lottie.R$attr: int actionOverflowMenuStyle
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.airbnb.lottie.R$style: int Base_V7_Widget_AppCompat_EditText
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.model.Font: java.lang.String family
com.airbnb.lottie.LottieAnimationView: com.airbnb.lottie.LottieListener DEFAULT_FAILURE_LISTENER
net.sqlcipher.AbstractCursor: android.os.Bundle mExtras
com.airbnb.lottie.R$string: int status_bar_notification_info_overflow
com.airbnb.lottie.R$style: int Widget_AppCompat_CompoundButton_Switch
com.airbnb.lottie.LottieDrawable: com.airbnb.lottie.manager.FontAssetManager fontAssetManager
com.airbnb.lottie.R$layout: int abc_screen_simple
com.airbnb.lottie.LottieDrawable: com.airbnb.lottie.utils.LottieValueAnimator animator
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: okio.ByteString DOUBLE_QUOTE_OR_SLASH
com.airbnb.lottie.R$styleable: int AppCompatTheme_buttonStyle
com.airbnb.lottie.R$attr: int colorControlHighlight
net.sqlcipher.database.SQLiteClosable: int mReferenceCount
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionModeSplitBackground
com.airbnb.lottie.R$attr: int buttonTint
com.airbnb.lottie.R$drawable: int abc_ratingbar_small_material
com.airbnb.lottie.model.content.PolystarShape$Type: com.airbnb.lottie.model.content.PolystarShape$Type[] $VALUES
kotlinx.coroutines.channels.ConflatedBroadcastChannel: int _updating
leakcanary.KeyedWeakReference: long heapDumpUptimeMillis
com.airbnb.lottie.model.layer.ImageLayer: android.graphics.Rect dst
com.airbnb.lottie.R$attr: int actionBarSize
com.airbnb.lottie.model.content.MergePaths$MergePathsMode: com.airbnb.lottie.model.content.MergePaths$MergePathsMode ADD
com.airbnb.lottie.R$id: int left
com.airbnb.lottie.R$color: int foreground_material_light
com.airbnb.lottie.animation.content.TrimPathContent: java.util.List listeners
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$styleable: int ActionBar_contentInsetStartWithNavigation
com.airbnb.lottie.R$drawable: int abc_scrubber_track_mtrl_alpha
com.airbnb.lottie.R$styleable: int[] RecycleListView
com.airbnb.lottie.R$drawable: int abc_ic_ab_back_material
com.airbnb.lottie.R$styleable: int[] LottieAnimationView
net.sqlcipher.DatabaseUtils$InsertHelper: net.sqlcipher.database.SQLiteDatabase mDb
com.airbnb.lottie.R$drawable: int notification_template_icon_low_bg
net.sqlcipher.database.SQLiteDatabase: java.lang.Throwable mStackTrace
com.airbnb.lottie.R$styleable: int MenuView_android_itemBackground
com.airbnb.lottie.R$styleable: int Toolbar_logo
kotlinx.coroutines.selects.SelectBuilderImpl: java.lang.Object _parentHandle
com.airbnb.lottie.model.KeyPath: com.airbnb.lottie.model.KeyPathElement resolvedElement
com.airbnb.lottie.R$style: int Widget_AppCompat_Button_ButtonBar_AlertDialog
com.airbnb.lottie.LottieImageAsset: android.graphics.Bitmap bitmap
com.airbnb.lottie.R$dimen: int notification_large_icon_height
net.sqlcipher.database.SQLiteCompiledSql: boolean mInUse
com.airbnb.lottie.LottieProperty: java.lang.Float TEXT_TRACKING
com.airbnb.lottie.R$attr: int windowFixedWidthMinor
com.airbnb.lottie.R$styleable: int ActionBar_customNavigationLayout
com.airbnb.lottie.R$id: int message
com.airbnb.lottie.LottieCompositionFactory$6: java.lang.String val$json
com.airbnb.lottie.R$attr: int fontProviderAuthority
com.airbnb.lottie.R$styleable: int[] ActionMode
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionOverflowButtonStyle
com.airbnb.lottie.R$styleable: int MenuItem_actionLayout
net.sqlcipher.database.SQLiteDebug$PagerStats: long totalBytes
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
com.airbnb.lottie.animation.content.TrimPathContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation startAnimation
com.airbnb.lottie.value.Keyframe: float endValueFloat
com.airbnb.lottie.R$styleable: int TextAppearance_android_shadowDy
com.airbnb.lottie.parser.moshi.JsonReader: java.lang.String[] pathNames
com.airbnb.lottie.R$id: int notification_main_column_container
com.airbnb.lottie.model.layer.Layer: boolean hidden
com.airbnb.lottie.animation.content.GradientFillContent: int CACHE_STEPS_MS
com.airbnb.lottie.R$color: int switch_thumb_disabled_material_dark
net.sqlcipher.database.SQLiteDatabase: java.lang.String TAG
com.airbnb.lottie.animation.content.GradientStrokeContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation colorAnimation
com.airbnb.lottie.animation.content.BaseStrokeContent$PathGroup: com.airbnb.lottie.animation.content.TrimPathContent trimPath
com.airbnb.lottie.R$styleable: int DrawerArrowToggle_drawableSize
com.airbnb.lottie.R$attr: int arrowShaftLength
net.sqlcipher.IBulkCursor: int REQUERY_TRANSACTION
com.airbnb.lottie.R$attr: int colorAccent
com.airbnb.lottie.R$styleable: int ActionMenuItemView_android_minWidth
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Widget_Switch
com.airbnb.lottie.R$style: int Widget_AppCompat_Spinner_DropDown_ActionBar
com.airbnb.lottie.model.content.GradientStroke: float miterLimit
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: okio.ByteString SINGLE_QUOTE_OR_SLASH
com.airbnb.lottie.model.content.Repeater: com.airbnb.lottie.model.animatable.AnimatableFloatValue offset
com.airbnb.lottie.R$color: int material_blue_grey_950
com.airbnb.lottie.R$styleable: int AppCompatTheme_checkboxStyle
com.airbnb.lottie.LottieDrawable: java.lang.String TAG
com.airbnb.lottie.model.DocumentData: boolean strokeOverFill
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: long MIN_INCOMPLETE_INTEGER
com.airbnb.lottie.R$styleable: int AppCompatTextView_drawableBottomCompat
com.airbnb.lottie.R$string: int abc_menu_sym_shortcut_label
com.airbnb.lottie.value.LottieFrameInfo: float startFrame
com.airbnb.lottie.model.content.ShapePath: java.lang.String name
net.sqlcipher.CursorWindow: net.sqlcipher.CursorWindowAllocation allocation
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_ActionBar_TabView
com.airbnb.lottie.animation.keyframe.SplitDimensionPathKeyframeAnimation: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation xAnimation
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_AutoCompleteTextView
com.airbnb.lottie.R$styleable: int AppCompatTheme_colorControlNormal
com.airbnb.lottie.R$drawable: int abc_btn_radio_to_on_mtrl_015
com.airbnb.lottie.LottieDrawable$5: com.airbnb.lottie.LottieDrawable this$0
com.airbnb.lottie.model.layer.BaseLayer: android.graphics.Paint dstInPaint
com.airbnb.lottie.R$id: int automatic
com.airbnb.lottie.R$styleable: int Spinner_android_dropDownWidth
com.airbnb.lottie.animation.content.BaseStrokeContent: com.airbnb.lottie.LottieDrawable lottieDrawable
com.airbnb.lottie.LottieProperty: java.lang.Float POLYSTAR_ROTATION
com.airbnb.lottie.R$styleable: int MenuItem_actionProviderClass
com.airbnb.lottie.LottieProperty: java.lang.Float TEXT_SIZE
com.airbnb.lottie.R$styleable: int MenuView_android_headerBackground
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int PEEKED_UNQUOTED_NAME
com.airbnb.lottie.R$drawable: int abc_ratingbar_indicator_material
com.airbnb.lottie.R$attr: int allowStacking
com.airbnb.lottie.R$attr: int paddingStart
leakcanary.internal.AndroidSupportFragmentDestroyWatcher: leakcanary.ReachabilityWatcher reachabilityWatcher
com.airbnb.lottie.LottieProperty: java.lang.Float POLYSTAR_INNER_RADIUS
leakcanary.internal.AndroidXFragmentDestroyWatcher: leakcanary.internal.AndroidXFragmentDestroyWatcher$fragmentLifecycleCallbacks$1 fragmentLifecycleCallbacks
com.airbnb.lottie.model.content.PolystarShape: com.airbnb.lottie.model.animatable.AnimatableFloatValue innerRoundedness
com.airbnb.lottie.R$attr: int buttonBarNegativeButtonStyle
com.airbnb.lottie.animation.content.RectangleContent: java.lang.String name
com.airbnb.lottie.animation.keyframe.PathKeyframeAnimation: float[] pos
com.airbnb.lottie.LottieComposition: java.util.Map fonts
com.airbnb.lottie.R$attr: int switchPadding
com.airbnb.lottie.R$styleable: int Toolbar_buttonGravity
com.airbnb.lottie.R$dimen: int abc_button_padding_vertical_material
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_ListView_DropDown
com.airbnb.lottie.L: int MAX_DEPTH
com.airbnb.lottie.R$id: int submit_area
com.airbnb.lottie.animation.content.GradientFillContent: android.graphics.Paint paint
com.airbnb.lottie.R$attr: int lottie_repeatMode
com.airbnb.lottie.R$style: int Widget_AppCompat_Button_Borderless
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: java.util.Comparator comparator
com.airbnb.lottie.R$styleable: int TextAppearance_textLocale
com.airbnb.lottie.R$styleable: int[] SwitchCompat
com.airbnb.lottie.R$style: int Base_DialogWindowTitle_AppCompat
com.airbnb.lottie.R$attr: int iconTint
com.airbnb.lottie.value.LottieValueCallback: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation animation
com.airbnb.lottie.LottieDrawable$14: int val$frame
com.airbnb.lottie.animation.content.GradientStrokeContent: int cacheSteps
com.airbnb.lottie.LottieAnimationView: int fallbackResource
com.airbnb.lottie.R$id: int scrollView
com.airbnb.lottie.R$attr: int textAppearanceListItemSecondary
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionBarStyle
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node[] table
com.airbnb.lottie.animation.keyframe.ScaleKeyframeAnimation: com.airbnb.lottie.value.ScaleXY scaleXY
com.airbnb.lottie.value.Keyframe: int endValueInt
com.airbnb.lottie.parser.moshi.JsonScope: int EMPTY_OBJECT
com.airbnb.lottie.LottieDrawable$13: float val$maxProgress
com.airbnb.lottie.model.content.ShapeGroup: java.util.List items
com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation scale
com.airbnb.lottie.animation.content.ContentGroup: java.util.List contents
com.airbnb.lottie.R$styleable: int ActionBar_height
com.airbnb.lottie.R$styleable: int AppCompatTextView_autoSizeMinTextSize
com.airbnb.lottie.value.Keyframe: java.lang.Float endFrame
com.airbnb.lottie.R$styleable: int AppCompatTheme_listChoiceBackgroundIndicator
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Light_SearchResult_Title
net.sqlcipher.database.SQLiteDatabase$SyncUpdateInfo: java.lang.String deletedTable
com.airbnb.lottie.R$attr: int windowActionModeOverlay
com.airbnb.lottie.R$style: int Base_Theme_AppCompat_Light_Dialog_FixedSize
com.airbnb.lottie.animation.keyframe.PathKeyframe: com.airbnb.lottie.value.Keyframe pointKeyFrame
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_Button_Borderless
com.airbnb.lottie.R$color: int primary_dark_material_dark
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_Button_Colored
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
com.airbnb.lottie.LottieTask: java.util.Set successListeners
com.airbnb.lottie.R$styleable: int MenuView_android_verticalDivider
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Body1
com.airbnb.lottie.animation.content.GradientFillContent: java.lang.String name
com.google.android.material.internal.ParcelableSparseArray: android.os.Parcelable$Creator CREATOR
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteTransactionListener mTransactionListener
net.sqlcipher.database.SQLiteOpenHelper: java.lang.String mName
com.airbnb.lottie.animation.content.GradientStrokeContent: com.airbnb.lottie.animation.keyframe.ValueCallbackKeyframeAnimation colorCallbackAnimation
net.sqlcipher.database.SqliteWrapper: java.lang.String TAG
com.airbnb.lottie.R$styleable: int FontFamilyFont_android_font
com.airbnb.lottie.R$styleable: int TextAppearance_android_textSize
com.airbnb.lottie.R$styleable: int SearchView_layout
com.airbnb.lottie.R$id: int spacer
com.airbnb.lottie.R$drawable: int abc_seekbar_track_material
net.sqlcipher.database.SQLiteOpenHelper: boolean mIsInitializing
com.airbnb.lottie.R$style: int Base_Theme_AppCompat_Light_Dialog_Alert
com.airbnb.lottie.R$drawable: int tooltip_frame_dark
net.sqlcipher.database.SQLiteCompiledSql: long nHandle
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$styleable: int ActionBar_homeAsUpIndicator
com.airbnb.lottie.R$attr: int colorButtonNormal
com.airbnb.lottie.R$style: int Widget_AppCompat_Light_ListPopupWindow
com.airbnb.lottie.R$id: int reverse
com.airbnb.lottie.animation.content.BaseStrokeContent: com.airbnb.lottie.model.layer.BaseLayer layer
com.airbnb.lottie.R$attr: int actionViewClass
com.airbnb.lottie.R$attr: int actionLayout
com.airbnb.lottie.R$attr: int fontProviderFetchStrategy
com.airbnb.lottie.R$color: int abc_search_url_text_pressed
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Menu
androidx.appcompat.widget.AppCompatImageView: androidx.appcompat.widget.AppCompatImageHelper mImageHelper
com.airbnb.lottie.model.layer.Layer: int solidWidth
com.airbnb.lottie.R$styleable: int ActionBar_title
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Title
com.airbnb.lottie.R$attr: int windowNoTitle
com.airbnb.lottie.R$layout: int abc_dialog_title_material
com.airbnb.lottie.model.content.MergePaths$MergePathsMode: com.airbnb.lottie.model.content.MergePaths$MergePathsMode[] $VALUES
com.airbnb.lottie.R$styleable: int GradientColorItem_android_offset
com.airbnb.lottie.model.Marker: float startFrame
com.airbnb.lottie.model.content.ShapeStroke$LineCapType: com.airbnb.lottie.model.content.ShapeStroke$LineCapType BUTT
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_ActionBar_Solid
com.airbnb.lottie.R$styleable: int SearchView_submitBackground
com.airbnb.lottie.R$styleable: int AppCompatTheme_buttonBarPositiveButtonStyle
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionModeCloseDrawable
com.airbnb.lottie.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
com.airbnb.lottie.R$style: int Widget_AppCompat_Light_ActionBar_Solid
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$dimen: int abc_panel_menu_list_width
net.sqlcipher.IBulkCursor: int DEACTIVATE_TRANSACTION
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title
com.airbnb.lottie.R$styleable: int LottieAnimationView_lottie_repeatCount
com.airbnb.lottie.R$styleable: int AppCompatImageView_srcCompat
com.airbnb.lottie.R$styleable: int DrawerArrowToggle_thickness
com.airbnb.lottie.R$styleable: int[] FontFamily
com.airbnb.lottie.R$styleable: int[] ActionBarLayout
com.airbnb.lottie.RenderMode: com.airbnb.lottie.RenderMode[] $VALUES
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.animation.content.PolystarContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation outerRoundednessAnimation
com.airbnb.lottie.animation.keyframe.PathKeyframeAnimation: android.graphics.PointF point
com.airbnb.lottie.R$attr: int lottie_autoPlay
com.dimas.made1.core.data.source.remote.response.movie.Movie: java.lang.Double popularity
com.airbnb.lottie.animation.content.PolystarContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation positionAnimation
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Small_Inverse
com.airbnb.lottie.R$styleable: int AppCompatSeekBar_android_thumb
com.airbnb.lottie.R$styleable: int FontFamilyFont_android_fontStyle
com.airbnb.lottie.R$id: int action_text
com.airbnb.lottie.R$dimen: int abc_list_item_padding_horizontal_material
com.airbnb.lottie.R$color: int abc_search_url_text
com.airbnb.lottie.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
com.airbnb.lottie.R$attr: int titleTextStyle
com.airbnb.lottie.LottieProperty: java.lang.Float POLYSTAR_OUTER_ROUNDEDNESS
com.airbnb.lottie.model.content.CircleShape: java.lang.String name
com.airbnb.lottie.model.layer.BaseLayer: com.airbnb.lottie.model.layer.Layer layerModel
com.airbnb.lottie.R$styleable: int AlertDialog_singleChoiceItemLayout
com.airbnb.lottie.R$attr: int autoCompleteTextViewStyle
com.airbnb.lottie.R$styleable: int ActionBar_icon
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
com.airbnb.lottie.R$styleable: int AppCompatTextView_fontFamily
com.airbnb.lottie.R$styleable: int[] LinearLayoutCompat
com.airbnb.lottie.parser.KeyframeParser: androidx.collection.SparseArrayCompat pathInterpolatorCache
com.airbnb.lottie.model.content.GradientFill: com.airbnb.lottie.model.animatable.AnimatableFloatValue highlightLength
com.airbnb.lottie.parser.LottieCompositionParser: com.airbnb.lottie.parser.moshi.JsonReader$Options NAMES
com.airbnb.lottie.PerformanceTracker: java.util.Comparator floatComparator
com.airbnb.lottie.R$styleable: int AppCompatTheme_editTextColor
com.airbnb.lottie.RenderMode: com.airbnb.lottie.RenderMode SOFTWARE
com.airbnb.lottie.R$color: int abc_tint_btn_checkable
com.airbnb.lottie.manager.FontAssetManager: android.content.res.AssetManager assetManager
com.airbnb.lottie.R$anim: int abc_fade_in
com.airbnb.lottie.animation.content.MergePathsContent: android.graphics.Path firstPath
com.airbnb.lottie.R$styleable: int[] AppCompatTextHelper
com.airbnb.lottie.R$attr: int actionBarPopupTheme
com.airbnb.lottie.LottieDrawable$3: com.airbnb.lottie.LottieDrawable this$0
com.airbnb.lottie.R$attr: int spinnerStyle
kotlinx.coroutines.scheduling.LimitingDispatcher: int inFlightTasks
com.airbnb.lottie.R$drawable: int abc_item_background_holo_light
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
com.airbnb.lottie.R$attr: int actionBarTabStyle
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionModeSelectAllDrawable
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$drawable: int abc_btn_check_to_on_mtrl_000
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_CompoundButton_Switch
com.airbnb.lottie.R$styleable: int[] AppCompatTextView
com.airbnb.lottie.model.layer.TextLayer$3: int[] $SwitchMap$com$airbnb$lottie$model$DocumentData$Justification
com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatableFloatValue startOpacity
com.airbnb.lottie.model.content.ShapeData: android.graphics.PointF initialPoint
androidx.lifecycle.ViewModelStore: java.util.HashMap mMap
com.airbnb.lottie.utils.LottieValueAnimator: float frame
com.airbnb.lottie.model.DocumentData: int color
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$SingleKeyframeWrapper: float cachedInterpolatedProgress
com.airbnb.lottie.R$dimen: int compat_button_inset_vertical_material
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.animatable.AnimatableFloatValue dashOffset
com.airbnb.lottie.parser.moshi.JsonReader$Options: java.lang.String[] strings
com.airbnb.lottie.R$layout: int abc_screen_content_include
com.airbnb.lottie.parser.ShapeStrokeParser: com.airbnb.lottie.parser.moshi.JsonReader$Options DASH_PATTERN_NAMES
com.airbnb.lottie.model.DocumentData$Justification: com.airbnb.lottie.model.DocumentData$Justification[] $VALUES
com.airbnb.lottie.R$color: int primary_text_default_material_dark
com.airbnb.lottie.R$styleable: int AppCompatTheme_windowFixedHeightMinor
com.airbnb.lottie.LottieDrawable$5: float val$minProgress
com.airbnb.lottie.R$anim: int abc_fade_out
com.airbnb.lottie.R$attr: int ratingBarStyle
com.airbnb.lottie.model.content.Mask: boolean inverted
com.airbnb.lottie.model.animatable.AnimatablePathValue: java.util.List keyframes
com.airbnb.lottie.animation.keyframe.ValueCallbackKeyframeAnimation: java.lang.Object valueCallbackValue
com.airbnb.lottie.R$attr: int colorPrimaryDark
com.airbnb.lottie.R$styleable: int AppCompatTheme_android_windowAnimationStyle
com.airbnb.lottie.R$attr: int listDividerAlertDialog
com.airbnb.lottie.R$styleable: int SearchView_queryHint
com.airbnb.lottie.animation.content.ContentGroup: android.graphics.RectF rect
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int PEEKED_BUFFERED_NAME
com.airbnb.lottie.R$id: int action_bar_subtitle
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Caption
com.airbnb.lottie.R$style: int Base_AlertDialog_AppCompat_Light
com.airbnb.lottie.LottieDrawable$9: com.airbnb.lottie.LottieDrawable this$0
net.sqlcipher.DatabaseUtils: boolean LOCAL_LOGV
com.airbnb.lottie.LottieComposition: java.util.List layers
com.airbnb.lottie.animation.content.EllipseContent: java.lang.String name
com.airbnb.lottie.model.layer.Layer$LayerType: com.airbnb.lottie.model.layer.Layer$LayerType PRE_COMP
net.sqlcipher.BulkCursorToCursorAdaptor: int mCount
com.airbnb.lottie.R$styleable: int ViewBackgroundHelper_android_background
net.sqlcipher.database.SQLiteDatabase$SyncUpdateInfo: java.lang.String masterTable
com.airbnb.lottie.R$dimen: int abc_edit_text_inset_horizontal_material
com.airbnb.lottie.LottieResult: java.lang.Throwable exception
com.airbnb.lottie.R$styleable: int AppCompatTheme_windowMinWidthMajor
net.sqlcipher.IBulkCursor: int GET_CURSOR_WINDOW_TRANSACTION
com.airbnb.lottie.R$dimen: int abc_text_size_headline_material
net.sqlcipher.database.SQLiteOpenHelper: net.sqlcipher.database.SQLiteDatabaseHook mHook
com.airbnb.lottie.R$styleable: int LinearLayoutCompat_android_weightSum
net.sqlcipher.AbstractCursor: boolean mSelfObserverRegistered
com.airbnb.lottie.R$attr: int buttonStyle
com.airbnb.lottie.R$attr: int titleTextAppearance
com.airbnb.lottie.R$styleable: int[] CoordinatorLayout_Layout
com.airbnb.lottie.R$id: int forever
com.airbnb.lottie.R$styleable: int MenuItem_android_visible
net.sqlcipher.database.SQLiteDebug$PagerStats: long databaseBytes
com.airbnb.lottie.R$attr: int windowActionBarOverlay
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int NUMBER_CHAR_SIGN
com.airbnb.lottie.LottieCompositionFactory$1: android.content.Context val$context
com.airbnb.lottie.R$color: int material_grey_800
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Widget_TextView_SpinnerItem
com.airbnb.lottie.L: boolean traceEnabled
com.airbnb.lottie.R$attr: int color
com.airbnb.lottie.R$id: int src_atop
com.airbnb.lottie.model.MutablePair: java.lang.Object first
com.airbnb.lottie.R$style: int AlertDialog_AppCompat
com.airbnb.lottie.R$styleable: int AppCompatTheme_listChoiceIndicatorSingleAnimated
com.airbnb.lottie.model.layer.TextLayer$1: com.airbnb.lottie.model.layer.TextLayer this$0
com.airbnb.lottie.R$attr: int expandActivityOverflowButtonDrawable
com.airbnb.lottie.network.FileExtension: com.airbnb.lottie.network.FileExtension[] $VALUES
com.airbnb.lottie.R$styleable: int GradientColor_android_centerColor
com.airbnb.lottie.R$dimen: int abc_config_prefDialogWidth
leakcanary.KeyedWeakReference: long watchUptimeMillis
com.airbnb.lottie.LottieComposition: com.airbnb.lottie.PerformanceTracker performanceTracker
com.airbnb.lottie.R$attr: int layout
com.airbnb.lottie.R$drawable: int abc_vector_test
com.airbnb.lottie.R$attr: int title
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Small
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Inverse
com.airbnb.lottie.R$attr: int viewInflaterClass
com.airbnb.lottie.model.FontCharacter: java.lang.String fontFamily
com.airbnb.lottie.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
com.airbnb.lottie.R$style: int Theme_AppCompat_Dialog
com.airbnb.lottie.model.layer.TextLayer: java.lang.StringBuilder stringBuilder
com.airbnb.lottie.animation.keyframe.ValueCallbackKeyframeAnimation: com.airbnb.lottie.value.LottieFrameInfo frameInfo
com.airbnb.lottie.R$style: int Widget_AppCompat_Light_SearchView
com.airbnb.lottie.model.content.ShapeFill: com.airbnb.lottie.model.animatable.AnimatableColorValue color
com.airbnb.lottie.model.layer.TextLayer: com.airbnb.lottie.LottieComposition composition
com.airbnb.lottie.R$dimen: int notification_right_side_padding_top
com.airbnb.lottie.animation.content.RectangleContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation cornerRadiusAnimation
net.sqlcipher.database.SQLiteDatabase: java.util.concurrent.locks.ReentrantLock mLock
leakcanary.internal.InternalLeakCanary: kotlin.Lazy onRetainInstanceListener$delegate
com.airbnb.lottie.parser.LottieCompositionMoshiParser: com.airbnb.lottie.parser.moshi.JsonReader$Options FONT_NAMES
com.airbnb.lottie.LottieAnimationView: int animationResId
net.sqlcipher.database.SQLiteDirectCursorDriver: net.sqlcipher.database.SQLiteQuery mQuery
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionModeCopyDrawable
com.airbnb.lottie.R$attr: int panelMenuListWidth
net.sqlcipher.database.SQLiteDatabase: int mCacheFullWarnings
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$styleable: int Toolbar_titleTextAppearance
com.airbnb.lottie.R$styleable: int FontFamily_fontProviderSystemFontFamily
com.airbnb.lottie.R$styleable: int PopupWindow_android_popupBackground
com.airbnb.lottie.R$styleable: int SearchView_iconifiedByDefault
com.airbnb.lottie.R$styleable: int[] ActionMenuView
com.airbnb.lottie.R$style: int Widget_Support_CoordinatorLayout
com.airbnb.lottie.R$styleable: int TextAppearance_android_shadowRadius
com.airbnb.lottie.R$attr: int background
com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation anchorPoint
com.airbnb.lottie.R$attr: int font
com.airbnb.lottie.R$layout: int abc_action_mode_bar
com.airbnb.lottie.animation.content.GradientFillContent: java.util.List paths
com.airbnb.lottie.R$dimen: int abc_cascading_menus_min_smallest_width
com.airbnb.lottie.R$color: int abc_secondary_text_material_light
com.airbnb.lottie.animation.content.GradientFillContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation startPointAnimation
com.airbnb.lottie.R$styleable: int GradientColor_android_endX
com.airbnb.lottie.R$style: int Widget_AppCompat_Toolbar
net.sqlcipher.database.SQLiteQueryBuilder: java.lang.StringBuilder mWhereClause
com.airbnb.lottie.R$color: int abc_secondary_text_material_dark
net.sqlcipher.database.SQLiteDebug$DbStats: int lookaside
net.sqlcipher.R$string: int library_android_database_sqlcipher_isOpenSource
net.sqlcipher.database.SQLiteDirectCursorDriver: java.lang.String mEditTable
com.airbnb.lottie.LottieImageAsset: int width
com.airbnb.lottie.animation.content.BaseStrokeContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation dashPatternOffsetAnimation
com.airbnb.lottie.R$style: int Base_V7_Theme_AppCompat_Dialog
net.sqlcipher.database.SQLiteDatabase$3: net.sqlcipher.database.SQLiteDatabase this$0
com.airbnb.lottie.R$dimen: int abc_action_button_min_width_overflow_material
com.airbnb.lottie.R$styleable: int Toolbar_collapseContentDescription
com.airbnb.lottie.R$styleable: int AppCompatTheme_dialogTheme
com.airbnb.lottie.model.FontCharacter: double width
com.airbnb.lottie.R$styleable: int TextAppearance_android_shadowDx
com.airbnb.lottie.R$drawable: int abc_spinner_textfield_background_material
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$color: int abc_btn_colored_borderless_text_material
com.airbnb.lottie.R$styleable: int AppCompatTheme_listPopupWindowStyle
com.airbnb.lottie.animation.content.PolystarContent: boolean hidden
com.airbnb.lottie.model.content.PolystarShape$Type: com.airbnb.lottie.model.content.PolystarShape$Type STAR
com.airbnb.lottie.animation.content.BaseStrokeContent: java.util.List pathGroups
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle
net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType: net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType Deferred
com.airbnb.lottie.model.layer.TextLayer: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation strokeColorAnimation
com.airbnb.lottie.R$styleable: int MenuItem_iconTint
com.airbnb.lottie.R$attr: int autoSizeMaxTextSize
net.sqlcipher.database.SQLiteDebug: boolean DEBUG_SQL_TIME
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_ButtonBar
com.airbnb.lottie.R$styleable: int AppCompatTheme_selectableItemBackground
com.airbnb.lottie.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
com.airbnb.lottie.R$string: int abc_search_hint
com.airbnb.lottie.R$id: int submenuarrow
com.airbnb.lottie.LottieProperty: java.lang.Float TRANSFORM_SKEW
com.airbnb.lottie.R$styleable: int ActionMode_subtitleTextStyle
net.sqlcipher.R$string: int library_android_database_sqlcipher_libraryWebsite
com.airbnb.lottie.R$styleable: int AppCompatTextHelper_android_drawableBottom
com.airbnb.lottie.R$styleable: int View_paddingEnd
net.sqlcipher.database.SupportHelper$1: net.sqlcipher.database.SupportHelper this$0
com.airbnb.lottie.BuildConfig: java.lang.String VERSION_NAME
com.airbnb.lottie.parser.moshi.JsonReader$Token: com.airbnb.lottie.parser.moshi.JsonReader$Token END_ARRAY
com.airbnb.lottie.R$dimen: int notification_top_pad
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: java.util.List listeners
com.airbnb.lottie.R$anim: int abc_tooltip_enter
com.airbnb.lottie.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title
com.airbnb.lottie.R$dimen: int notification_top_pad_large_text
com.airbnb.lottie.R$attr: int subtitleTextStyle
com.airbnb.lottie.network.NetworkCache: android.content.Context appContext
com.airbnb.lottie.R$styleable: int MenuView_android_itemTextAppearance
com.airbnb.lottie.R$styleable: int GradientColor_android_centerY
com.airbnb.lottie.R$id: int uniform
com.airbnb.lottie.R$styleable: int AppCompatTheme_panelBackground
com.airbnb.lottie.R$drawable: int abc_btn_radio_to_on_mtrl_000
com.airbnb.lottie.model.content.CircleShape: com.airbnb.lottie.model.animatable.AnimatableValue position
com.airbnb.lottie.animation.content.PolystarContent: com.airbnb.lottie.model.content.PolystarShape$Type type
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: float cachedEndProgress
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionModeTheme
leakcanary.internal.InternalLeakCanary: java.lang.String LEAK_CANARY_THREAD_NAME
com.airbnb.lottie.R$style: int Base_Theme_AppCompat_Dialog_Alert
com.airbnb.lottie.parser.moshi.JsonReader$Token: com.airbnb.lottie.parser.moshi.JsonReader$Token[] $VALUES
com.airbnb.lottie.R$attr: int contentInsetStart
com.airbnb.lottie.R$attr: int tint
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_RatingBar_Indicator
com.airbnb.lottie.LottieComposition: java.util.HashSet warnings
com.airbnb.lottie.R$attr: int textAllCaps
com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation opacity
com.airbnb.lottie.R$color: int abc_primary_text_disable_only_material_light
com.airbnb.lottie.R$color: int abc_background_cache_hint_selector_material_light
com.airbnb.lottie.R$styleable: int TextAppearance_android_textColor
com.airbnb.lottie.R$style: int Widget_AppCompat_Light_ActionBar_TabText
com.airbnb.lottie.R$styleable: int ActivityChooserView_initialActivityCount
com.airbnb.lottie.R$styleable: int AppCompatTheme_toolbarStyle
com.airbnb.lottie.R$id: int action_mode_bar_stub
com.airbnb.lottie.R$attr: int titleMarginTop
com.airbnb.lottie.model.layer.BaseLayer: android.graphics.Paint contentPaint
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int PEEKED_UNQUOTED
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabBar
net.sqlcipher.database.SQLiteQueryStats: long largestIndividualRowSize
net.sqlcipher.database.SQLiteDatabase: int sQueryLogTimeInMillis
kotlin.SafePublicationLazyImpl: java.lang.Object _value
com.airbnb.lottie.parser.FontCharacterParser: com.airbnb.lottie.parser.moshi.JsonReader$Options NAMES
net.sqlcipher.DatabaseUtils$InsertHelper: net.sqlcipher.database.SQLiteStatement mPreparedStatement
com.airbnb.lottie.R$attr: int closeItemLayout
com.airbnb.lottie.R$id: int scrollIndicatorUp
com.airbnb.lottie.animation.content.GradientFillContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation endPointAnimation
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node left
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_ButtonBar_AlertDialog
com.airbnb.lottie.R$styleable: int MenuItem_android_alphabeticShortcut
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node: int height
com.airbnb.lottie.R$id: int italic
com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.content.ShapeStroke$LineJoinType joinType
com.airbnb.lottie.R$styleable: int AppCompatTheme_dialogPreferredPadding
com.airbnb.lottie.R$styleable: int Spinner_android_prompt
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.model.layer.BaseLayer: java.util.List parentLayers
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: int size
com.airbnb.lottie.LottieTask: com.airbnb.lottie.LottieResult result
net.sqlcipher.database.SQLiteCursor: net.sqlcipher.database.SQLiteQuery mQuery
com.airbnb.lottie.LottieProperty: java.lang.Float POLYSTAR_OUTER_RADIUS
com.airbnb.lottie.R$attr: int fontVariationSettings
com.airbnb.lottie.R$styleable: int AppCompatTheme_alertDialogTheme
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
net.sqlcipher.database.SQLiteDatabase: int CONFLICT_IGNORE
com.airbnb.lottie.model.layer.TextLayer: android.graphics.RectF rectF
com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation skewAngle
com.airbnb.lottie.R$styleable: int AppCompatTheme_windowActionBarOverlay
com.airbnb.lottie.R$drawable: int notification_template_icon_bg
com.airbnb.lottie.model.content.MergePaths$MergePathsMode: com.airbnb.lottie.model.content.MergePaths$MergePathsMode MERGE
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: float progress
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
net.sqlcipher.IContentObserver$Stub: int TRANSACTION_onChange
com.airbnb.lottie.R$style: int Widget_AppCompat_ActionBar_TabView
com.airbnb.lottie.R$drawable: int abc_popup_background_mtrl_mult
com.airbnb.lottie.R$dimen: int abc_button_padding_horizontal_material
com.airbnb.lottie.animation.content.GradientStrokeContent: androidx.collection.LongSparseArray radialGradientCache
com.airbnb.lottie.R$style: int RtlOverlay_DialogWindowTitle_AppCompat
com.airbnb.lottie.model.content.ShapeStroke: com.airbnb.lottie.model.animatable.AnimatableIntegerValue opacity
com.airbnb.lottie.R$styleable: int MenuItem_actionViewClass
com.airbnb.lottie.R$layout: int abc_action_menu_item_layout
com.airbnb.lottie.model.Font: float ascent
com.airbnb.lottie.R$attr: int editTextColor
com.airbnb.lottie.model.content.ShapeFill: com.airbnb.lottie.model.animatable.AnimatableIntegerValue opacity
com.airbnb.lottie.L: java.lang.String TAG
com.airbnb.lottie.LottieDrawable$12: int val$maxFrame
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
net.sqlcipher.MatrixCursor$RowBuilder: int endIndex
com.airbnb.lottie.R$color: int material_blue_grey_800
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Subhead
com.airbnb.lottie.R$styleable: int LinearLayoutCompat_divider
com.airbnb.lottie.R$styleable: int[] StateListDrawableItem
com.airbnb.lottie.R$styleable: int ViewStubCompat_android_inflatedId
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionBarTabStyle
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle
com.airbnb.lottie.R$styleable: int Toolbar_android_minHeight
com.airbnb.lottie.model.content.Mask: com.airbnb.lottie.model.animatable.AnimatableShapeValue maskPath
com.airbnb.lottie.R$styleable: int LottieAnimationView_lottie_scale
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Large
com.airbnb.lottie.R$attr: int actionMenuTextColor
com.airbnb.lottie.animation.keyframe.MaskKeyframeAnimation: java.util.List opacityAnimations
com.airbnb.lottie.R$styleable: int[] Toolbar
com.airbnb.lottie.R$layout: int abc_search_view
com.airbnb.lottie.model.content.GradientColor: float[] positions
com.airbnb.lottie.model.content.ShapeTrimPath: com.airbnb.lottie.model.animatable.AnimatableFloatValue offset
com.airbnb.lottie.R$styleable: int MenuItem_android_orderInCategory
com.airbnb.lottie.model.content.ShapeStroke$LineJoinType: com.airbnb.lottie.model.content.ShapeStroke$LineJoinType ROUND
com.airbnb.lottie.R$styleable: int SwitchCompat_thumbTintMode
com.airbnb.lottie.model.content.CircleShape: boolean isReversed
com.airbnb.lottie.LottieCompositionFactory$1: java.lang.String val$cacheKey
com.airbnb.lottie.R$styleable: int LottieAnimationView_lottie_fileName
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int PEEKED_LONG
com.airbnb.lottie.R$id: int search_voice_btn
com.airbnb.lottie.R$color: int accent_material_dark
com.airbnb.lottie.animation.content.RepeaterContent: android.graphics.Path path
com.airbnb.lottie.model.content.PolystarShape: java.lang.String name
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
net.sqlcipher.database.SQLiteDatabase: java.lang.String GET_LOCK_LOG_PREFIX
kotlinx.coroutines.DispatchedCoroutine: int _decision
com.airbnb.lottie.BuildConfig: java.lang.String APPLICATION_ID
com.airbnb.lottie.R$styleable: int AnimatedStateListDrawableItem_android_id
com.airbnb.lottie.R$attr: int lottie_speed
com.airbnb.lottie.R$id: int split_action_bar
com.airbnb.lottie.parser.CircleShapeParser: com.airbnb.lottie.parser.moshi.JsonReader$Options NAMES
leakcanary.internal.InternalLeakCanary: android.app.Application _application
com.airbnb.lottie.model.content.ShapePath: com.airbnb.lottie.model.animatable.AnimatableShapeValue shapePath
com.airbnb.lottie.manager.ImageAssetManager: android.content.Context context
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$dimen: int abc_control_inset_material
com.airbnb.lottie.R$styleable: int LinearLayoutCompat_measureWithLargestChild
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
com.airbnb.lottie.R$styleable: int AppCompatTheme_spinnerStyle
com.airbnb.lottie.R$drawable: int abc_list_selector_holo_dark
com.airbnb.lottie.R$styleable: int ActionBar_elevation
com.airbnb.lottie.R$drawable: int notification_bg
com.airbnb.lottie.LottieAnimationView: boolean wasAnimatingWhenNotShown
com.airbnb.lottie.R$styleable: int AppCompatTheme_borderlessButtonStyle
net.sqlcipher.IBulkCursor: int CLOSE_TRANSACTION
com.airbnb.lottie.R$drawable: int abc_textfield_search_material
com.airbnb.lottie.animation.content.TrimPathContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation endAnimation
net.sqlcipher.database.SQLiteQueryStats: long totalQueryResultSize
com.airbnb.lottie.R$style: int Widget_AppCompat_ImageButton
com.airbnb.lottie.R$styleable: int AppCompatTheme_colorSwitchThumbNormal
com.airbnb.lottie.R$styleable: int LinearLayoutCompat_Layout_android_layout_height
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$EntrySet entrySet
com.airbnb.lottie.animation.content.RepeaterContent: com.airbnb.lottie.LottieDrawable lottieDrawable
com.airbnb.lottie.R$styleable: int AppCompatTextView_drawableStartCompat
shark.AndroidResourceIdNames: shark.AndroidResourceIdNames$Companion Companion
com.airbnb.lottie.LottieDrawable: boolean isExtraScaleEnabled
com.airbnb.lottie.parser.moshi.JsonScope: int EMPTY_ARRAY
com.airbnb.lottie.R$string: int abc_menu_function_shortcut_label
com.airbnb.lottie.R$attr: int actionModeWebSearchDrawable
com.airbnb.lottie.R$style: int Widget_AppCompat_RatingBar_Small
com.airbnb.lottie.R$color: int abc_tint_edittext
com.airbnb.lottie.R$color: int error_color_material_light
net.sqlcipher.Cursor: int FIELD_TYPE_BLOB
com.airbnb.lottie.utils.LottieValueAnimator: long lastFrameTimeNs
com.airbnb.lottie.R$dimen: int abc_search_view_preferred_height
com.airbnb.lottie.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.airbnb.lottie.R$styleable: int[] AnimatedStateListDrawableCompat
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
com.airbnb.lottie.R$styleable: int[] ActionMenuItemView
com.airbnb.lottie.R$styleable: int AppCompatTextView_autoSizeStepGranularity
com.airbnb.lottie.R$dimen: int abc_action_button_min_height_material
com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: android.graphics.Matrix skewMatrix2
com.airbnb.lottie.R$attr: int queryBackground
com.airbnb.lottie.animation.content.BaseStrokeContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation widthAnimation
com.airbnb.lottie.R$attr: int buttonBarStyle
com.airbnb.lottie.model.KeyPath: java.util.List keys
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_Spinner_Underlined
com.airbnb.lottie.model.content.PolystarShape: com.airbnb.lottie.model.animatable.AnimatableValue position
com.airbnb.lottie.R$color: int abc_search_url_text_selected
com.airbnb.lottie.R$drawable: int abc_tab_indicator_material
com.airbnb.lottie.R$style: int Base_V21_Theme_AppCompat_Dialog
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_PopupMenu
com.airbnb.lottie.R$color: int abc_btn_colored_text_material
com.airbnb.lottie.R$styleable: int AlertDialog_multiChoiceItemLayout
com.airbnb.lottie.animation.content.PolystarContent: float POLYSTAR_MAGIC_NUMBER
com.airbnb.lottie.R$attr: int textAppearancePopupMenuHeader
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Large_Inverse
com.airbnb.lottie.value.Keyframe: int UNSET_INT
com.airbnb.lottie.R$layout: int abc_search_dropdown_item_icons_2line
com.dimas.made1.core.domain.model.DataDomain: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$styleable: int SearchView_suggestionRowLayout
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int peeked
com.airbnb.lottie.R$styleable: int MenuGroup_android_enabled
com.airbnb.lottie.parser.LayerParser: com.airbnb.lottie.parser.moshi.JsonReader$Options NAMES
com.airbnb.lottie.animation.content.RectangleContent: android.graphics.RectF rect
com.airbnb.lottie.R$attr: int actionModePasteDrawable
com.airbnb.lottie.R$attr: int ratingBarStyleSmall
com.airbnb.lottie.model.layer.ImageLayer: android.graphics.Rect src
com.airbnb.lottie.R$id: int top
com.airbnb.lottie.model.layer.CompositionLayer: java.util.List layers
com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation startOpacity
com.airbnb.lottie.parser.PolystarShapeParser: com.airbnb.lottie.parser.moshi.JsonReader$Options NAMES
com.airbnb.lottie.model.content.Mask$MaskMode: com.airbnb.lottie.model.content.Mask$MaskMode MASK_MODE_INTERSECT
com.airbnb.lottie.R$dimen: int tooltip_corner_radius
com.airbnb.lottie.R$style: int Widget_AppCompat_Spinner_Underlined
com.airbnb.lottie.model.layer.BaseLayer: android.graphics.RectF tempMaskBoundsRect
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_CompoundButton_RadioButton
com.airbnb.lottie.LottieAnimationView: java.util.Set lottieOnCompositionLoadedListeners
com.airbnb.lottie.R$style: int Base_DialogWindowTitleBackground_AppCompat
com.airbnb.lottie.R$style: int Widget_AppCompat_CompoundButton_CheckBox
com.airbnb.lottie.animation.content.EllipseContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation sizeAnimation
com.airbnb.lottie.LottieComposition: java.util.Map precomps
com.airbnb.lottie.R$styleable: int LottieAnimationView_lottie_renderMode
com.airbnb.lottie.utils.Utils: android.graphics.Path tempPath
com.airbnb.lottie.R$style: int Widget_AppCompat_Toolbar_Button_Navigation
com.airbnb.lottie.R$id: int action_mode_close_button
com.airbnb.lottie.value.LottieInterpolatedValue: android.view.animation.Interpolator interpolator
com.airbnb.lottie.R$dimen: int abc_dialog_list_padding_bottom_no_buttons
com.airbnb.lottie.R$styleable: int[] GradientColor
com.airbnb.lottie.R$styleable: int GradientColor_android_type
net.sqlcipher.MatrixCursor: int rowCount
com.airbnb.lottie.R$attr: int indeterminateProgressStyle
com.airbnb.lottie.R$styleable: int AppCompatTextHelper_android_drawableLeft
com.airbnb.lottie.model.content.GradientFill: com.airbnb.lottie.model.animatable.AnimatableGradientColorValue gradientColor
net.sqlcipher.AbstractCursor: boolean mClosed
com.airbnb.lottie.LottieAnimationView$5: int[] $SwitchMap$com$airbnb$lottie$RenderMode
com.airbnb.lottie.R$string: int abc_searchview_description_voice
com.airbnb.lottie.value.LottieInterpolatedValue: java.lang.Object endValue
com.airbnb.lottie.animation.content.GradientStrokeContent: java.lang.String name
com.airbnb.lottie.R$color: int material_grey_50
com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.animatable.AnimatablePointValue startPoint
com.airbnb.lottie.R$styleable: int[] MenuGroup
com.airbnb.lottie.R$styleable: int AppCompatTheme_listDividerAlertDialog
com.airbnb.lottie.R$styleable: int FontFamily_fontProviderPackage
com.airbnb.lottie.R$id: int multiply
com.airbnb.lottie.R$drawable: int abc_btn_switch_to_on_mtrl_00001
com.airbnb.lottie.R$attr: int buttonStyleSmall
com.airbnb.lottie.R$style: int Base_ThemeOverlay_AppCompat_Dialog
com.airbnb.lottie.R$style: int Theme_AppCompat_Light_Dialog
com.airbnb.lottie.PerformanceTracker$1: com.airbnb.lottie.PerformanceTracker this$0
com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatableFloatValue skew
com.airbnb.lottie.R$styleable: int MenuGroup_android_id
com.airbnb.lottie.R$styleable: int ButtonBarLayout_allowStacking
com.airbnb.lottie.model.content.PolystarShape: boolean hidden
com.airbnb.lottie.R$style: int Base_V23_Theme_AppCompat_Light
com.airbnb.lottie.R$attr: int dropDownListViewStyle
net.sqlcipher.database.SQLiteDatabase: long mNativeHandle
com.airbnb.lottie.R$layout: int abc_activity_chooser_view_list_item
com.airbnb.lottie.R$color: int background_floating_material_dark
com.airbnb.lottie.parser.AnimatableTransformParser: com.airbnb.lottie.parser.moshi.JsonReader$Options NAMES
com.airbnb.lottie.R$color: int material_grey_600
com.dimas.made1.core.data.source.remote.response.tv.Tv: java.lang.Integer voteCount
com.airbnb.lottie.R$dimen: int abc_action_bar_overflow_padding_end_material
net.sqlcipher.database.SQLiteDatabase: int LOCK_ACQUIRED_WARNING_TIME_IN_MS_ALWAYS_PRINT
com.airbnb.lottie.model.content.PolystarShape$Type: com.airbnb.lottie.model.content.PolystarShape$Type POLYGON
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int PEEKED_END_OBJECT
com.airbnb.lottie.R$attr: int actionModeCloseDrawable
com.airbnb.lottie.parser.ContentModelParser: com.airbnb.lottie.parser.moshi.JsonReader$Options NAMES
net.sqlcipher.R$string: int library_android_database_sqlcipher_libraryName
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: boolean $assertionsDisabled
com.airbnb.lottie.R$styleable: int SwitchCompat_track
com.airbnb.lottie.R$attr: int buttonBarNeutralButtonStyle
com.airbnb.lottie.LottieProperty: android.graphics.PointF RECTANGLE_SIZE
com.airbnb.lottie.parser.moshi.JsonReader: int[] scopes
com.airbnb.lottie.R$styleable: int AnimatedStateListDrawableCompat_android_visible
com.airbnb.lottie.R$color: int abc_hint_foreground_material_dark
com.airbnb.lottie.R$style: int Widget_AppCompat_ActivityChooserView
com.airbnb.lottie.model.content.ShapeData: java.util.List curves
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.airbnb.lottie.animation.content.GradientFillContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation colorAnimation
com.airbnb.lottie.R$attr: int contentInsetRight
com.airbnb.lottie.value.LottieFrameInfo: float endFrame
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
com.airbnb.lottie.R$style: int Widget_AppCompat_Spinner
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title
com.airbnb.lottie.R$id: int end
com.airbnb.lottie.LottieAnimationView$SavedState: int repeatMode
com.airbnb.lottie.R$styleable: int ActionBar_homeLayout
com.airbnb.lottie.value.Keyframe: java.lang.Object startValue
com.airbnb.lottie.animation.content.RectangleContent: boolean hidden
com.airbnb.lottie.parser.ShapePathParser: com.airbnb.lottie.parser.moshi.JsonReader$Options NAMES
com.airbnb.lottie.R$style: int Base_AlertDialog_AppCompat
com.airbnb.lottie.R$attr: int switchStyle
com.airbnb.lottie.LottieDrawable$16: java.lang.Object val$property
com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatablePathValue anchorPoint
com.airbnb.lottie.R$dimen: int notification_small_icon_size_as_large
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$attr: int logo
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$AvlBuilder: int size
kotlinx.coroutines.selects.SelectBuilderImpl: java.lang.Object _result
com.airbnb.lottie.R$style: int Widget_AppCompat_Light_ActionButton_Overflow
com.airbnb.lottie.R$styleable: int LottieAnimationView_lottie_imageAssetsFolder
com.airbnb.lottie.R$attr: int actionOverflowButtonStyle
com.airbnb.lottie.parser.RectangleShapeParser: com.airbnb.lottie.parser.moshi.JsonReader$Options NAMES
com.airbnb.lottie.R$id: int actions
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase$CursorFactory mFactory
net.sqlcipher.database.SQLiteDatabase: java.lang.String mPath
com.airbnb.lottie.R$string: int abc_action_bar_home_description
com.airbnb.lottie.R$attr: int layout_anchor
com.airbnb.lottie.animation.content.GradientFillContent: com.airbnb.lottie.LottieDrawable lottieDrawable
com.airbnb.lottie.model.content.ShapeStroke: java.lang.String name
com.airbnb.lottie.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Title
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$attr: int popupWindowStyle
com.airbnb.lottie.R$id: int action_image
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int PEEKED_FALSE
com.airbnb.lottie.model.content.ShapeStroke$LineCapType: com.airbnb.lottie.model.content.ShapeStroke$LineCapType[] $VALUES
com.airbnb.lottie.model.content.Repeater: java.lang.String name
com.airbnb.lottie.utils.LogcatLogger: java.util.Set loggedMessages
com.airbnb.lottie.R$style: int Widget_AppCompat_Light_AutoCompleteTextView
com.airbnb.lottie.R$id: int action_menu_presenter
net.sqlcipher.database.SQLiteDebug: boolean DEBUG_SQL_STATEMENTS
com.airbnb.lottie.R$attr: int textAppearanceSearchResultTitle
com.airbnb.lottie.R$id: int expanded_menu
com.airbnb.lottie.R$attr: int imageButtonStyle
com.airbnb.lottie.LottieCompositionFactory$7: com.airbnb.lottie.parser.moshi.JsonReader val$reader
com.airbnb.lottie.R$color: int bright_foreground_disabled_material_dark
com.airbnb.lottie.model.content.GradientStroke: java.util.List lineDashPattern
com.airbnb.lottie.LottieDrawable$11: boolean val$playEndMarkerStartFrame
com.airbnb.lottie.model.layer.BaseLayer: com.airbnb.lottie.LottieDrawable lottieDrawable
net.sqlcipher.database.SQLiteDatabase: boolean mTransactionIsSuccessful
com.airbnb.lottie.model.layer.BaseLayer: int CLIP_TO_LAYER_SAVE_FLAG
com.airbnb.lottie.model.layer.Layer: com.airbnb.lottie.model.layer.Layer$LayerType layerType
com.airbnb.lottie.model.layer.Layer: int solidColor
com.airbnb.lottie.R$attr: int buttonBarPositiveButtonStyle
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int NUMBER_CHAR_FRACTION_DIGIT
com.airbnb.lottie.R$styleable: int MenuGroup_android_visible
com.airbnb.lottie.animation.content.StrokeContent: boolean hidden
com.airbnb.lottie.parser.moshi.JsonReader$Token: com.airbnb.lottie.parser.moshi.JsonReader$Token END_DOCUMENT
com.airbnb.lottie.model.content.PolystarShape: com.airbnb.lottie.model.animatable.AnimatableFloatValue outerRadius
com.airbnb.lottie.R$style: int Base_Theme_AppCompat_Light_DialogWhenLarge
com.airbnb.lottie.R$id: int textSpacerNoTitle
com.airbnb.lottie.R$dimen: int notification_media_narrow_margin
com.airbnb.lottie.R$drawable: int abc_switch_track_mtrl_alpha
com.airbnb.lottie.LottieImageAsset: java.lang.String fileName
com.airbnb.lottie.R$attr: int textAppearanceListItem
com.airbnb.lottie.model.layer.Layer: float startFrame
com.airbnb.lottie.R$styleable: int MenuItem_contentDescription
com.airbnb.lottie.R$styleable: int ViewBackgroundHelper_backgroundTintMode
leakcanary.internal.InternalLeakCanary: kotlin.Lazy isDebuggableBuild$delegate
com.airbnb.lottie.R$styleable: int SwitchCompat_android_textOn
com.airbnb.lottie.R$attr: int listPreferredItemPaddingRight
com.airbnb.lottie.R$styleable: int LinearLayoutCompat_android_orientation
com.airbnb.lottie.R$drawable: int abc_ic_menu_overflow_material
com.airbnb.lottie.R$style: int ThemeOverlay_AppCompat
com.airbnb.lottie.R$styleable: int ActionBar_hideOnContentScroll
com.airbnb.lottie.R$attr: int dividerVertical
com.airbnb.lottie.R$layout: int abc_select_dialog_material
com.airbnb.lottie.R$drawable: int abc_cab_background_internal_bg
net.sqlcipher.database.SQLiteDatabase: int OPEN_READWRITE
com.airbnb.lottie.R$layout: int abc_action_bar_title_item
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int NUMBER_CHAR_EXP_DIGIT
com.airbnb.lottie.LottieDrawable: int RESTART
com.airbnb.lottie.R$string: int abc_searchview_description_search
com.airbnb.lottie.utils.Utils: android.graphics.Path tempPath2
com.airbnb.lottie.model.content.GradientType: com.airbnb.lottie.model.content.GradientType[] $VALUES
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int NUMBER_CHAR_DIGIT
com.airbnb.lottie.R$attr: int theme
net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType: net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType Exclusive
com.airbnb.lottie.R$drawable: int notification_bg_low_normal
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int PEEKED_NUMBER
com.airbnb.lottie.R$string: int abc_prepend_shortcut_label
net.sqlcipher.database.SupportFactory: byte[] passphrase
com.airbnb.lottie.R$color: int switch_thumb_disabled_material_light
com.airbnb.lottie.R$dimen: int abc_dialog_fixed_height_minor
com.airbnb.lottie.LottieCompositionFactory$10: java.lang.String val$cacheKey
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$AvlBuilder: int leavesSkipped
com.airbnb.lottie.R$drawable: int abc_textfield_search_activated_mtrl_alpha
com.airbnb.lottie.LottieDrawable: android.widget.ImageView$ScaleType scaleType
com.airbnb.lottie.R$style: int Base_ThemeOverlay_AppCompat_ActionBar
com.airbnb.lottie.model.FontCharacter: java.util.List shapes
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_SearchResult_Title
leakcanary.KeyedWeakReference: long retainedUptimeMillis
net.sqlcipher.database.SQLiteCompiledSql: long nStatement
com.airbnb.lottie.R$style: int Base_Theme_AppCompat
com.airbnb.lottie.R$integer: int config_tooltipAnimTime
com.airbnb.lottie.R$attr: int lottie_fallbackRes
com.airbnb.lottie.value.Keyframe: com.airbnb.lottie.LottieComposition composition
com.airbnb.lottie.R$dimen: int tooltip_margin
com.airbnb.lottie.model.layer.Layer$LayerType: com.airbnb.lottie.model.layer.Layer$LayerType[] $VALUES
com.airbnb.lottie.LottieProperty: android.graphics.PointF TRANSFORM_POSITION
com.airbnb.lottie.R$style: int Widget_AppCompat_AutoCompleteTextView
com.airbnb.lottie.model.layer.ShapeLayer: com.airbnb.lottie.animation.content.ContentGroup contentGroup
com.airbnb.lottie.R$string: int abc_capital_on
com.airbnb.lottie.R$attr: int actionDropDownStyle
net.sqlcipher.database.SQLiteDatabase: java.lang.String SQLCIPHER_ANDROID_VERSION
com.airbnb.lottie.R$attr: int contentInsetEndWithActions
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
com.airbnb.lottie.parser.moshi.JsonReader$Token: com.airbnb.lottie.parser.moshi.JsonReader$Token NUMBER
com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: android.graphics.Matrix skewMatrix1
com.airbnb.lottie.R$attr: int buttonBarButtonStyle
com.airbnb.lottie.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
com.airbnb.lottie.R$styleable: int[] ViewStubCompat
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
com.airbnb.lottie.animation.content.FillContent: android.graphics.Paint paint
com.airbnb.lottie.animation.content.BaseStrokeContent$PathGroup: java.util.List paths
com.airbnb.lottie.R$attr: int colorError
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: okio.ByteString CLOSING_BLOCK_COMMENT
com.airbnb.lottie.value.LottieFrameInfo: float interpolatedKeyframeProgress
com.airbnb.lottie.R$style: int Base_V7_Theme_AppCompat_Light_Dialog
com.airbnb.lottie.R$color: int background_floating_material_light
com.airbnb.lottie.LottieCompositionFactory$6: java.lang.String val$cacheKey
com.airbnb.lottie.R$attr: int measureWithLargestChild
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType PNG_A
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int PEEKED_SINGLE_QUOTED_NAME
com.airbnb.lottie.R$styleable: int MenuItem_android_checked
com.airbnb.lottie.R$styleable: int GradientColor_android_gradientRadius
net.sqlcipher.IContentObserver$Stub$Proxy: android.os.IBinder mRemote
com.airbnb.lottie.R$dimen: int notification_action_icon_size
com.airbnb.lottie.R$color: int primary_text_disabled_material_dark
com.airbnb.lottie.R$color: int dim_foreground_material_light
com.airbnb.lottie.model.content.PolystarShape: com.airbnb.lottie.model.content.PolystarShape$Type type
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: com.airbnb.lottie.value.LottieValueCallback valueCallback
com.airbnb.lottie.R$attr: int spinnerDropDownItemStyle
com.airbnb.lottie.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
com.airbnb.lottie.model.layer.Layer: int solidHeight
androidx.work.impl.utils.futures.AbstractFuture$Waiter: java.lang.Thread thread
com.airbnb.lottie.R$dimen: int abc_dialog_fixed_height_major
com.airbnb.lottie.R$id: int line3
net.sqlcipher.database.SQLiteCompiledSql: net.sqlcipher.database.SQLiteDatabase mDatabase
com.airbnb.lottie.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
com.airbnb.lottie.R$styleable: int AppCompatTheme_switchStyle
com.airbnb.lottie.R$style: int Widget_AppCompat_Spinner_DropDown
com.airbnb.lottie.model.content.ShapeData: boolean closed
com.airbnb.lottie.R$dimen: int abc_switch_padding
com.airbnb.lottie.LottieProperty: android.graphics.PointF TRANSFORM_ANCHOR_POINT
com.airbnb.lottie.R$style: int Widget_AppCompat_DropDownItem_Spinner
com.airbnb.lottie.R$string: int abc_shareactionprovider_share_with
com.airbnb.lottie.R$color: int foreground_material_dark
net.sqlcipher.database.SQLiteDatabase$4: android.database.sqlite.SQLiteTransactionListener val$transactionListener
com.airbnb.lottie.R$attr: int hideOnContentScroll
com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation skew
com.airbnb.lottie.model.CubicCurveData: android.graphics.PointF controlPoint1
com.airbnb.lottie.R$styleable: int AppCompatTheme_textColorSearchUrl
leakcanary.KeyedWeakReference: java.lang.String key
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Medium
net.sqlcipher.CustomCursorWindowAllocation: long growthPaddingSize
com.airbnb.lottie.R$attr: int trackTint
com.airbnb.lottie.animation.content.EllipseContent: com.airbnb.lottie.LottieDrawable lottieDrawable
com.airbnb.lottie.parser.AnimatableTextPropertiesParser: com.airbnb.lottie.parser.moshi.JsonReader$Options PROPERTIES_NAMES
com.airbnb.lottie.R$attr: int dialogTheme
com.airbnb.lottie.R$layout: int abc_expanded_menu_layout
net.sqlcipher.database.SQLiteCursor: int mCount
com.airbnb.lottie.animation.content.RepeaterContent: java.lang.String name
com.airbnb.lottie.parser.ShapeTrimPathParser: com.airbnb.lottie.parser.moshi.JsonReader$Options NAMES
com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.parser.ShapeFillParser: com.airbnb.lottie.parser.moshi.JsonReader$Options NAMES
com.airbnb.lottie.network.FileExtension: com.airbnb.lottie.network.FileExtension ZIP
com.airbnb.lottie.model.layer.BaseLayer: android.graphics.RectF rect
com.airbnb.lottie.R$style: int TextAppearance_Compat_Notification
com.airbnb.lottie.R$drawable: int abc_cab_background_top_material
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionBarSplitStyle
com.airbnb.lottie.LottieCompositionFactory$3: android.content.Context val$appContext
com.airbnb.lottie.R$attr: int navigationMode
net.sqlcipher.BulkCursorToCursorAdaptor: net.sqlcipher.AbstractCursor$SelfContentObserver mObserverBridge
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionBarTabBarStyle
com.airbnb.lottie.R$color: int secondary_text_default_material_light
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
com.airbnb.lottie.R$style: int Base_V7_Widget_AppCompat_Toolbar
net.sqlcipher.DatabaseUtils$InsertHelper: java.lang.String mTableName
com.airbnb.lottie.R$string: int abc_action_mode_done
com.dimas.made1.core.data.source.remote.response.tv.Tv: int id
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
net.sqlcipher.database.SQLiteDirectCursorDriver: java.lang.String mSql
com.airbnb.lottie.LottieDrawable: int alpha
com.airbnb.lottie.R$attr: int alertDialogButtonGroupStyle
com.airbnb.lottie.R$color: int notification_icon_bg_color
com.airbnb.lottie.R$style: int Base_V26_Theme_AppCompat
com.airbnb.lottie.R$id: int bottom
com.airbnb.lottie.R$id: int screen
com.airbnb.lottie.R$color: int primary_material_light
com.airbnb.lottie.R$style: int Platform_V25_AppCompat_Light
com.airbnb.lottie.R$styleable: int[] CoordinatorLayout
com.airbnb.lottie.R$id: int start
com.airbnb.lottie.R$styleable: int MenuItem_android_numericShortcut
com.airbnb.lottie.R$integer: int cancel_button_image_alpha
net.sqlcipher.database.SQLiteCursor: int mCursorWindowCapacity
com.airbnb.lottie.LottieDrawable: com.airbnb.lottie.TextDelegate textDelegate
com.airbnb.lottie.LottieDrawable$15: com.airbnb.lottie.LottieDrawable this$0
com.airbnb.lottie.animation.content.RectangleContent: com.airbnb.lottie.LottieDrawable lottieDrawable
com.airbnb.lottie.R$styleable: int StateListDrawable_android_visible
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_SearchView_ActionBar
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int NUMBER_CHAR_NONE
com.airbnb.lottie.R$attr: int fontProviderQuery
com.airbnb.lottie.R$anim: int abc_slide_in_bottom
com.airbnb.lottie.R$styleable: int ActionBar_popupTheme
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_SearchResult_Title
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
com.airbnb.lottie.R$id: int expand_activities_button
com.airbnb.lottie.R$attr: int tickMark
com.airbnb.lottie.R$layout: int select_dialog_multichoice_material
com.airbnb.lottie.R$attr: int alertDialogStyle
com.airbnb.lottie.R$style: int ThemeOverlay_AppCompat_Dark_ActionBar
com.airbnb.lottie.R$styleable: int MenuItem_showAsAction
com.airbnb.lottie.R$styleable: int Toolbar_titleMarginTop
leakcanary.internal.AndroidHeapDumper: leakcanary.internal.LeakDirectoryProvider leakDirectoryProvider
com.airbnb.lottie.R$color: int accent_material_light
com.airbnb.lottie.R$attr: int contentInsetEnd
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionModePopupWindowStyle
com.airbnb.lottie.R$dimen: int abc_action_bar_overflow_padding_start_material
com.airbnb.lottie.R$integer: int abc_config_activityDefaultDur
net.sqlcipher.database.SQLiteDatabase$3: byte[] val$password
com.airbnb.lottie.R$style: int Base_V7_Theme_AppCompat
com.airbnb.lottie.parser.ShapeGroupParser: com.airbnb.lottie.parser.moshi.JsonReader$Options NAMES
com.airbnb.lottie.R$attr: int actionButtonStyle
com.airbnb.lottie.R$id: int right
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$LinkedTreeMapIterator: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node next
com.airbnb.lottie.animation.content.BaseStrokeContent: float[] dashPatternValues
androidx.work.impl.utils.futures.AbstractFuture: java.lang.Object value
net.sqlcipher.AbstractCursor: android.content.ContentResolver mContentResolver
com.airbnb.lottie.R$id: int progress_circular
com.airbnb.lottie.R$styleable: int CoordinatorLayout_Layout_layout_behavior
com.airbnb.lottie.animation.content.ShapeContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation shapeAnimation
net.sqlcipher.DatabaseUtils: boolean DEBUG
com.airbnb.lottie.R$attr: int subMenuArrow
com.airbnb.lottie.animation.content.PolystarContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation pointsAnimation
com.airbnb.lottie.model.layer.Layer$MatteType: com.airbnb.lottie.model.layer.Layer$MatteType NONE
com.airbnb.lottie.R$styleable: int CompoundButton_buttonCompat
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
com.airbnb.lottie.R$id: int tag_unhandled_key_event_manager
kotlinx.coroutines.DefaultExecutor: int debugStatus
net.sqlcipher.AbstractCursor: int mPos
com.airbnb.lottie.R$layout: int abc_list_menu_item_layout
com.airbnb.lottie.R$dimen: int hint_pressed_alpha_material_dark
com.airbnb.lottie.R$anim: int abc_tooltip_exit
com.airbnb.lottie.animation.content.ContentGroup: com.airbnb.lottie.LottieDrawable lottieDrawable
com.airbnb.lottie.R$style: int Widget_AppCompat_Light_ActionBar_TabView_Inverse
com.airbnb.lottie.R$drawable: int abc_list_pressed_holo_dark
net.sqlcipher.database.SQLiteDatabase: boolean mInnerTransactionIsSuccessful
com.airbnb.lottie.R$styleable: int[] PopupWindow
com.airbnb.lottie.R$string: int abc_menu_space_shortcut_label
net.sqlcipher.AbstractCursor: java.lang.String TAG
com.airbnb.lottie.R$style: int Widget_AppCompat_Light_ActivityChooserView
androidx.work.impl.utils.futures.AbstractFuture: androidx.work.impl.utils.futures.AbstractFuture$Listener listeners
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_SeekBar
com.airbnb.lottie.R$string: int abc_menu_delete_shortcut_label
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node right
com.airbnb.lottie.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
com.airbnb.lottie.model.layer.Layer: long layerId
com.airbnb.lottie.R$style: int Widget_AppCompat_RatingBar
com.airbnb.lottie.R$layout: int support_simple_spinner_dropdown_item
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_Light_PopupMenu_Overflow
com.airbnb.lottie.R$styleable: int LinearLayoutCompat_Layout_android_layout_width
com.airbnb.lottie.model.layer.BaseLayer: com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation transform
com.airbnb.lottie.R$styleable: int ActivityChooserView_expandActivityOverflowButtonDrawable
com.airbnb.lottie.model.layer.Layer$MatteType: com.airbnb.lottie.model.layer.Layer$MatteType UNKNOWN
com.airbnb.lottie.parser.moshi.JsonReader: java.lang.String[] REPLACEMENT_CHARS
com.airbnb.lottie.LottieProperty: android.graphics.PointF ELLIPSE_SIZE
com.airbnb.lottie.R$styleable: int AppCompatTheme_listPreferredItemHeight
net.sqlcipher.database.SQLiteDatabase: java.lang.String mLastSqlStatement
com.airbnb.lottie.R$attr: int numericModifiers
com.airbnb.lottie.R$attr: int colorControlActivated
com.airbnb.lottie.LottieProperty: java.lang.Float STROKE_WIDTH
net.sqlcipher.database.SQLiteDatabase$5: net.sqlcipher.database.SQLiteDatabase this$0
com.airbnb.lottie.R$color: int bright_foreground_inverse_material_light
com.airbnb.lottie.LottieAnimationView: java.lang.String animationName
com.airbnb.lottie.LottieDrawable$7: com.airbnb.lottie.LottieDrawable this$0
com.airbnb.lottie.LottieComposition: float startFrame
net.sqlcipher.CursorWindow: int mRequiredPos
com.airbnb.lottie.R$anim: int abc_slide_in_top
com.airbnb.lottie.model.layer.Layer: java.util.List shapes
com.airbnb.lottie.R$styleable: int[] ActionBar
com.airbnb.lottie.R$string: int abc_searchview_description_clear
com.airbnb.lottie.R$style: int Widget_AppCompat_Light_ActionButton
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_DrawerArrowToggle
kotlinx.coroutines.CancellableContinuationImpl: int _decision
com.airbnb.lottie.R$styleable: int ActionBar_contentInsetRight
com.airbnb.lottie.animation.content.BaseStrokeContent: android.graphics.PathMeasure pm
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
com.airbnb.lottie.R$attr: int actionModeCloseButtonStyle
com.airbnb.lottie.R$styleable: int SwitchCompat_splitTrack
com.airbnb.lottie.R$style: int Theme_AppCompat_Light_DarkActionBar
com.airbnb.lottie.model.layer.Layer: java.util.List inOutKeyframes
com.airbnb.lottie.model.content.ShapeStroke: java.util.List lineDashPattern
com.airbnb.lottie.R$styleable: int SearchView_closeIcon
net.sqlcipher.database.SQLiteDatabase: int SQLITE_MAX_LIKE_PATTERN_LENGTH
com.airbnb.lottie.animation.content.GradientFillContent: android.graphics.Path path
com.airbnb.lottie.parser.moshi.JsonReader$Token: com.airbnb.lottie.parser.moshi.JsonReader$Token BEGIN_ARRAY
com.airbnb.lottie.R$styleable: int AppCompatTheme_buttonBarButtonStyle
com.airbnb.lottie.R$dimen: int abc_action_bar_default_padding_start_material
net.sqlcipher.database.SQLiteOpenHelper: net.sqlcipher.database.SQLiteDatabase$CursorFactory mFactory
com.airbnb.lottie.model.content.MergePaths$MergePathsMode: com.airbnb.lottie.model.content.MergePaths$MergePathsMode EXCLUDE_INTERSECTIONS
com.airbnb.lottie.LottieComposition: boolean hasDashPattern
com.airbnb.lottie.parser.LottieCompositionMoshiParser: com.airbnb.lottie.parser.moshi.JsonReader$Options MARKER_NAMES
net.sqlcipher.AbstractCursor: java.util.HashMap mUpdatedRows
com.google.android.material.badge.BadgeDrawable$SavedState: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$styleable: int PopupWindowBackgroundState_state_above_anchor
com.airbnb.lottie.model.content.ShapeStroke: com.airbnb.lottie.model.animatable.AnimatableColorValue color
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_Button_Borderless_Colored
net.sqlcipher.database.SQLiteCursor: boolean fillWindowForwardOnly
com.airbnb.lottie.R$styleable: int SwitchCompat_switchTextAppearance
leakcanary.KeyedWeakReference: java.lang.String description
com.airbnb.lottie.R$style: int Theme_AppCompat_Light
com.airbnb.lottie.R$attr: int paddingTopNoTitle
com.airbnb.lottie.animation.content.FillContent: boolean hidden
com.airbnb.lottie.R$attr: int thumbTextPadding
com.airbnb.lottie.R$styleable: int LottieAnimationView_lottie_rawRes
com.airbnb.lottie.R$id: int none
com.airbnb.lottie.R$id: int search_src_text
com.airbnb.lottie.R$styleable: int[] SearchView
com.airbnb.lottie.LottieProperty: java.lang.Float CORNER_RADIUS
com.airbnb.lottie.R$attr: int actionProviderClass
com.airbnb.lottie.parser.moshi.JsonReader: boolean lenient
com.airbnb.lottie.R$attr: int actionModeCutDrawable
com.airbnb.lottie.utils.LottieValueAnimator: boolean running
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.DatabaseErrorHandler mErrorHandler
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node header
com.airbnb.lottie.R$attr: int track
net.sqlcipher.DatabaseUtils$InsertHelper: java.lang.String mInsertSQL
com.airbnb.lottie.R$style: int Widget_AppCompat_ActionButton
com.airbnb.lottie.R$styleable: int AppCompatImageView_tintMode
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Medium_Inverse
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_Spinner
net.sqlcipher.database.SQLiteDatabase: int mSlowQueryThreshold
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Button
com.airbnb.lottie.R$color: int secondary_text_default_material_dark
com.airbnb.lottie.R$styleable: int TextAppearance_android_textStyle
net.sqlcipher.database.SQLiteCursor$MainThreadNotificationHandler: java.lang.ref.WeakReference wrappedCursor
com.airbnb.lottie.R$style: int Widget_AppCompat_Light_DropDownItem_Spinner
com.airbnb.lottie.R$attr: int layout_insetEdge
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$style: int Platform_V21_AppCompat
com.airbnb.lottie.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
com.airbnb.lottie.animation.keyframe.SplitDimensionPathKeyframeAnimation: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation yAnimation
net.sqlcipher.DatabaseUtils: java.lang.String[] countProjection
com.airbnb.lottie.R$anim: int abc_popup_enter
com.airbnb.lottie.R$style: int Base_Animation_AppCompat_Tooltip
com.airbnb.lottie.R$attr: int singleChoiceItemLayout
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: long peekedLong
com.airbnb.lottie.R$style: int Widget_AppCompat_ProgressBar_Horizontal
com.airbnb.lottie.utils.LottieValueAnimator: float speed
com.dimas.made1.core.data.source.remote.response.tv.Tv: java.lang.Double voteAverage
net.sqlcipher.database.SQLiteQueryBuilder: java.util.Map mProjectionMap
com.airbnb.lottie.R$style: int Theme_AppCompat_Dialog_Alert
com.airbnb.lottie.R$color: int abc_tint_switch_track
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapperImpl: java.util.List keyframes
com.airbnb.lottie.R$dimen: int abc_disabled_alpha_material_dark
com.airbnb.lottie.R$attr: int buttonTintMode
com.airbnb.lottie.R$id: int action_bar_root
com.airbnb.lottie.R$styleable: int[] ActivityChooserView
com.airbnb.lottie.R$style: int Base_V26_Widget_AppCompat_Toolbar
com.airbnb.lottie.R$style: int Base_Theme_AppCompat_CompactMenu
com.airbnb.lottie.R$styleable: int SwitchCompat_switchPadding
com.airbnb.lottie.R$drawable: int abc_btn_check_to_on_mtrl_015
com.airbnb.lottie.R$attr: int navigationIcon
com.airbnb.lottie.LottieDrawable: float scale
com.airbnb.lottie.R$dimen: int abc_text_size_large_material
com.airbnb.lottie.R$dimen: int abc_action_bar_elevation_material
com.airbnb.lottie.model.layer.BaseLayer$2: int[] $SwitchMap$com$airbnb$lottie$model$layer$Layer$LayerType
com.airbnb.lottie.model.content.Repeater: com.airbnb.lottie.model.animatable.AnimatableFloatValue copies
com.airbnb.lottie.utils.MiscUtils: android.graphics.PointF pathFromDataCurrentPoint
com.airbnb.lottie.R$id: int shortcut
com.airbnb.lottie.R$color: int switch_thumb_material_dark
com.airbnb.lottie.R$styleable: int GradientColor_android_startX
net.sqlcipher.DefaultCursorWindowAllocation: long WindowAllocationUnbounded
com.airbnb.lottie.R$id: int tabMode
com.airbnb.lottie.animation.content.EllipseContent: boolean isPathValid
com.airbnb.lottie.R$dimen: int abc_action_bar_subtitle_bottom_margin_material
com.airbnb.lottie.R$styleable: int SwitchCompat_thumbTextPadding
com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.animatable.AnimatablePointValue endPoint
com.airbnb.lottie.R$styleable: int AppCompatTextView_textAllCaps
com.airbnb.lottie.R$drawable: int abc_ic_go_search_api_material
com.airbnb.lottie.R$style: int Widget_AppCompat_Light_ActionBar
net.sqlcipher.database.SupportFactory: boolean clearPassphrase
com.airbnb.lottie.R$styleable: int ActionBarLayout_android_layout_gravity
com.airbnb.lottie.R$dimen: int abc_action_bar_content_inset_with_nav
net.sqlcipher.database.SQLiteCursor: int mMaxRead
com.airbnb.lottie.R$drawable: int abc_spinner_mtrl_am_alpha
com.airbnb.lottie.R$attr: int drawableSize
com.airbnb.lottie.R$styleable: int ActionMode_backgroundSplit
com.airbnb.lottie.R$attr: int selectableItemBackground
com.airbnb.lottie.animation.content.BaseStrokeContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation colorFilterAnimation
com.airbnb.lottie.R$styleable: int StateListDrawable_android_exitFadeDuration
com.airbnb.lottie.R$style: int Base_Theme_AppCompat_Dialog
com.airbnb.lottie.R$attr: int editTextStyle
com.airbnb.lottie.R$attr: int alpha
com.airbnb.lottie.LottieCompositionFactory$2: java.lang.String val$fileName
com.airbnb.lottie.R$styleable: int[] DrawerArrowToggle
com.airbnb.lottie.animation.content.ContentGroup: java.lang.String name
com.airbnb.lottie.manager.FontAssetManager: com.airbnb.lottie.model.MutablePair tempPair
com.airbnb.lottie.animation.content.EllipseContent: float ELLIPSE_CONTROL_POINT_PERCENTAGE
com.airbnb.lottie.R$styleable: int SearchView_queryBackground
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.animation.content.GradientStrokeContent: boolean hidden
com.airbnb.lottie.parser.moshi.JsonReader$Options: okio.Options doubleQuoteSuffix
com.airbnb.lottie.R$attr: int contentInsetStartWithNavigation
com.airbnb.lottie.R$dimen: int abc_action_bar_icon_vertical_padding_material
androidx.customview.widget.ExploreByTouchHelper: int mHoveredVirtualViewId
com.airbnb.lottie.utils.BaseLottieAnimator: java.util.Set updateListeners
com.airbnb.lottie.R$styleable: int DrawerArrowToggle_arrowHeadLength
com.airbnb.lottie.R$id: int add
com.airbnb.lottie.R$style: int TextAppearance_Widget_AppCompat_ExpandedMenu_Item
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: boolean isDiscrete
com.airbnb.lottie.R$styleable: int[] AlertDialog
com.airbnb.lottie.model.content.ShapeFill: boolean fillEnabled
net.sqlcipher.database.SQLiteDatabase$5: android.database.sqlite.SQLiteTransactionListener val$transactionListener
com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation position
com.airbnb.lottie.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
com.airbnb.lottie.model.content.ShapeStroke: float miterLimit
com.airbnb.lottie.R$attr: int colorSwitchThumbNormal
com.airbnb.lottie.R$layout: int abc_screen_simple_overlay_action_mode
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_CompoundButton_CheckBox
net.sqlcipher.AbstractCursor: android.database.DataSetObservable mDataSetObservable
com.airbnb.lottie.R$attr: int arrowHeadLength
com.airbnb.lottie.R$style: int Widget_AppCompat_Light_ListView_DropDown
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Colored
com.airbnb.lottie.model.layer.SolidLayer: android.graphics.RectF rect
com.airbnb.lottie.model.layer.Layer: com.airbnb.lottie.model.animatable.AnimatableTextFrame text
com.airbnb.lottie.LottieCompositionFactory$4: java.lang.String val$cacheKey
com.airbnb.lottie.animation.content.GradientFillContent: androidx.collection.LongSparseArray radialGradientCache
com.airbnb.lottie.R$drawable: int abc_list_divider_mtrl_alpha
net.sqlcipher.database.SQLiteProgram: boolean mClosed
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Light_SearchResult_Subtitle
com.airbnb.lottie.R$attr: int colorControlNormal
com.airbnb.lottie.R$styleable: int AppCompatTextView_fontVariationSettings
com.airbnb.lottie.R$drawable: int abc_dialog_material_background
com.airbnb.lottie.R$color: int primary_material_dark
com.airbnb.lottie.R$dimen: int abc_text_size_title_material_toolbar
com.airbnb.lottie.model.layer.TextLayer$2: com.airbnb.lottie.model.layer.TextLayer this$0
com.airbnb.lottie.R$attr: int windowActionBar
com.airbnb.lottie.R$dimen: int notification_main_column_padding_top
net.sqlcipher.database.SQLiteQuery: java.lang.Object[] mObjectBindArgs
com.airbnb.lottie.R$layout: int abc_popup_menu_item_layout
net.sqlcipher.database.SQLiteDirectCursorDriver: net.sqlcipher.Cursor mCursor
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
com.airbnb.lottie.R$style: int Widget_AppCompat_Light_Spinner_DropDown_ActionBar
com.airbnb.lottie.R$styleable: int AppCompatTheme_imageButtonStyle
net.sqlcipher.database.SQLiteDatabase: java.lang.String MEMORY
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: java.util.Comparator NATURAL_ORDER
com.airbnb.lottie.R$styleable: int AppCompatTheme_dropdownListPreferredItemHeight
com.airbnb.lottie.R$dimen: int abc_action_bar_default_padding_end_material
com.airbnb.lottie.R$style: int Widget_AppCompat_ActionBar_TabText
com.airbnb.lottie.R$dimen: int abc_text_size_small_material
com.airbnb.lottie.R$attr: int backgroundStacked
com.airbnb.lottie.R$id: int action_bar_activity_content
com.airbnb.lottie.R$id: int action_mode_bar
com.airbnb.lottie.R$drawable: int abc_text_cursor_material
com.airbnb.lottie.R$color: int abc_background_cache_hint_selector_material_dark
com.airbnb.lottie.R$attr: int layout_behavior
com.airbnb.lottie.R$attr: int actionBarWidgetTheme
com.airbnb.lottie.R$style: int Platform_V25_AppCompat
com.airbnb.lottie.parser.moshi.JsonReader$Token: com.airbnb.lottie.parser.moshi.JsonReader$Token BEGIN_OBJECT
com.airbnb.lottie.R$integer: int abc_config_activityShortDur
com.airbnb.lottie.R$string: int abc_activitychooserview_choose_application
com.airbnb.lottie.R$styleable: int FontFamily_fontProviderQuery
com.airbnb.lottie.model.layer.CompositionLayer: java.lang.Boolean hasMatte
com.airbnb.lottie.R$styleable: int AppCompatTheme_colorPrimaryDark
com.airbnb.lottie.R$styleable: int AppCompatTheme_listPreferredItemPaddingEnd
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Tooltip
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Display3
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_ActionBar_TabBar
com.airbnb.lottie.LottieAnimationView$SavedState: int animationResId
com.airbnb.lottie.R$style: int Widget_AppCompat_ListPopupWindow
com.airbnb.lottie.R$drawable: int abc_switch_thumb_material
com.airbnb.lottie.R$drawable: int abc_ic_menu_share_mtrl_alpha
com.airbnb.lottie.animation.content.RectangleContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation positionAnimation
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Query
com.airbnb.lottie.animation.content.ShapeContent: com.airbnb.lottie.LottieDrawable lottieDrawable
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapperImpl: com.airbnb.lottie.value.Keyframe currentKeyframe
net.sqlcipher.database.SQLiteDatabase: java.lang.String LOG_SLOW_QUERIES_PROPERTY
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
com.airbnb.lottie.parser.ShapeStrokeParser: com.airbnb.lottie.parser.moshi.JsonReader$Options NAMES
com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatableFloatValue skewAngle
com.airbnb.lottie.R$styleable: int ActionBar_indeterminateProgressStyle
com.airbnb.lottie.LottieAnimationView: boolean wasAnimatingWhenDetached
com.airbnb.lottie.animation.content.MergePathsContent: java.lang.String name
net.sqlcipher.BulkCursorToCursorAdaptor: boolean mWantsAllOnMoveCalls
net.sqlcipher.MatrixCursor: java.lang.Object[] data
net.sqlcipher.R$string: int library_android_database_sqlcipher_repositoryLink
com.airbnb.lottie.R$styleable: int AppCompatTheme_windowActionBar
net.sqlcipher.AbstractCursor: int mRowIdColumnIndex
com.airbnb.lottie.R$dimen: int abc_dialog_list_padding_top_no_title
com.airbnb.lottie.LottieComposition: float frameRate
com.airbnb.lottie.R$attr: int actionBarTheme
com.airbnb.lottie.value.Keyframe: int startValueInt
com.airbnb.lottie.model.layer.BaseLayer: com.airbnb.lottie.model.layer.BaseLayer matteLayer
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.airbnb.lottie.R$style: int Base_Theme_AppCompat_Light_Dialog_MinWidth
com.airbnb.lottie.R$attr: int goIcon
com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatableFloatValue rotation
com.airbnb.lottie.R$id: int time
com.airbnb.lottie.model.KeyPath: com.airbnb.lottie.model.KeyPath COMPOSITION
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionModeStyle
com.airbnb.lottie.animation.content.StrokeContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation colorAnimation
com.airbnb.lottie.R$styleable: int AppCompatTextView_android_textAppearance
com.airbnb.lottie.R$styleable: int FontFamily_fontProviderCerts
com.airbnb.lottie.animation.content.RectangleContent: boolean isPathValid
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType RAW
com.dimas.made1.core.data.source.remote.response.movie.Movie: java.lang.Integer voteCount
com.airbnb.lottie.animation.content.RepeaterContent: com.airbnb.lottie.model.layer.BaseLayer layer
com.airbnb.lottie.R$attr: int titleMarginBottom
com.airbnb.lottie.R$style: int Theme_AppCompat_DayNight_Dialog_MinWidth
com.airbnb.lottie.R$style: int Theme_AppCompat_CompactMenu
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node prev
com.airbnb.lottie.R$drawable: int abc_list_pressed_holo_light
com.airbnb.lottie.animation.content.GradientFillContent: android.graphics.RectF boundsRect
com.airbnb.lottie.R$style: int Base_V22_Theme_AppCompat
com.airbnb.lottie.R$attr: int actionMenuTextAppearance
com.airbnb.lottie.LottieImageAsset: int height
com.airbnb.lottie.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
com.airbnb.lottie.R$attr: int autoSizeMinTextSize
com.airbnb.lottie.R$id: int icon
com.airbnb.lottie.animation.content.FillContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation opacityAnimation
com.dimas.made1.core.data.source.remote.response.tv.Tv: java.lang.String firstAirDate
com.airbnb.lottie.R$styleable: int TextAppearance_android_shadowColor
com.airbnb.lottie.R$layout: int abc_activity_chooser_view
com.airbnb.lottie.R$styleable: int AppCompatSeekBar_tickMark
com.airbnb.lottie.R$styleable: int AnimatedStateListDrawableItem_android_drawable
com.airbnb.lottie.LottieAnimationView$2: com.airbnb.lottie.LottieAnimationView this$0
com.airbnb.lottie.R$anim: int abc_slide_out_top
com.airbnb.lottie.R$color: int primary_text_default_material_light
com.airbnb.lottie.R$styleable: int StateListDrawable_android_variablePadding
leakcanary.internal.AndroidXFragmentDestroyWatcher: leakcanary.ReachabilityWatcher reachabilityWatcher
net.sqlcipher.database.SQLiteCursor: net.sqlcipher.database.SQLiteCursor$MainThreadNotificationHandler mNotificationHandler
net.sqlcipher.database.SQLiteQueryBuilder: boolean mDistinct
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$string: int abc_activity_chooser_view_see_all
com.airbnb.lottie.R$dimen: int tooltip_precise_anchor_extra_offset
com.airbnb.lottie.animation.content.ContentGroup: com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation transformAnimation
com.airbnb.lottie.R$id: int title_template
net.sqlcipher.database.SQLiteDatabase: java.lang.String mPathForLogs
androidx.appcompat.widget.ActionMenuPresenter$SavedState: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_ProgressBar_Horizontal
com.airbnb.lottie.R$drawable: int abc_tab_indicator_mtrl_alpha
com.airbnb.lottie.R$styleable: int Toolbar_contentInsetEndWithActions
com.airbnb.lottie.R$styleable: int AppCompatTheme_colorPrimary
com.airbnb.lottie.R$styleable: int TextAppearance_android_textFontWeight
com.airbnb.lottie.R$dimen: int abc_dialog_corner_radius_material
com.airbnb.lottie.model.layer.Layer$MatteType: com.airbnb.lottie.model.layer.Layer$MatteType ADD
com.airbnb.lottie.R$drawable: int notification_tile_bg
net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType: net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType[] $VALUES
com.airbnb.lottie.R$styleable: int GradientColor_android_endY
com.airbnb.lottie.R$string: int abc_action_menu_overflow_description
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int PEEKED_SINGLE_QUOTED
com.airbnb.lottie.R$styleable: int ActionBar_logo
com.airbnb.lottie.R$styleable: int AppCompatTheme_textAppearanceSearchResultSubtitle
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionModePasteDrawable
net.sqlcipher.database.SQLiteDatabase: int OPEN_READ_MASK
com.airbnb.lottie.R$id: int search_button
com.airbnb.lottie.LottieDrawable$17: com.airbnb.lottie.value.SimpleLottieValueCallback val$callback
com.airbnb.lottie.R$styleable: int SwitchCompat_thumbTint
com.airbnb.lottie.R$id: int text
com.airbnb.lottie.R$attr: int actionModeStyle
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.CompletedExceptionally: int _handled
com.airbnb.lottie.animation.content.GradientStrokeContent: android.graphics.RectF boundsRect
com.airbnb.lottie.model.content.MergePaths: boolean hidden
net.sqlcipher.database.SQLiteDatabase: int CREATE_IF_NECESSARY
com.airbnb.lottie.parser.LottieCompositionMoshiParser: com.airbnb.lottie.parser.moshi.JsonReader$Options NAMES
com.airbnb.lottie.R$attr: int actionBarTabTextStyle
com.airbnb.lottie.R$styleable: int StateListDrawableItem_android_drawable
net.sqlcipher.database.SQLiteCursor$QueryThread: int mThreadState
net.sqlcipher.database.SupportHelper: boolean clearPassphrase
androidx.viewpager2.widget.ViewPager2$SavedState: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$attr: int backgroundTint
com.airbnb.lottie.R$styleable: int AppCompatTheme_alertDialogStyle
com.airbnb.lottie.R$styleable: int MenuItem_android_id
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapperImpl: float cachedInterpolatedProgress
com.airbnb.lottie.LottieAnimationView$SavedState: java.lang.String imageAssetsFolder
com.airbnb.lottie.model.layer.Layer: com.airbnb.lottie.model.animatable.AnimatableFloatValue timeRemapping
com.airbnb.lottie.R$styleable: int AppCompatImageView_tint
com.airbnb.lottie.parser.LayerParser: com.airbnb.lottie.parser.moshi.JsonReader$Options EFFECTS_NAMES
com.airbnb.lottie.LottieDrawable: android.animation.ValueAnimator$AnimatorUpdateListener progressUpdateListener
net.sqlcipher.database.SQLiteOpenHelper: boolean mDeferSetWriteAheadLoggingEnabled
com.airbnb.lottie.model.layer.TextLayer: android.graphics.Paint fillPaint
androidx.fragment.app.Fragment$SavedState: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$id: int async
com.airbnb.lottie.model.content.PolystarShape: com.airbnb.lottie.model.animatable.AnimatableFloatValue rotation
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
net.sqlcipher.CursorWindow: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.value.Keyframe: android.view.animation.Interpolator interpolator
net.sqlcipher.DatabaseUtils: java.text.Collator mColl
com.airbnb.lottie.model.FontCharacter: char character
com.airbnb.lottie.model.content.GradientColor: int[] colors
com.airbnb.lottie.LottieCompositionFactory$1: java.lang.String val$url
kotlinx.coroutines.selects.SeqNumber: long number
com.airbnb.lottie.R$styleable: int AppCompatTheme_windowFixedWidthMinor
com.airbnb.lottie.R$dimen: int abc_text_size_menu_header_material
com.airbnb.lottie.R$attr: int subtitleTextColor
com.airbnb.lottie.R$styleable: int SwitchCompat_trackTintMode
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$style: int Widget_AppCompat_Button_Borderless_Colored
com.dimas.made1.core.data.source.remote.response.tv.TvResponse: java.util.List results
com.airbnb.lottie.R$attr: int lottie_url
com.airbnb.lottie.R$dimen: int abc_text_size_title_material
com.airbnb.lottie.R$layout: int abc_action_mode_close_item_material
net.sqlcipher.database.SQLiteCursor: net.sqlcipher.database.SQLiteCursorDriver mDriver
com.airbnb.lottie.utils.MeanCalculator: float sum
com.airbnb.lottie.R$attr: int lottie_enableMergePathsForKitKatAndAbove
com.airbnb.lottie.R$attr: int splitTrack
com.airbnb.lottie.R$attr: int actionModeBackground
com.airbnb.lottie.R$styleable: int Toolbar_navigationIcon
net.sqlcipher.database.SQLiteDebug$PagerStats: long referencedBytes
com.airbnb.lottie.R$styleable: int AppCompatTheme_textAppearanceListItemSecondary
com.airbnb.lottie.R$dimen: int compat_control_corner_material
net.sqlcipher.database.SQLiteDatabase$4: net.sqlcipher.database.SQLiteDatabase this$0
com.airbnb.lottie.R$styleable: int ActionBar_subtitle
com.airbnb.lottie.R$style: int Widget_AppCompat_RatingBar_Indicator
com.airbnb.lottie.R$color: int material_grey_300
com.airbnb.lottie.utils.BaseLottieAnimator: java.util.Set listeners
com.airbnb.lottie.R$dimen: int tooltip_precise_anchor_threshold
com.airbnb.lottie.model.layer.TextLayer: android.graphics.Paint strokePaint
com.airbnb.lottie.parser.AnimatableTextPropertiesParser: com.airbnb.lottie.parser.moshi.JsonReader$Options ANIMATABLE_PROPERTIES_NAMES
net.sqlcipher.database.SQLiteClosable: java.lang.Object mLock
com.airbnb.lottie.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton
com.airbnb.lottie.R$id: int customPanel
com.airbnb.lottie.value.LottieValueCallback: java.lang.Object value
com.airbnb.lottie.R$attr: int displayOptions
com.airbnb.lottie.R$attr: int panelMenuListTheme
net.sqlcipher.database.SQLiteCursor: boolean mPendingData
com.airbnb.lottie.value.ScaleXY: float scaleX
com.airbnb.lottie.R$drawable: int abc_btn_default_mtrl_shape
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Tooltip
com.airbnb.lottie.R$color: int switch_thumb_normal_material_dark
com.airbnb.lottie.LottieComposition: android.graphics.Rect bounds
com.airbnb.lottie.R$attr: int backgroundTintMode
com.airbnb.lottie.animation.content.FillContent: android.graphics.Path path
com.airbnb.lottie.R$attr: int lastBaselineToBottomHeight
com.airbnb.lottie.parser.moshi.JsonScope: int DANGLING_NAME
com.airbnb.lottie.R$styleable: int PopupWindow_overlapAnchor
com.airbnb.lottie.parser.ShapeDataParser: com.airbnb.lottie.parser.moshi.JsonReader$Options NAMES
com.airbnb.lottie.R$styleable: int AppCompatTextView_drawableTopCompat
com.airbnb.lottie.R$style: int Widget_AppCompat_Light_ActionButton_CloseMode
com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatableFloatValue endOpacity
net.sqlcipher.R$string: int library_android_database_sqlcipher_licenseLink
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$AvlIterator: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node stackTop
com.airbnb.lottie.R$style: int Widget_AppCompat_SearchView_ActionBar
com.airbnb.lottie.animation.content.GradientFillContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation opacityAnimation
com.airbnb.lottie.utils.Utils: int SECOND_IN_NANOS
com.airbnb.lottie.R$attr: int buttonPanelSideLayout
com.airbnb.lottie.R$styleable: int ActionBar_navigationMode
com.airbnb.lottie.R$style: int Widget_AppCompat_ActionButton_CloseMode
com.airbnb.lottie.R$attr: int radioButtonStyle
com.airbnb.lottie.R$id: int titleDividerNoCustom
com.airbnb.lottie.R$dimen: int hint_alpha_material_light
com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: android.graphics.Matrix skewMatrix3
com.airbnb.lottie.R$styleable: int View_paddingStart
com.airbnb.lottie.model.MutablePair: java.lang.Object second
com.airbnb.lottie.utils.Utils: float dpScale
com.airbnb.lottie.R$style: int Animation_AppCompat_DropDownUp
com.airbnb.lottie.R$style: int Platform_ThemeOverlay_AppCompat
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_ListMenuView
com.airbnb.lottie.R$layout: int notification_action
com.airbnb.lottie.animation.content.GradientStrokeContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation startPointAnimation
com.airbnb.lottie.R$styleable: int CoordinatorLayout_statusBarBackground
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Medium_Inverse
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType[] $VALUES
com.airbnb.lottie.animation.content.EllipseContent: com.airbnb.lottie.animation.content.CompoundTrimPathContent trimPaths
com.airbnb.lottie.R$style: int Theme_AppCompat_Light_NoActionBar
com.airbnb.lottie.model.layer.Layer$LayerType: com.airbnb.lottie.model.layer.Layer$LayerType IMAGE
net.sqlcipher.BuildConfig: java.lang.String APPLICATION_ID
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionBarTheme
net.sqlcipher.DatabaseUtils: java.lang.String TAG
com.airbnb.lottie.R$attr: int isLightTheme
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_SeekBar_Discrete
com.airbnb.lottie.R$styleable: int AlertDialog_showTitle
com.airbnb.lottie.R$color: int notification_action_color_filter
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.airbnb.lottie.R$attr: int layout_anchorGravity
net.sqlcipher.database.SQLiteDatabase: int CONFLICT_FAIL
com.airbnb.lottie.LottieAnimationView$SavedState: java.lang.String animationName
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$KeySet: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap this$0
com.airbnb.lottie.R$id: int alertTitle
com.airbnb.lottie.R$string: int abc_menu_alt_shortcut_label
com.airbnb.lottie.R$styleable: int FontFamily_fontProviderAuthority
com.airbnb.lottie.R$layout: int notification_action_tombstone
com.airbnb.lottie.R$style: int Widget_AppCompat_ButtonBar_AlertDialog
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: java.lang.String peekedString
com.airbnb.lottie.R$attr: int coordinatorLayoutStyle
com.airbnb.lottie.animation.content.MergePathsContent$1: int[] $SwitchMap$com$airbnb$lottie$model$content$MergePaths$MergePathsMode
com.airbnb.lottie.LottieDrawable: com.airbnb.lottie.ImageAssetDelegate imageAssetDelegate
com.airbnb.lottie.animation.content.CompoundTrimPathContent: java.util.List contents
com.airbnb.lottie.LottieDrawable$17: com.airbnb.lottie.LottieDrawable this$0
com.airbnb.lottie.model.content.RectangleShape: com.airbnb.lottie.model.animatable.AnimatableValue position
com.airbnb.lottie.R$styleable: int MenuItem_android_menuCategory
com.airbnb.lottie.model.layer.BaseLayer: java.util.List animations
com.airbnb.lottie.R$attr: int windowFixedHeightMinor
net.sqlcipher.database.SQLiteDatabase: int QUERY_LOG_SQL_LENGTH
com.airbnb.lottie.LottieAnimationView: boolean playAnimationWhenShown
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_ActionButton_Overflow
com.airbnb.lottie.R$styleable: int ActionMode_background
com.airbnb.lottie.model.layer.Layer: long parentId
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int PEEKED_END_ARRAY
com.airbnb.lottie.R$dimen: int disabled_alpha_material_light
com.airbnb.lottie.model.Font: java.lang.String name
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Widget_Switch
com.airbnb.lottie.parser.GradientFillParser: com.airbnb.lottie.parser.moshi.JsonReader$Options NAMES
com.airbnb.lottie.LottieCompositionFactory$11: java.lang.String val$cacheKey
com.airbnb.lottie.R$styleable: int ActionMode_titleTextStyle
com.airbnb.lottie.manager.ImageAssetManager: java.lang.String imagesFolder
com.airbnb.lottie.R$style: int RtlOverlay_Widget_AppCompat_DialogTitle_Icon
net.sqlcipher.database.SQLiteDebug$PagerStats: java.util.ArrayList dbStats
com.airbnb.lottie.R$attr: int iconifiedByDefault
net.sqlcipher.CustomCursorWindowAllocation: long maxAllocationSize
com.airbnb.lottie.utils.Utils: float INV_SQRT_2
com.airbnb.lottie.R$id: int lottie_layer_name
com.airbnb.lottie.model.layer.BaseLayer: com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation inOutAnimation
com.airbnb.lottie.R$dimen: int abc_dropdownitem_icon_width
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$color: int abc_tint_seek_thumb
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object onCloseHandler
com.airbnb.lottie.R$attr: int lottie_cacheComposition
com.airbnb.lottie.R$color: int material_grey_100
net.sqlcipher.database.SQLiteDatabase: int SLEEP_AFTER_YIELD_QUANTUM
com.airbnb.lottie.model.content.ShapeStroke$LineJoinType: com.airbnb.lottie.model.content.ShapeStroke$LineJoinType[] $VALUES
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: int threshold
com.airbnb.lottie.R$attr: int borderlessButtonStyle
com.airbnb.lottie.animation.content.StrokeContent: com.airbnb.lottie.model.layer.BaseLayer layer
com.airbnb.lottie.R$dimen: int abc_dialog_min_width_major
com.airbnb.lottie.R$styleable: int CoordinatorLayout_Layout_layout_keyline
net.sqlcipher.database.SQLiteProgram: long nHandle
com.airbnb.lottie.LottieProperty: java.lang.Float TIME_REMAP
com.airbnb.lottie.R$style: int Base_ThemeOverlay_AppCompat
com.airbnb.lottie.R$attr: int searchHintIcon
com.airbnb.lottie.model.content.RectangleShape: java.lang.String name
com.airbnb.lottie.LottieProperty: java.lang.Integer TRANSFORM_OPACITY
com.airbnb.lottie.LottieAnimationView: int buildDrawingCacheDepth
com.airbnb.lottie.R$styleable: int[] StateListDrawable
com.airbnb.lottie.model.animatable.AnimatableTextProperties: com.airbnb.lottie.model.animatable.AnimatableFloatValue tracking
com.airbnb.lottie.R$attr: int autoSizeTextType
com.airbnb.lottie.R$styleable: int DrawerArrowToggle_barLength
com.airbnb.lottie.R$styleable: int FontFamilyFont_fontWeight
com.airbnb.lottie.model.Marker: java.lang.String CARRIAGE_RETURN
com.airbnb.lottie.BuildConfig: boolean DEBUG
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_ImageButton
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Inverse
com.airbnb.lottie.LottieDrawable: boolean performanceTrackingEnabled
com.airbnb.lottie.parser.KeyframeParser: float MAX_CP_VALUE
com.airbnb.lottie.R$drawable: int abc_ratingbar_material
com.airbnb.lottie.R$id: int action_bar_spinner
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_ListView_Menu
com.airbnb.lottie.model.layer.ImageLayer: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation colorFilterAnimation
com.airbnb.lottie.animation.content.PolystarContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation innerRadiusAnimation
com.airbnb.lottie.value.Keyframe: float UNSET_FLOAT
com.airbnb.lottie.LottieDrawable$ColorFilterData: java.lang.String layerName
com.google.android.material.timepicker.TimeModel: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$dimen: int abc_text_size_display_1_material
com.airbnb.lottie.LottieResult: java.lang.Object value
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_ActionButton
com.airbnb.lottie.R$dimen: int abc_floating_window_z
com.airbnb.lottie.model.layer.Layer$LayerType: com.airbnb.lottie.model.layer.Layer$LayerType SHAPE
com.airbnb.lottie.model.layer.Layer: com.airbnb.lottie.model.animatable.AnimatableTextProperties textProperties
com.airbnb.lottie.R$styleable: int AppCompatTextHelper_android_drawableRight
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node next
com.airbnb.lottie.animation.content.ShapeContent: java.lang.String name
net.sqlcipher.database.SQLiteDebug$DbStats: java.lang.String dbName
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Inverse
com.airbnb.lottie.LottieCompositionFactory$4: java.io.InputStream val$stream
com.airbnb.lottie.R$drawable: int abc_list_divider_material
com.airbnb.lottie.R$attr: int titleMarginStart
com.airbnb.lottie.R$id: int action_bar_container
com.airbnb.lottie.R$dimen: int highlight_alpha_material_dark
com.airbnb.lottie.R$styleable: int MenuItem_tooltipText
com.airbnb.lottie.model.layer.BaseLayer: android.graphics.RectF maskBoundsRect
com.airbnb.lottie.R$styleable: int AppCompatTheme_colorButtonNormal
com.airbnb.lottie.R$styleable: int[] AnimatedStateListDrawableTransition
com.airbnb.lottie.animation.content.TrimPathContent: boolean hidden
com.airbnb.lottie.model.content.GradientFill: com.airbnb.lottie.model.animatable.AnimatablePointValue startPoint
com.airbnb.lottie.R$styleable: int GradientColor_android_centerX
com.airbnb.lottie.R$style: int TextAppearance_Compat_Notification_Title
com.airbnb.lottie.R$styleable: int[] AppCompatImageView
com.airbnb.lottie.R$attr: int commitIcon
com.airbnb.lottie.model.content.PolystarShape$Type: int value
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int PEEKED_BUFFERED
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: okio.Buffer buffer
com.airbnb.lottie.R$dimen: int notification_content_margin_start
com.airbnb.lottie.R$integer: int status_bar_notification_info_maxnum
com.airbnb.lottie.animation.keyframe.PointKeyframeAnimation: android.graphics.PointF point
com.airbnb.lottie.R$attr: int srcCompat
net.sqlcipher.database.SQLiteProgram: net.sqlcipher.database.SQLiteCompiledSql mCompiledSql
net.sqlcipher.DefaultDatabaseErrorHandler: java.lang.String TAG
com.airbnb.lottie.R$attr: int selectableItemBackgroundBorderless
net.sqlcipher.database.SQLiteDatabase: java.lang.String COMMIT_SQL
net.sqlcipher.CustomCursorWindowAllocation: long initialAllocationSize
com.airbnb.lottie.R$attr: int subtitle
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int PEEKED_EOF
com.airbnb.lottie.R$attr: int initialActivityCount
com.airbnb.lottie.R$style: int Base_ThemeOverlay_AppCompat_Dark
com.airbnb.lottie.animation.keyframe.ShapeKeyframeAnimation: android.graphics.Path tempPath
com.airbnb.lottie.R$id: int action_context_bar
com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatableValue position
com.airbnb.lottie.R$dimen: int compat_button_padding_horizontal_material
com.airbnb.lottie.model.layer.BaseLayer: android.graphics.Path path
com.airbnb.lottie.model.layer.Layer$LayerType: com.airbnb.lottie.model.layer.Layer$LayerType UNKNOWN
com.airbnb.lottie.R$styleable: int ActionBar_subtitleTextStyle
net.sqlcipher.database.SQLiteOpenHelper: net.sqlcipher.database.SQLiteDatabase mDatabase
com.airbnb.lottie.parser.FontParser: com.airbnb.lottie.parser.moshi.JsonReader$Options NAMES
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionModeCutDrawable
com.airbnb.lottie.model.layer.TextLayer: android.graphics.Matrix matrix
net.sqlcipher.database.SQLiteDatabase: int OPEN_READONLY
com.airbnb.lottie.R$drawable: int notification_bg_normal
com.airbnb.lottie.LottieCompositionFactory$5: java.lang.String val$cacheKey
com.airbnb.lottie.R$id: int checkbox
net.sqlcipher.database.SQLiteDebug$PagerStats: int memoryUsed
com.airbnb.lottie.R$styleable: int MenuView_android_horizontalDivider
com.airbnb.lottie.LottieCompositionFactory$2: android.content.Context val$appContext
com.airbnb.lottie.R$attr: int panelBackground
com.airbnb.lottie.R$styleable: int AppCompatTextHelper_android_drawableEnd
com.airbnb.lottie.LottieDrawable$1: com.airbnb.lottie.LottieDrawable this$0
com.airbnb.lottie.model.CubicCurveData: android.graphics.PointF vertex
com.airbnb.lottie.R$styleable: int SearchView_goIcon
com.airbnb.lottie.R$dimen: int tooltip_y_offset_non_touch
com.airbnb.lottie.model.layer.ImageLayer: android.graphics.Paint paint
com.airbnb.lottie.animation.content.TrimPathContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation offsetAnimation
com.airbnb.lottie.manager.ImageAssetManager: java.util.Map imageAssets
com.airbnb.lottie.parser.moshi.JsonScope: int NONEMPTY_DOCUMENT
net.sqlcipher.database.SQLiteOpenHelper: int mNewVersion
com.airbnb.lottie.R$drawable: int notification_action_background
com.airbnb.lottie.R$styleable: int ViewStubCompat_android_id
com.airbnb.lottie.R$styleable: int[] ListPopupWindow
com.airbnb.lottie.R$styleable: int ViewBackgroundHelper_backgroundTint
com.airbnb.lottie.model.content.GradientFill: boolean hidden
com.airbnb.lottie.R$styleable: int AppCompatTheme_autoCompleteTextViewStyle
com.airbnb.lottie.R$styleable: int ActionBar_background
com.airbnb.lottie.R$styleable: int AppCompatTheme_dialogCornerRadius
com.airbnb.lottie.R$style: int Base_V23_Theme_AppCompat
com.airbnb.lottie.parser.JsonUtils: com.airbnb.lottie.parser.moshi.JsonReader$Options POINT_NAMES
com.airbnb.lottie.LottieDrawable$8: java.lang.String val$markerName
com.airbnb.lottie.LottieDrawable: com.airbnb.lottie.FontAssetDelegate fontAssetDelegate
com.airbnb.lottie.R$style: int Widget_AppCompat_Light_PopupMenu_Overflow
com.airbnb.lottie.R$drawable: int abc_scrubber_control_off_mtrl_alpha
com.airbnb.lottie.R$styleable: int[] View
com.airbnb.lottie.model.layer.TextLayer: java.util.Map contentsForCharacter
com.airbnb.lottie.R$attr: int showAsAction
com.airbnb.lottie.R$drawable: int abc_ic_menu_cut_mtrl_alpha
com.airbnb.lottie.R$style: int Theme_AppCompat_Dialog_MinWidth
com.airbnb.lottie.R$style: int Widget_Compat_NotificationActionContainer
net.sqlcipher.BulkCursorProxy: android.os.IBinder mRemote
com.airbnb.lottie.model.content.ShapeTrimPath$Type: com.airbnb.lottie.model.content.ShapeTrimPath$Type INDIVIDUALLY
com.airbnb.lottie.R$attr: int spinBars
com.airbnb.lottie.R$color: int material_deep_teal_200
com.airbnb.lottie.model.animatable.AnimatableSplitDimensionPathValue: com.airbnb.lottie.model.animatable.AnimatableFloatValue animatableXDimension
net.sqlcipher.database.SQLiteDatabase$SyncUpdateInfo: java.lang.String foreignKey
com.airbnb.lottie.model.content.ShapeStroke$LineCapType: com.airbnb.lottie.model.content.ShapeStroke$LineCapType UNKNOWN
com.airbnb.lottie.animation.content.FillContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation colorFilterAnimation
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
com.airbnb.lottie.R$attr: int showText
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int PEEKED_DOUBLE_QUOTED_NAME
com.airbnb.lottie.R$styleable: int SearchView_defaultQueryHint
com.airbnb.lottie.R$dimen: int abc_edit_text_inset_top_material
com.airbnb.lottie.R$id: int up
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_TextView_SpinnerItem
com.airbnb.lottie.animation.content.PolystarContent: com.airbnb.lottie.LottieDrawable lottieDrawable
com.airbnb.lottie.R$styleable: int DrawerArrowToggle_gapBetweenBars
com.airbnb.lottie.LottieDrawable$10: com.airbnb.lottie.LottieDrawable this$0
net.sqlcipher.database.SQLiteDebug: int sNumActiveCursorsFinalized
com.airbnb.lottie.model.DocumentData$Justification: com.airbnb.lottie.model.DocumentData$Justification LEFT_ALIGN
com.airbnb.lottie.LottieComposition: androidx.collection.LongSparseArray layerMap
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
com.airbnb.lottie.R$styleable: int AppCompatTheme_popupWindowStyle
com.airbnb.lottie.model.layer.Layer: com.airbnb.lottie.model.animatable.AnimatableTransform transform
com.airbnb.lottie.R$styleable: int SearchView_searchHintIcon
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_Light_ActionBar_Solid
com.airbnb.lottie.manager.FontAssetManager: java.util.Map fontFamilies
com.airbnb.lottie.utils.Utils: float[] points
com.airbnb.lottie.R$dimen: int compat_notification_large_icon_max_width
com.airbnb.lottie.R$styleable: int AppCompatTheme_textAppearanceLargePopupMenu
leakcanary.internal.AndroidSupportFragmentDestroyWatcher: leakcanary.internal.AndroidSupportFragmentDestroyWatcher$fragmentLifecycleCallbacks$1 fragmentLifecycleCallbacks
com.airbnb.lottie.R$attr: int paddingBottomNoButtons
com.airbnb.lottie.R$attr: int progressBarStyle
com.airbnb.lottie.R$attr: int statusBarBackground
com.airbnb.lottie.animation.keyframe.MaskKeyframeAnimation: java.util.List masks
com.airbnb.lottie.animation.content.FillContent: com.airbnb.lottie.model.layer.BaseLayer layer
com.airbnb.lottie.R$id: int home
com.airbnb.lottie.model.layer.Layer: java.lang.String layerName
net.sqlcipher.database.SupportFactory: net.sqlcipher.database.SQLiteDatabaseHook hook
net.sqlcipher.database.SQLiteCursor: net.sqlcipher.database.SQLiteDatabase mDatabase
net.sqlcipher.AbstractCursor$SelfContentObserver: java.lang.ref.WeakReference mCursor
com.airbnb.lottie.R$layout: int abc_cascading_menu_item_layout
com.airbnb.lottie.model.layer.CompositionLayer: android.graphics.Paint layerPaint
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int NUMBER_CHAR_EXP_E
net.sqlcipher.database.SQLiteCursor: int mCursorState
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$color: int abc_tint_spinner
com.airbnb.lottie.parser.KeyframeParser: com.airbnb.lottie.parser.moshi.JsonReader$Options NAMES
com.airbnb.lottie.LottieDrawable$11: java.lang.String val$endMarkerName
com.airbnb.lottie.R$drawable: int abc_scrubber_control_to_pressed_mtrl_005
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Subhead_Inverse
androidx.appcompat.widget.AppCompatImageView: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
com.airbnb.lottie.R$styleable: int AppCompatTextView_drawableEndCompat
net.sqlcipher.Cursor: int FIELD_TYPE_NULL
com.airbnb.lottie.R$color: int abc_primary_text_material_light
com.airbnb.lottie.model.DocumentData: java.lang.String fontName
com.airbnb.lottie.animation.content.BaseStrokeContent: android.graphics.RectF rect
com.airbnb.lottie.BuildConfig: java.lang.String FLAVOR
com.airbnb.lottie.model.Font: java.lang.String style
com.airbnb.lottie.model.DocumentData: java.lang.String text
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Body2
com.airbnb.lottie.R$styleable: int DrawerArrowToggle_spinBars
com.airbnb.lottie.R$style: int Theme_AppCompat_DayNight_DarkActionBar
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_PopupMenu_Overflow
com.airbnb.lottie.R$styleable: int ActionBar_backgroundSplit
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_ActionMode
com.airbnb.lottie.parser.GradientStrokeParser: com.airbnb.lottie.parser.moshi.JsonReader$Options DASH_PATTERN_NAMES
net.sqlcipher.database.SQLiteDebug: boolean DEBUG_LOCK_TIME_TRACKING
com.airbnb.lottie.R$attr: int alertDialogTheme
com.airbnb.lottie.L: java.lang.String[] sections
com.airbnb.lottie.R$drawable: int abc_list_longpressed_holo
leakcanary.internal.InternalLeakCanary: boolean applicationVisible
com.airbnb.lottie.L: int depthPastMaxDepth
com.airbnb.lottie.R$styleable: int Toolbar_titleMargin
com.airbnb.lottie.RenderMode: com.airbnb.lottie.RenderMode AUTOMATIC
net.sqlcipher.database.SQLiteDatabase: java.util.WeakHashMap mPrograms
com.airbnb.lottie.parser.PointFParser: com.airbnb.lottie.parser.PointFParser INSTANCE
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
com.airbnb.lottie.LottieDrawable$11: com.airbnb.lottie.LottieDrawable this$0
com.airbnb.lottie.R$color: int bright_foreground_inverse_material_dark
com.airbnb.lottie.R$styleable: int MenuView_preserveIconSpacing
com.airbnb.lottie.R$dimen: int tooltip_vertical_padding
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_RatingBar
com.airbnb.lottie.model.layer.CompositionLayer: java.lang.Boolean hasMasks
com.airbnb.lottie.R$styleable: int AppCompatTheme_alertDialogCenterButtons
net.sqlcipher.database.SQLiteQueryBuilder: java.lang.String TAG
com.airbnb.lottie.R$style: int Widget_AppCompat_PopupWindow
com.airbnb.lottie.model.content.ShapeStroke: com.airbnb.lottie.model.content.ShapeStroke$LineJoinType joinType
com.airbnb.lottie.R$dimen: int abc_alert_dialog_button_bar_height
com.airbnb.lottie.R$dimen: int abc_action_bar_default_height_material
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Large_Inverse
com.airbnb.lottie.R$dimen: int abc_button_inset_horizontal_material
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: okio.ByteString LINEFEED_OR_CARRIAGE_RETURN
com.airbnb.lottie.R$attr: int thumbTint
com.airbnb.lottie.animation.content.RepeaterContent: android.graphics.Matrix matrix
net.sqlcipher.BulkCursorToCursorAdaptor: java.lang.String TAG
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$styleable: int LottieAnimationView_lottie_speed
com.airbnb.lottie.R$styleable: int ActionBar_titleTextStyle
com.airbnb.lottie.R$color: int abc_primary_text_disable_only_material_dark
com.airbnb.lottie.R$drawable: int abc_textfield_activated_mtrl_alpha
com.airbnb.lottie.animation.content.ShapeContent: boolean isPathValid
com.airbnb.lottie.R$attr: int listChoiceBackgroundIndicator
com.airbnb.lottie.R$id: int action_container
com.airbnb.lottie.R$attr: int thumbTintMode
com.airbnb.lottie.R$id: int textSpacerNoButtons
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Display2
com.airbnb.lottie.R$id: int action_bar_title
com.airbnb.lottie.LottieCompositionFactory$7: java.lang.String val$cacheKey
com.airbnb.lottie.parser.FontCharacterParser: com.airbnb.lottie.parser.moshi.JsonReader$Options DATA_NAMES
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: int modCount
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title
com.google.android.material.datepicker.DateValidatorPointForward: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$style: int Base_ThemeOverlay_AppCompat_Light
com.dimas.made1.core.data.source.remote.response.tv.Tv: java.lang.String overview
com.airbnb.lottie.R$color: int abc_search_url_text_normal
com.airbnb.lottie.R$styleable: int AlertDialog_buttonPanelSideLayout
com.airbnb.lottie.L: int traceDepth
com.airbnb.lottie.model.content.ShapeTrimPath: boolean hidden
com.airbnb.lottie.animation.content.ContentGroup: android.graphics.RectF offScreenRectF
com.airbnb.lottie.LottieProperty: java.lang.Integer OPACITY
com.airbnb.lottie.value.Keyframe: float startValueFloat
com.dimas.made1.core.data.source.remote.response.tv.Tv: java.lang.String name
com.airbnb.lottie.manager.FontAssetManager: java.lang.String defaultFontFileExtension
com.airbnb.lottie.R$drawable: int abc_ic_search_api_material
com.airbnb.lottie.R$attr: int listItemLayout
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$style: int Widget_AppCompat_ListMenuView
com.airbnb.lottie.R$styleable: int CoordinatorLayout_keylines
com.airbnb.lottie.R$styleable: int AppCompatTheme_listMenuViewStyle
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
com.airbnb.lottie.R$style: int Widget_AppCompat_PopupMenu_Overflow
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$SingleKeyframeWrapper: com.airbnb.lottie.value.Keyframe keyframe
net.sqlcipher.MatrixCursor$RowBuilder: int index
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionModeWebSearchDrawable
com.airbnb.lottie.R$dimen: int abc_text_size_body_1_material
com.airbnb.lottie.R$styleable: int TextAppearance_textAllCaps
com.airbnb.lottie.utils.MeanCalculator: int n
com.airbnb.lottie.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut
com.google.android.material.stateful.ExtendableSavedState: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$style: int Widget_AppCompat_ActionBar
com.airbnb.lottie.model.content.GradientFill: android.graphics.Path$FillType fillType
com.airbnb.lottie.R$style: int Widget_AppCompat_ActionBar_Solid
com.airbnb.lottie.R$color: int bright_foreground_material_light
com.airbnb.lottie.R$attr: int divider
com.airbnb.lottie.LottieImageAsset: java.lang.String id
com.airbnb.lottie.R$styleable: int ActionBar_contentInsetStart
com.airbnb.lottie.R$attr: int lottie_scale
com.airbnb.lottie.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.airbnb.lottie.utils.LottieValueAnimator: boolean speedReversedForRepeatMode
com.airbnb.lottie.animation.content.ContentGroup: android.graphics.Paint offScreenPaint
com.airbnb.lottie.R$styleable: int TextAppearance_fontFamily
com.airbnb.lottie.R$layout: int abc_tooltip
com.airbnb.lottie.R$styleable: int AppCompatTextView_drawableRightCompat
com.airbnb.lottie.R$styleable: int[] CompoundButton
com.airbnb.lottie.R$style: int TextAppearance_Compat_Notification_Time
com.airbnb.lottie.model.layer.TextLayer: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation strokeWidthAnimation
com.airbnb.lottie.animation.content.FillContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation colorAnimation
com.airbnb.lottie.R$style: int Base_V22_Theme_AppCompat_Light
com.airbnb.lottie.model.content.ShapeTrimPath: com.airbnb.lottie.model.animatable.AnimatableFloatValue start
com.airbnb.lottie.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
com.airbnb.lottie.R$dimen: int abc_seekbar_track_background_height_material
com.airbnb.lottie.model.content.ShapeStroke$1: int[] $SwitchMap$com$airbnb$lottie$model$content$ShapeStroke$LineCapType
com.airbnb.lottie.LottieDrawable: boolean isDirty
com.airbnb.lottie.R$dimen: int compat_notification_large_icon_max_height
com.airbnb.lottie.R$dimen: int abc_disabled_alpha_material_light
com.airbnb.lottie.R$attr: int textAppearanceSearchResultSubtitle
com.airbnb.lottie.R$drawable: int abc_cab_background_top_mtrl_alpha
com.airbnb.lottie.R$styleable: int[] ViewBackgroundHelper
com.airbnb.lottie.model.LottieCompositionCache: com.airbnb.lottie.model.LottieCompositionCache INSTANCE
com.airbnb.lottie.animation.content.BaseStrokeContent: java.util.List dashPatternAnimations
com.airbnb.lottie.TextDelegate: boolean cacheText
com.airbnb.lottie.R$attr: int homeAsUpIndicator
com.airbnb.lottie.R$styleable: int AppCompatTheme_spinnerDropDownItemStyle
shark.AndroidResourceIdNames: int FIRST_APP_RESOURCE_ID
com.airbnb.lottie.animation.keyframe.SplitDimensionPathKeyframeAnimation: android.graphics.PointF point
net.sqlcipher.database.SQLiteDatabase: int NO_LOCALIZED_COLLATORS
net.sqlcipher.database.SQLiteDebug$PagerStats: int largestMemAlloc
com.airbnb.lottie.R$styleable: int Toolbar_menu
com.airbnb.lottie.LottieDrawable: java.util.ArrayList lazyCompositionTasks
com.airbnb.lottie.R$anim: int abc_shrink_fade_out_from_bottom
com.airbnb.lottie.R$attr: int windowMinWidthMajor
kotlinx.coroutines.selects.SelectBuilderImpl: java.lang.Object _state
com.airbnb.lottie.R$styleable: int ActionBar_contentInsetEndWithActions
com.airbnb.lottie.R$style: int Base_V21_Theme_AppCompat_Light
com.airbnb.lottie.R$styleable: int Toolbar_contentInsetRight
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Display1
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Small
com.airbnb.lottie.R$attr: int titleMargin
com.airbnb.lottie.animation.content.RectangleContent: android.graphics.Path path
com.airbnb.lottie.R$attr: int lottie_loop
com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.animatable.AnimatableIntegerValue opacity
com.airbnb.lottie.R$id: int progress_horizontal
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Widget_Button_Borderless_Colored
net.sqlcipher.database.SQLiteProgram: java.lang.String TAG
com.airbnb.lottie.model.content.RectangleShape: boolean hidden
com.airbnb.lottie.R$drawable: int tooltip_frame_light
com.airbnb.lottie.R$styleable: int Toolbar_popupTheme
com.airbnb.lottie.model.DocumentData$Justification: com.airbnb.lottie.model.DocumentData$Justification CENTER
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
com.airbnb.lottie.R$attr: int lottie_colorFilter
com.airbnb.lottie.R$styleable: int ActionBar_progressBarPadding
com.airbnb.lottie.LottieDrawable$9: java.lang.String val$markerName
com.airbnb.lottie.model.layer.BaseLayer: android.graphics.Paint dstOutPaint
com.airbnb.lottie.R$color: int material_grey_900
com.airbnb.lottie.value.Keyframe: float startProgress
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$drawable: int abc_scrubber_primary_mtrl_alpha
com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatableScaleValue scale
com.airbnb.lottie.R$color: int switch_thumb_normal_material_light
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
com.airbnb.lottie.LottieComposition$Factory$ListenerAdapter: com.airbnb.lottie.OnCompositionLoadedListener listener
com.airbnb.lottie.R$styleable: int CompoundButton_buttonTintMode
com.airbnb.lottie.R$dimen: int abc_dialog_padding_material
com.airbnb.lottie.R$attr: int checkedTextViewStyle
com.airbnb.lottie.R$attr: int actionModePopupWindowStyle
net.sqlcipher.database.SQLiteDatabase: java.lang.String KEY_ENCODING
com.airbnb.lottie.model.content.Repeater: com.airbnb.lottie.model.animatable.AnimatableTransform transform
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_ProgressBar
com.airbnb.lottie.model.content.Mask$MaskMode: com.airbnb.lottie.model.content.Mask$MaskMode MASK_MODE_SUBTRACT
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Large
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionMenuTextAppearance
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$EntrySet: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap this$0
com.airbnb.lottie.R$styleable: int AppCompatTheme_textAppearanceListItem
com.airbnb.lottie.LottieDrawable$2: com.airbnb.lottie.LottieDrawable this$0
com.airbnb.lottie.R$attr: int fontProviderCerts
net.sqlcipher.database.SupportHelper$1: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration val$configuration
com.airbnb.lottie.R$attr: int listPreferredItemHeightSmall
com.airbnb.lottie.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
com.airbnb.lottie.R$dimen: int hint_alpha_material_dark
com.airbnb.lottie.R$attr: int titleMarginEnd
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionBarWidgetTheme
com.airbnb.lottie.network.FileExtension: java.lang.String extension
com.airbnb.lottie.animation.keyframe.PathKeyframeAnimation: android.graphics.PathMeasure pathMeasure
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionModeCloseContentDescription
com.airbnb.lottie.R$attr: int fontProviderPackage
com.airbnb.lottie.R$styleable: int DrawerArrowToggle_arrowShaftLength
com.airbnb.lottie.R$styleable: int Toolbar_titleMarginBottom
com.airbnb.lottie.R$styleable: int[] TextAppearance
com.airbnb.lottie.R$dimen: int notification_right_icon_size
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
com.airbnb.lottie.R$color: int highlighted_text_material_light
com.airbnb.lottie.model.content.ShapeTrimPath: com.airbnb.lottie.model.content.ShapeTrimPath$Type type
com.airbnb.lottie.R$dimen: int compat_button_inset_horizontal_material
net.sqlcipher.database.SQLiteCursor: int NO_COUNT
com.airbnb.lottie.R$dimen: int notification_big_circle_margin
com.airbnb.lottie.R$styleable: int SearchView_searchIcon
com.airbnb.lottie.R$styleable: int AppCompatTheme_windowNoTitle
com.airbnb.lottie.animation.content.PolystarContent: android.graphics.Path path
leakcanary.internal.InternalLeakCanary: android.app.Activity resumedActivity
com.airbnb.lottie.R$styleable: int[] AppCompatSeekBar
com.airbnb.lottie.R$attr: int barLength
com.airbnb.lottie.LottieProperty: java.lang.Float REPEATER_COPIES
com.airbnb.lottie.R$dimen: int notification_subtext_size
com.airbnb.lottie.R$styleable: int RecycleListView_paddingTopNoTitle
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Title
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Title_Inverse
com.airbnb.lottie.animation.keyframe.PathKeyframe: android.graphics.Path path
net.sqlcipher.database.SQLiteCursor: int mInitialRead
com.airbnb.lottie.R$attr: int buttonIconDimen
com.airbnb.lottie.R$dimen: int abc_dialog_min_width_minor
com.airbnb.lottie.LottieAnimationView$SavedState: float progress
com.airbnb.lottie.R$styleable: int MenuView_android_windowAnimationStyle
com.airbnb.lottie.R$dimen: int abc_alert_dialog_button_dimen
com.airbnb.lottie.R$styleable: int AppCompatTheme_windowActionModeOverlay
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
com.airbnb.lottie.R$color: int bright_foreground_disabled_material_light
net.sqlcipher.AbstractCursor: android.database.ContentObserver mSelfObserver
com.airbnb.lottie.model.content.ShapeStroke$LineJoinType: com.airbnb.lottie.model.content.ShapeStroke$LineJoinType BEVEL
net.sqlcipher.database.SQLiteDatabase: long mLastLockMessageTime
com.airbnb.lottie.R$styleable: int FontFamilyFont_android_ttcIndex
com.airbnb.lottie.model.content.GradientFill: com.airbnb.lottie.model.animatable.AnimatableFloatValue highlightAngle
com.airbnb.lottie.R$attr: int popupMenuStyle
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Widget_Button
com.airbnb.lottie.model.layer.BaseLayer: java.lang.String drawTraceName
leakcanary.internal.InternalLeakCanary: java.lang.String version
kotlinx.coroutines.InvokeOnCancelling: int _invoked
com.airbnb.lottie.R$attr: int homeLayout
com.airbnb.lottie.R$layout: int select_dialog_singlechoice_material
com.airbnb.lottie.LottieCompositionFactory$3: int val$rawRes
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Display3
com.airbnb.lottie.parser.ScaleXYParser: com.airbnb.lottie.parser.ScaleXYParser INSTANCE
com.airbnb.lottie.LottieDrawable$13: com.airbnb.lottie.LottieDrawable this$0
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node: java.lang.Object value
com.airbnb.lottie.R$attr: int ttcIndex
com.airbnb.lottie.LottieTask$1: com.airbnb.lottie.LottieTask this$0
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_SearchResult_Subtitle
com.airbnb.lottie.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
com.airbnb.lottie.R$styleable: int AppCompatTheme_selectableItemBackgroundBorderless
com.google.android.material.bottomnavigation.BottomNavigationView$SavedState: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$styleable: int MenuItem_android_icon
net.sqlcipher.database.SQLiteQuery: int mOffsetIndex
com.airbnb.lottie.R$layout: int abc_alert_dialog_material
com.airbnb.lottie.R$styleable: int GradientColor_android_startY
com.airbnb.lottie.R$style: int Widget_AppCompat_EditText
com.airbnb.lottie.animation.content.BaseStrokeContent: android.graphics.Path trimPathPath
com.airbnb.lottie.R$style: int RtlOverlay_Widget_AppCompat_SearchView_MagIcon
com.airbnb.lottie.R$styleable: int MenuItem_android_onClick
com.airbnb.lottie.LottieProperty: android.graphics.ColorFilter COLOR_FILTER
com.airbnb.lottie.R$attr: int maxButtonHeight
com.airbnb.lottie.R$styleable: int Toolbar_titleMarginStart
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_RatingBar_Small
com.airbnb.lottie.animation.content.RepeaterContent: com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation transform
com.airbnb.lottie.value.LottieFrameInfo: float linearKeyframeProgress
com.airbnb.lottie.R$color: int dim_foreground_disabled_material_dark
com.airbnb.lottie.model.FontCharacter: java.lang.String style
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Caption
com.airbnb.lottie.R$styleable: int[] FontFamilyFont
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int PEEKED_BEGIN_ARRAY
com.airbnb.lottie.R$layout: int abc_action_menu_layout
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$AvlBuilder: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node stack
com.airbnb.lottie.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown
com.airbnb.lottie.R$attr: int height
com.airbnb.lottie.model.animatable.AnimatableTextProperties: com.airbnb.lottie.model.animatable.AnimatableColorValue color
com.airbnb.lottie.R$color: int highlighted_text_material_dark
com.airbnb.lottie.model.content.GradientType: com.airbnb.lottie.model.content.GradientType LINEAR
com.airbnb.lottie.parser.moshi.JsonScope: int NONEMPTY_OBJECT
com.airbnb.lottie.R$styleable: int AppCompatTheme_buttonBarNegativeButtonStyle
com.airbnb.lottie.R$attr: int iconTintMode
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionModeShareDrawable
com.airbnb.lottie.model.layer.TextLayer: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation textSizeAnimation
com.airbnb.lottie.parser.moshi.JsonScope: int NONEMPTY_ARRAY
com.dimas.made1.core.data.source.remote.response.movie.Movie: java.lang.String overview
com.airbnb.lottie.model.content.GradientStroke: boolean hidden
com.airbnb.lottie.R$styleable: int AppCompatTheme_radioButtonStyle
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
com.airbnb.lottie.value.Keyframe: float endProgress
com.airbnb.lottie.R$attr: int autoSizePresetSizes
com.airbnb.lottie.R$id: int search_close_btn
com.airbnb.lottie.animation.content.MergePathsContent: java.util.List pathContents
com.airbnb.lottie.utils.LottieValueAnimator: float minFrame
com.airbnb.lottie.R$attr: int windowFixedWidthMajor
com.airbnb.lottie.R$styleable: int AppCompatTextView_textLocale
com.airbnb.lottie.R$style: int Base_V26_Theme_AppCompat_Light
com.airbnb.lottie.LottieDrawable: boolean safeMode
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$AvlBuilder: int leavesToSkip
com.airbnb.lottie.R$id: int parentPanel
com.airbnb.lottie.LottieProperty: java.lang.Integer[] GRADIENT_COLOR
com.airbnb.lottie.model.layer.BaseLayer: android.graphics.RectF matteBoundsRect
com.airbnb.lottie.R$style: int Theme_AppCompat
com.airbnb.lottie.R$style: int Animation_AppCompat_Dialog
net.sqlcipher.database.SQLiteQueryBuilder: java.util.regex.Pattern sLimitPattern
com.airbnb.lottie.model.layer.Layer: int preCompWidth
com.dimas.made1.core.data.source.remote.response.movie.Movie: java.lang.String releaseDate
com.airbnb.lottie.LottieAnimationView$3: com.airbnb.lottie.LottieAnimationView this$0
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionModeBackground
com.airbnb.lottie.R$styleable: int Toolbar_collapseIcon
com.airbnb.lottie.animation.content.FillContent: java.util.List paths
com.airbnb.lottie.R$dimen: int abc_text_size_button_material
com.airbnb.lottie.LottieDrawable$15: float val$progress
com.airbnb.lottie.R$attr: int lineHeight
com.airbnb.lottie.R$styleable: int LottieAnimationView_lottie_url
leakcanary.internal.InternalLeakCanary: leakcanary.internal.HeapDumpTrigger heapDumpTrigger
com.airbnb.lottie.R$id: int content
com.airbnb.lottie.model.content.ShapeStroke: boolean hidden
com.airbnb.lottie.R$dimen: int notification_large_icon_width
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
com.airbnb.lottie.R$styleable: int SwitchCompat_trackTint
com.airbnb.lottie.animation.content.GradientFillContent: int cacheSteps
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionMenuTextColor
com.airbnb.lottie.model.Marker: java.lang.String name
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
com.airbnb.lottie.R$attr: int collapseContentDescription
com.airbnb.lottie.R$attr: int navigationContentDescription
com.airbnb.lottie.R$id: int chronometer
androidx.work.impl.utils.futures.AbstractFuture: androidx.work.impl.utils.futures.AbstractFuture$Waiter waiters
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Widget_Button
com.airbnb.lottie.R$id: int search_go_btn
com.airbnb.lottie.model.layer.SolidLayer: android.graphics.Paint paint
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_ListView
com.airbnb.lottie.R$style: int Widget_AppCompat_ButtonBar
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_ActionBar
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
com.airbnb.lottie.R$style: int Theme_AppCompat_NoActionBar
com.airbnb.lottie.R$styleable: int Toolbar_title
com.airbnb.lottie.R$styleable: int ActionBar_contentInsetEnd
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Small_Inverse
com.airbnb.lottie.animation.content.MergePathsContent: android.graphics.Path remainderPath
com.airbnb.lottie.R$layout: int abc_screen_toolbar
com.airbnb.lottie.R$styleable: int AppCompatTheme_textColorAlertDialogListItem
com.airbnb.lottie.manager.ImageAssetManager: com.airbnb.lottie.ImageAssetDelegate delegate
com.airbnb.lottie.R$style: int Widget_AppCompat_CompoundButton_RadioButton
com.airbnb.lottie.R$style: int Widget_AppCompat_Light_ActionBar_TabView
com.airbnb.lottie.R$attr: int textAppearanceListItemSmall
com.airbnb.lottie.LottieComposition: androidx.collection.SparseArrayCompat characters
com.airbnb.lottie.R$string: int search_menu_title
net.sqlcipher.database.SQLiteDebug: boolean DEBUG_ACTIVE_CURSOR_FINALIZATION
com.airbnb.lottie.R$dimen: int abc_button_inset_vertical_material
com.airbnb.lottie.R$styleable: int MenuItem_android_title
com.airbnb.lottie.R$style: int Theme_AppCompat_Light_DialogWhenLarge
com.airbnb.lottie.R$styleable: int GradientColor_android_tileMode
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$styleable: int ActionBar_itemPadding
net.sqlcipher.IBulkCursor: int RESPOND_TRANSACTION
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_ActionBar_TabText
com.airbnb.lottie.R$drawable: int abc_item_background_holo_dark
com.airbnb.lottie.R$attr: int collapseIcon
com.airbnb.lottie.L: boolean DBG
com.airbnb.lottie.R$styleable: int Toolbar_contentInsetLeft
com.airbnb.lottie.LottieProperty: java.lang.Float TRANSFORM_START_OPACITY
com.airbnb.lottie.R$drawable: int abc_seekbar_tick_mark_material
com.airbnb.lottie.R$styleable: int Toolbar_subtitleTextAppearance
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.airbnb.lottie.R$dimen: int abc_text_size_display_3_material
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Widget_Button_Colored
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
com.airbnb.lottie.parser.MergePathsParser: com.airbnb.lottie.parser.moshi.JsonReader$Options NAMES
com.airbnb.lottie.R$drawable: int abc_seekbar_thumb_material
androidx.viewpager.widget.ViewPager$SavedState: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$styleable: int AppCompatTheme_searchViewStyle
com.airbnb.lottie.animation.content.GradientFillContent: boolean hidden
com.airbnb.lottie.R$color: int abc_tint_default
com.airbnb.lottie.R$dimen: int hint_pressed_alpha_material_light
com.airbnb.lottie.R$styleable: int MenuGroup_android_orderInCategory
com.airbnb.lottie.R$attr: int overlapAnchor
com.airbnb.lottie.R$attr: int searchIcon
com.airbnb.lottie.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
com.airbnb.lottie.model.content.CircleShape: com.airbnb.lottie.model.animatable.AnimatablePointValue size
com.airbnb.lottie.R$string: int abc_menu_meta_shortcut_label
com.airbnb.lottie.R$dimen: int abc_text_size_subhead_material
com.airbnb.lottie.LottieCompositionFactory: java.util.Map taskCache
net.sqlcipher.DatabaseUtils$InsertHelper: int TABLE_INFO_PRAGMA_COLUMNNAME_INDEX
com.airbnb.lottie.model.layer.BaseLayer: int CLIP_SAVE_FLAG
com.airbnb.lottie.R$styleable: int GradientColor_android_endColor
com.airbnb.lottie.R$style: int Base_Theme_AppCompat_Light_DarkActionBar
com.airbnb.lottie.R$string: int abc_searchview_description_submit
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int PEEKED_NULL
com.airbnb.lottie.animation.content.ContentGroup: android.graphics.Path path
com.airbnb.lottie.R$styleable: int AppCompatImageView_android_src
com.airbnb.lottie.R$styleable: int AppCompatTheme_textAppearanceListItemSmall
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
com.airbnb.lottie.model.content.ShapePath: int index
com.airbnb.lottie.R$styleable: int AppCompatTheme_buttonStyleSmall
com.airbnb.lottie.R$styleable: int AppCompatTheme_alertDialogButtonGroupStyle
com.airbnb.lottie.model.layer.Layer: java.util.List masks
com.airbnb.lottie.BuildConfig: java.lang.String BUILD_TYPE
com.airbnb.lottie.R$id: int tag_transition_group
com.airbnb.lottie.LottieAnimationView: com.airbnb.lottie.LottieComposition composition
com.airbnb.lottie.model.content.Mask$MaskMode: com.airbnb.lottie.model.content.Mask$MaskMode[] $VALUES
net.sqlcipher.R$string: int library_android_database_sqlcipher_libraryVersion
com.airbnb.lottie.model.layer.CompositionLayer: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation timeRemapping
com.airbnb.lottie.R$id: int default_activity_button
com.airbnb.lottie.R$style: int Widget_AppCompat_TextView_SpinnerItem
com.airbnb.lottie.R$attr: int layout_keyline
com.airbnb.lottie.R$styleable: int LinearLayoutCompat_showDividers
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Button
com.airbnb.lottie.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Subtitle
com.airbnb.lottie.model.content.MergePaths: java.lang.String name
net.sqlcipher.database.SQLiteOpenHelper: android.content.Context mContext
com.airbnb.lottie.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
com.airbnb.lottie.value.LottieRelativePointValueCallback: android.graphics.PointF point
com.airbnb.lottie.R$color: int button_material_dark
com.airbnb.lottie.R$styleable: int MenuItem_alphabeticModifiers
com.airbnb.lottie.PerformanceTracker: boolean enabled
net.sqlcipher.Cursor: int FIELD_TYPE_STRING
com.airbnb.lottie.R$id: int listMode
com.airbnb.lottie.LottieDrawable: boolean isApplyingOpacityToLayersEnabled
com.airbnb.lottie.R$string: int abc_action_bar_up_description
com.airbnb.lottie.R$dimen: int abc_dialog_padding_top_material
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType GIF
com.airbnb.lottie.R$dimen: int abc_text_size_subtitle_material_toolbar
com.airbnb.lottie.R$id: int contentPanel
com.airbnb.lottie.R$anim: int abc_popup_exit
com.airbnb.lottie.R$id: int activity_chooser_view_content
net.sqlcipher.database.SQLiteCursor: java.lang.String TAG
com.airbnb.lottie.R$styleable: int StateListDrawable_android_enterFadeDuration
com.airbnb.lottie.parser.IntegerParser: com.airbnb.lottie.parser.IntegerParser INSTANCE
com.airbnb.lottie.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow
androidx.activity.result.IntentSenderRequest: android.os.Parcelable$Creator CREATOR
net.sqlcipher.database.SQLiteDebug$PagerStats: int pageCacheOverflo
com.airbnb.lottie.TextDelegate: com.airbnb.lottie.LottieAnimationView animationView
com.airbnb.lottie.R$drawable: int abc_btn_borderless_material
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType JPEG
com.airbnb.lottie.R$styleable: int MenuItem_android_enabled
com.airbnb.lottie.R$styleable: int AppCompatTheme_android_windowIsFloating
net.sqlcipher.IBulkCursor: int WANTS_ON_MOVE_TRANSACTION
com.airbnb.lottie.model.DocumentData: com.airbnb.lottie.model.DocumentData$Justification justification
com.airbnb.lottie.R$style: int Widget_AppCompat_ActionButton_Overflow
com.airbnb.lottie.R$style: int Theme_AppCompat_DayNight_Dialog
com.airbnb.lottie.R$attr: int listPreferredItemHeight
net.sqlcipher.database.SQLiteDatabase: java.util.WeakHashMap sActiveDatabases
com.airbnb.lottie.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem
com.airbnb.lottie.R$style: int Widget_Compat_NotificationActionText
com.airbnb.lottie.R$dimen: int highlight_alpha_material_light
com.airbnb.lottie.R$styleable: int AppCompatTheme_popupMenuStyle
com.airbnb.lottie.R$styleable: int ActionBar_divider
com.airbnb.lottie.R$attr: int textColorAlertDialogListItem
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_Button
leakcanary.internal.InternalLeakCanary: kotlin.Lazy formFactor$delegate
com.airbnb.lottie.R$attr: int alertDialogCenterButtons
com.airbnb.lottie.value.LottieValueCallback: com.airbnb.lottie.value.LottieFrameInfo frameInfo
com.airbnb.lottie.R$dimen: int abc_text_size_body_2_material
com.airbnb.lottie.animation.content.StrokeContent: java.lang.String name
com.airbnb.lottie.model.layer.SolidLayer: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation colorFilterAnimation
com.airbnb.lottie.R$attr: int dialogPreferredPadding
com.airbnb.lottie.R$id: int normal
com.airbnb.lottie.R$attr: int checkboxStyle
com.airbnb.lottie.R$styleable: int ViewStubCompat_android_layout
net.sqlcipher.BulkCursorProxy: android.os.Bundle mExtras
com.airbnb.lottie.model.DocumentData: float baselineShift
com.airbnb.lottie.R$styleable: int AppCompatTextHelper_android_textAppearance
com.airbnb.lottie.R$id: int right_icon
com.airbnb.lottie.network.NetworkFetcher: java.lang.String url
com.airbnb.lottie.R$drawable: int abc_action_bar_item_background_material
com.airbnb.lottie.R$id: int action_divider
com.airbnb.lottie.model.content.Mask: com.airbnb.lottie.model.animatable.AnimatableIntegerValue opacity
com.airbnb.lottie.value.LottieFrameInfo: java.lang.Object endValue
com.airbnb.lottie.R$styleable: int RecycleListView_paddingBottomNoButtons
com.airbnb.lottie.manager.ImageAssetManager: java.lang.Object bitmapHashLock
com.airbnb.lottie.R$dimen: int abc_text_size_caption_material
com.airbnb.lottie.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
com.airbnb.lottie.parser.JsonUtils$1: int[] $SwitchMap$com$airbnb$lottie$parser$moshi$JsonReader$Token
com.airbnb.lottie.R$styleable: int SearchView_voiceIcon
com.airbnb.lottie.R$drawable: int abc_list_selector_holo_light
net.sqlcipher.database.SupportHelper: net.sqlcipher.database.SQLiteOpenHelper standardHelper
com.airbnb.lottie.R$layout: int select_dialog_item_material
com.airbnb.lottie.R$id: int title
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node: int hash
com.airbnb.lottie.R$attr: int actionBarSplitStyle
com.airbnb.lottie.parser.moshi.JsonReader$Token: com.airbnb.lottie.parser.moshi.JsonReader$Token STRING
com.airbnb.lottie.model.content.GradientFill: java.lang.String name
com.airbnb.lottie.R$styleable: int CompoundButton_buttonTint
com.airbnb.lottie.R$styleable: int Spinner_popupTheme
com.airbnb.lottie.animation.content.ContentGroup: android.graphics.Matrix matrix
com.airbnb.lottie.R$styleable: int ActionMode_height
net.sqlcipher.Cursor: int FIELD_TYPE_INTEGER
net.sqlcipher.database.SQLiteDatabase: java.lang.String mTimeClosed
com.airbnb.lottie.R$attr: int searchViewStyle
com.airbnb.lottie.R$styleable: int MenuItem_numericModifiers
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_EditText
com.airbnb.lottie.R$drawable: int abc_list_selector_background_transition_holo_light
com.airbnb.lottie.R$style: int Widget_AppCompat_SeekBar_Discrete
com.airbnb.lottie.R$attr: int keylines
com.airbnb.lottie.R$styleable: int AppCompatTheme_panelMenuListWidth
com.airbnb.lottie.R$color: int dim_foreground_disabled_material_light
com.airbnb.lottie.R$color: int bright_foreground_material_dark
com.airbnb.lottie.model.DocumentData$Justification: com.airbnb.lottie.model.DocumentData$Justification RIGHT_ALIGN
com.airbnb.lottie.R$id: int scrollIndicatorDown
com.airbnb.lottie.LottieDrawable$12: int val$minFrame
com.airbnb.lottie.R$drawable: int abc_control_background_material
com.airbnb.lottie.model.content.ShapeStroke$1: int[] $SwitchMap$com$airbnb$lottie$model$content$ShapeStroke$LineJoinType
com.airbnb.lottie.R$styleable: int AppCompatTheme_colorBackgroundFloating
com.airbnb.lottie.model.content.ShapeFill: android.graphics.Path$FillType fillType
net.sqlcipher.database.SQLiteCursor: java.lang.String mEditTable
shark.AndroidResourceIdNames: int RESOURCE_ID_TYPE_ITERATOR
com.airbnb.lottie.model.layer.CompositionLayer: android.graphics.RectF rect
com.airbnb.lottie.R$styleable: int AlertDialog_listLayout
com.airbnb.lottie.R$attr: int fontFamily
com.airbnb.lottie.R$drawable: int notification_bg_low
com.airbnb.lottie.value.LottieInterpolatedValue: java.lang.Object startValue
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_ListPopupWindow
com.airbnb.lottie.R$id: int line1
com.airbnb.lottie.LottieAnimationView: java.lang.String TAG
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionBarSize
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
com.airbnb.lottie.LottieDrawable: boolean systemAnimationsEnabled
com.airbnb.lottie.model.layer.Layer: com.airbnb.lottie.model.layer.Layer$MatteType matteType
com.airbnb.lottie.R$style: int Base_V7_Widget_AppCompat_AutoCompleteTextView
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
com.airbnb.lottie.R$styleable: int ActionBar_backgroundStacked
com.airbnb.lottie.R$dimen: int notification_small_icon_background_padding
net.sqlcipher.AbstractCursor: java.lang.Long mCurrentRowID
com.airbnb.lottie.utils.Utils: android.graphics.PathMeasure pathMeasure
com.airbnb.lottie.R$style: int Widget_AppCompat_Button_Small
com.airbnb.lottie.R$id: int tag_unhandled_key_listeners
com.airbnb.lottie.parser.moshi.JsonReader: int stackSize
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
com.airbnb.lottie.R$attr: int showDividers
com.airbnb.lottie.R$attr: int autoSizeStepGranularity
com.airbnb.lottie.animation.content.ShapeContent: boolean hidden
com.airbnb.lottie.value.LottieInterpolatedPointValue: android.graphics.PointF point
com.google.android.material.bottomappbar.BottomAppBar$SavedState: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.model.layer.BaseLayer: android.graphics.Matrix boundsMatrix
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionBarPopupTheme
com.airbnb.lottie.R$styleable: int SwitchCompat_switchMinWidth
net.sqlcipher.AbstractCursor: java.lang.Object mSelfObserverLock
com.airbnb.lottie.R$styleable: int AppCompatTheme_textAppearancePopupMenuHeader
net.sqlcipher.MatrixCursor$RowBuilder: net.sqlcipher.MatrixCursor this$0
com.airbnb.lottie.R$style: int ThemeOverlay_AppCompat_Light
com.airbnb.lottie.R$style: int Base_Theme_AppCompat_Dialog_MinWidth
com.airbnb.lottie.LottieProperty: java.lang.Float TRANSFORM_ROTATION
com.airbnb.lottie.LottieDrawable: int INFINITE
com.airbnb.lottie.R$color: int primary_dark_material_light
com.airbnb.lottie.LottieComposition: int maskAndMatteCount
com.airbnb.lottie.parser.DocumentDataParser: com.airbnb.lottie.parser.moshi.JsonReader$Options NAMES
com.airbnb.lottie.R$style: int Base_V28_Theme_AppCompat_Light
androidx.lifecycle.ProcessLifecycleOwner$3$1: androidx.lifecycle.ProcessLifecycleOwner$3 this$1
com.airbnb.lottie.R$attr: int actionBarTabBarStyle
com.airbnb.lottie.R$style: int Base_Animation_AppCompat_DropDownUp
kotlinx.coroutines.channels.ArrayChannel: int size
com.airbnb.lottie.R$styleable: int AppCompatTheme_toolbarNavigationButtonStyle
com.airbnb.lottie.R$attr: int thickness
com.airbnb.lottie.R$styleable: int TextAppearance_android_textColorHint
com.airbnb.lottie.animation.content.BaseStrokeContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation opacityAnimation
com.airbnb.lottie.R$layout: int abc_list_menu_item_checkbox
net.sqlcipher.database.SQLiteDatabase$2: net.sqlcipher.database.SQLiteDatabase this$0
com.airbnb.lottie.R$id: int notification_main_column
com.airbnb.lottie.animation.content.GradientStrokeContent: com.airbnb.lottie.model.content.GradientType type
com.airbnb.lottie.model.layer.TextLayer: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation trackingAnimation
com.airbnb.lottie.animation.content.RectangleContent: com.airbnb.lottie.animation.content.CompoundTrimPathContent trimPaths
com.airbnb.lottie.model.layer.BaseLayer: android.graphics.Paint clearPaint
com.airbnb.lottie.R$attr: int switchTextAppearance
com.airbnb.lottie.R$style: int Widget_AppCompat_DrawerArrowToggle
com.airbnb.lottie.model.content.ShapeStroke: com.airbnb.lottie.model.content.ShapeStroke$LineCapType capType
com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation endOpacity
com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatableIntegerValue opacity
com.airbnb.lottie.R$styleable: int AppCompatTheme_controlBackground
com.airbnb.lottie.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Menu
com.airbnb.lottie.model.layer.CompositionLayer$1: int[] $SwitchMap$com$airbnb$lottie$model$layer$Layer$MatteType
com.airbnb.lottie.R$attr: int windowFixedHeightMajor
com.airbnb.lottie.R$style: int Widget_AppCompat_ActionMode
net.sqlcipher.database.SQLiteDatabase: int MAX_WARNINGS_ON_CACHESIZE_CONDITION
com.airbnb.lottie.R$color: int ripple_material_light
net.sqlcipher.database.SQLiteDatabase: int CONFLICT_ABORT
com.airbnb.lottie.LottieDrawable$16: com.airbnb.lottie.model.KeyPath val$keyPath
com.airbnb.lottie.model.layer.Layer$LayerType: com.airbnb.lottie.model.layer.Layer$LayerType TEXT
net.sqlcipher.BulkCursorToCursorAdaptor: java.lang.String[] mColumns
com.google.android.material.button.MaterialButton$SavedState: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.R$styleable: int SwitchCompat_android_thumb
com.airbnb.lottie.R$attr: int icon
net.sqlcipher.database.SQLiteDatabase: java.util.Map mSyncUpdateInfo
com.airbnb.lottie.R$attr: int showTitle
com.airbnb.lottie.model.layer.TextLayer: com.airbnb.lottie.LottieDrawable lottieDrawable
com.airbnb.lottie.animation.content.EllipseContent: android.graphics.Path path
com.airbnb.lottie.value.ScaleXY: float scaleY
com.airbnb.lottie.R$attr: int layout_dodgeInsetEdges
com.airbnb.lottie.model.content.ShapeGroup: boolean hidden
com.airbnb.lottie.R$attr: int editTextBackground
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int PEEKED_NONE
leakcanary.internal.InternalLeakCanary: kotlin.Lazy heapDumpPrefs$delegate
com.airbnb.lottie.LottieDrawable: boolean enableMergePaths
net.sqlcipher.database.SQLiteDirectCursorDriver: net.sqlcipher.database.SQLiteDatabase mDatabase
com.airbnb.lottie.model.layer.BaseLayer: com.airbnb.lottie.animation.keyframe.MaskKeyframeAnimation mask
com.airbnb.lottie.R$styleable: int AppCompatTextView_autoSizePresetSizes
com.airbnb.lottie.animation.content.GradientStrokeContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation endPointAnimation
leakcanary.internal.AndroidHeapDumper: android.content.Context context
net.sqlcipher.database.SQLiteQuery: java.lang.String[] mBindArgs
com.airbnb.lottie.R$styleable: int AppCompatTheme_actionButtonStyle
com.airbnb.lottie.parser.moshi.JsonScope: int EMPTY_DOCUMENT
com.airbnb.lottie.parser.moshi.JsonReader$Token: com.airbnb.lottie.parser.moshi.JsonReader$Token END_OBJECT
com.airbnb.lottie.R$styleable: int AlertDialog_listItemLayout
com.airbnb.lottie.manager.FontAssetManager: com.airbnb.lottie.FontAssetDelegate delegate
com.airbnb.lottie.R$drawable: int abc_list_selector_disabled_holo_dark
net.sqlcipher.database.SQLiteDatabase: int LOCK_ACQUIRED_WARNING_THREAD_TIME_IN_MS
com.airbnb.lottie.R$attr: int seekBarStyle
com.airbnb.lottie.R$style: int Widget_AppCompat_Light_PopupMenu
com.airbnb.lottie.model.animatable.AnimatableSplitDimensionPathValue: com.airbnb.lottie.model.animatable.AnimatableFloatValue animatableYDimension
com.airbnb.lottie.R$styleable: int AppCompatTheme_windowFixedHeightMajor
com.airbnb.lottie.R$styleable: int MenuView_android_itemIconDisabledAlpha
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Widget_DropDownItem
com.airbnb.lottie.model.Marker: float durationFrames
com.airbnb.lottie.parser.PathParser: com.airbnb.lottie.parser.PathParser INSTANCE
com.airbnb.lottie.LottieProperty: java.lang.Float POLYSTAR_INNER_ROUNDEDNESS
com.airbnb.lottie.model.layer.Layer$LayerType: com.airbnb.lottie.model.layer.Layer$LayerType SOLID
com.airbnb.lottie.LottieDrawable$4: com.airbnb.lottie.LottieDrawable this$0
com.airbnb.lottie.model.layer.BaseLayer: android.graphics.Matrix matrix
com.airbnb.lottie.animation.content.PolystarContent: java.lang.String name
com.airbnb.lottie.R$style: int Platform_AppCompat
com.airbnb.lottie.R$styleable: int AppCompatTextView_autoSizeTextType
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType UNKNOWN
com.airbnb.lottie.R$styleable: int AppCompatTheme_listPreferredItemHeightSmall
com.airbnb.lottie.R$attr: int actionBarDivider
com.airbnb.lottie.R$id: int radio
net.sqlcipher.database.SQLiteDatabase: java.lang.String[] CONFLICT_VALUES
com.airbnb.lottie.R$styleable: int ColorStateListItem_alpha
com.airbnb.lottie.R$attr: int dropdownListPreferredItemHeight
com.airbnb.lottie.R$attr: int elevation
com.airbnb.lottie.R$dimen: int notification_action_text_size
net.sqlcipher.database.SQLiteCursor: java.util.concurrent.locks.ReentrantLock mLock
com.airbnb.lottie.model.layer.BaseLayer: android.graphics.Paint mattePaint
com.airbnb.lottie.R$attr: int defaultQueryHint
com.airbnb.lottie.animation.content.BaseStrokeContent: android.graphics.Paint paint
com.airbnb.lottie.animation.content.PolystarContent$1: int[] $SwitchMap$com$airbnb$lottie$model$content$PolystarShape$Type
com.airbnb.lottie.R$color: int switch_thumb_material_light
com.airbnb.lottie.R$id: int blocking
com.airbnb.lottie.LottieComposition$Factory$ListenerAdapter: boolean cancelled
net.sqlcipher.BulkCursorToCursorAdaptor: net.sqlcipher.IBulkCursor mBulkCursor
com.airbnb.lottie.R$dimen: int abc_action_bar_stacked_max_height
com.airbnb.lottie.R$styleable: int[] AnimatedStateListDrawableItem
com.airbnb.lottie.model.layer.CompositionLayer: android.graphics.RectF newClipRect
com.airbnb.lottie.LottieDrawable$6: com.airbnb.lottie.LottieDrawable this$0
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabView
com.airbnb.lottie.LottieDrawable$16: com.airbnb.lottie.value.LottieValueCallback val$callback
com.airbnb.lottie.model.layer.Layer: float timeStretch
com.airbnb.lottie.R$style: int Base_ThemeOverlay_AppCompat_Dark_ActionBar
com.airbnb.lottie.model.layer.Layer$LayerType: com.airbnb.lottie.model.layer.Layer$LayerType NULL
com.airbnb.lottie.model.content.ShapeGroup: java.lang.String name
net.sqlcipher.DatabaseUtils: char[] HEX_DIGITS_LOWER
com.airbnb.lottie.parser.moshi.JsonReader: int[] pathIndices
com.airbnb.lottie.LottieDrawable$13: float val$minProgress
com.airbnb.lottie.R$layout: int abc_alert_dialog_title_material
com.airbnb.lottie.parser.KeyframesParser: com.airbnb.lottie.parser.moshi.JsonReader$Options NAMES
com.airbnb.lottie.R$styleable: int AppCompatTheme_windowFixedWidthMajor
kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.lang.Object _state
com.airbnb.lottie.model.content.GradientFill: com.airbnb.lottie.model.content.GradientType gradientType
net.sqlcipher.database.SQLiteDatabase: long mLockAcquiredWallTime
com.airbnb.lottie.R$layout: int notification_template_part_time
com.airbnb.lottie.model.layer.BaseLayer: int SAVE_FLAGS
com.airbnb.lottie.R$drawable: int abc_ab_share_pack_mtrl_alpha
com.airbnb.lottie.R$attr: int queryHint
com.airbnb.lottie.R$id: int text2
com.airbnb.lottie.animation.content.GradientFillContent: com.airbnb.lottie.animation.keyframe.ValueCallbackKeyframeAnimation colorCallbackAnimation
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: float cachedStartDelayProgress
com.airbnb.lottie.PerformanceTracker: java.util.Map layerRenderTimes
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
com.airbnb.lottie.model.content.GradientFill: com.airbnb.lottie.model.animatable.AnimatableIntegerValue opacity
com.airbnb.lottie.R$styleable: int AppCompatTheme_colorControlHighlight
com.airbnb.lottie.R$styleable: int AppCompatSeekBar_tickMarkTintMode
com.airbnb.lottie.R$styleable: int AppCompatTheme_ratingBarStyleIndicator
com.airbnb.lottie.R$styleable: int AppCompatTheme_listPreferredItemPaddingLeft
com.airbnb.lottie.R$attr: int lottie_rawRes
com.airbnb.lottie.R$styleable: int AppCompatTheme_dropDownListViewStyle
com.airbnb.lottie.R$attr: int ratingBarStyleIndicator
com.airbnb.lottie.R$styleable: int AppCompatTheme_tooltipFrameBackground
com.airbnb.lottie.LottieProperty: java.lang.Float TRANSFORM_SKEW_ANGLE
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.animatable.AnimatableGradientColorValue gradientColor
com.airbnb.lottie.R$styleable: int AppCompatTheme_seekBarStyle
com.airbnb.lottie.R$styleable: int SearchView_android_imeOptions
net.sqlcipher.database.SQLiteQueryBuilder: net.sqlcipher.database.SQLiteDatabase$CursorFactory mFactory
net.sqlcipher.database.SQLiteDatabase$2: byte[] val$password
com.airbnb.lottie.R$style: int Base_Theme_AppCompat_Light
com.airbnb.lottie.model.DocumentData: float strokeWidth
com.airbnb.lottie.R$color: int tooltip_background_light
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$LinkedTreeMapIterator: int expectedModCount
com.airbnb.lottie.model.content.ShapeTrimPath: java.lang.String name
com.airbnb.lottie.animation.keyframe.PathKeyframeAnimation: com.airbnb.lottie.animation.keyframe.PathKeyframe pathMeasureKeyframe
com.airbnb.lottie.LottieAnimationView: com.airbnb.lottie.LottieListener wrappedFailureListener
com.airbnb.lottie.LottieProperty: java.lang.Float REPEATER_OFFSET
com.airbnb.lottie.R$styleable: int[] AppCompatTheme
com.airbnb.lottie.LottieAnimationView: boolean isInitialized
net.sqlcipher.AbstractCursor: android.net.Uri mNotifyUri
com.airbnb.lottie.R$color: int dim_foreground_material_dark
com.airbnb.lottie.R$style: int Base_TextAppearance_AppCompat_Title
com.airbnb.lottie.R$drawable: int abc_edit_text_material
net.sqlcipher.database.SQLiteDatabase: long mLockAcquiredThreadTime
com.airbnb.lottie.R$color: int abc_hint_foreground_material_light
com.airbnb.lottie.model.content.GradientStroke: java.lang.String name
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int peekedNumberLength
com.airbnb.lottie.R$dimen: int abc_progress_bar_height_material
com.airbnb.lottie.R$attr: int tooltipFrameBackground
com.airbnb.lottie.R$layout: int notification_template_part_chronometer
com.airbnb.lottie.R$attr: int backgroundSplit
com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: android.graphics.Matrix matrix
leakcanary.internal.InternalLeakCanary: java.lang.String DYNAMIC_SHORTCUT_ID
com.airbnb.lottie.LottieCompositionFactory$5: org.json.JSONObject val$json
com.airbnb.lottie.value.LottieFrameInfo: java.lang.Object startValue
com.airbnb.lottie.parser.moshi.JsonReader: boolean failOnUnknown
net.sqlcipher.database.SqliteWrapper: java.lang.String SQLITE_EXCEPTION_DETAIL_MESSAGE
com.airbnb.lottie.R$id: int wrap_content
com.airbnb.lottie.animation.content.TrimPathContent: com.airbnb.lottie.model.content.ShapeTrimPath$Type type
com.airbnb.lottie.R$attr: int dialogCornerRadius
com.airbnb.lottie.R$styleable: int CoordinatorLayout_Layout_layout_dodgeInsetEdges
com.airbnb.lottie.model.layer.BaseLayer: com.airbnb.lottie.model.layer.BaseLayer parentLayer
com.dimas.made1.core.data.source.remote.response.movie.Movie: java.lang.Double voteAverage
com.airbnb.lottie.LottieCompositionFactory$8: java.lang.String val$cacheKey
com.airbnb.lottie.R$attr: int lottie_renderMode
com.airbnb.lottie.R$attr: int textAppearanceSmallPopupMenu
com.airbnb.lottie.model.content.ShapeStroke$LineJoinType: com.airbnb.lottie.model.content.ShapeStroke$LineJoinType MITER
com.airbnb.lottie.R$style: int Widget_AppCompat_SeekBar
com.airbnb.lottie.parser.LottieCompositionMoshiParser: com.airbnb.lottie.parser.moshi.JsonReader$Options ASSETS_NAMES
com.dimas.made1.core.data.source.remote.response.tv.Tv: java.lang.String posterPath
com.airbnb.lottie.manager.FontAssetManager: java.util.Map fontMap
com.airbnb.lottie.R$styleable: int AppCompatTheme_textAppearanceSmallPopupMenu
com.airbnb.lottie.R$attr: int logoDescription
com.airbnb.lottie.R$style: int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
com.airbnb.lottie.LottieComposition: float endFrame
com.airbnb.lottie.R$dimen: int abc_search_view_preferred_width
com.airbnb.lottie.R$id: int group_divider
com.airbnb.lottie.R$style: int Base_Theme_AppCompat_Dialog_FixedSize
com.airbnb.lottie.R$styleable: int LottieAnimationView_lottie_progress
com.airbnb.lottie.model.animatable.BaseAnimatableValue: java.util.List keyframes
com.airbnb.lottie.R$styleable: int MenuItem_iconTintMode
com.airbnb.lottie.R$styleable: int LottieAnimationView_lottie_autoPlay
com.airbnb.lottie.R$dimen: int abc_action_button_min_width_material
com.airbnb.lottie.R$attr: int tooltipForegroundColor
com.airbnb.lottie.R$attr: int fontStyle
com.airbnb.lottie.animation.content.GradientFillContent: androidx.collection.LongSparseArray linearGradientCache
com.airbnb.lottie.model.content.Repeater: boolean hidden
com.airbnb.lottie.model.layer.TextLayer: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation textSizeCallbackAnimation
net.sqlcipher.IContentObserver$Stub: java.lang.String DESCRIPTOR
com.airbnb.lottie.model.layer.Layer: java.lang.String refId
com.airbnb.lottie.R$style: int Base_Widget_AppCompat_Button_Small
net.sqlcipher.database.SQLiteCursor$QueryThread: net.sqlcipher.database.SQLiteCursor this$0
com.airbnb.lottie.R$styleable: int MenuGroup_android_checkableBehavior
com.airbnb.lottie.animation.content.PolystarContent: float POLYGON_MAGIC_NUMBER
com.airbnb.lottie.R$dimen: int abc_action_bar_content_inset_material
com.airbnb.lottie.model.layer.SolidLayer: com.airbnb.lottie.model.layer.Layer layerModel
com.airbnb.lottie.R$styleable: int SwitchCompat_android_textOff
com.airbnb.lottie.R$attr: int voiceIcon
com.airbnb.lottie.utils.Logger: com.airbnb.lottie.LottieLogger INSTANCE
com.airbnb.lottie.LottieComposition: java.util.Map images
com.airbnb.lottie.R$attr: int dividerPadding
net.sqlcipher.IBulkCursor: int UPDATE_ROWS_TRANSACTION
com.airbnb.lottie.LottieDrawable$ColorFilterData: java.lang.String contentName
com.airbnb.lottie.R$attr: int titleTextColor
com.airbnb.lottie.R$styleable: int Toolbar_logoDescription
com.airbnb.lottie.R$style: int Base_Animation_AppCompat_Dialog
com.airbnb.lottie.model.content.PolystarShape: com.airbnb.lottie.model.animatable.AnimatableFloatValue outerRoundedness
com.airbnb.lottie.model.content.Mask$MaskMode: com.airbnb.lottie.model.content.Mask$MaskMode MASK_MODE_NONE
com.airbnb.lottie.R$styleable: int AppCompatTheme_colorAccent
com.airbnb.lottie.LottieDrawable: com.airbnb.lottie.manager.ImageAssetManager imageAssetManager
com.airbnb.lottie.LottieComposition: java.util.List markers
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
com.airbnb.lottie.R$styleable: int LinearLayoutCompat_android_gravity
com.airbnb.lottie.R$string: int abc_menu_ctrl_shortcut_label
com.airbnb.lottie.parser.ShapeDataParser: com.airbnb.lottie.parser.ShapeDataParser INSTANCE
com.airbnb.lottie.R$styleable: int Toolbar_contentInsetStartWithNavigation
com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: float[] skewValues
net.sqlcipher.database.SQLiteDatabase: int mNumCacheMisses
com.airbnb.lottie.LottieDrawable: com.airbnb.lottie.LottieComposition composition
com.airbnb.lottie.R$styleable: int TextAppearance_fontVariationSettings
com.airbnb.lottie.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
com.airbnb.lottie.R$styleable: int MenuGroup_android_menuCategory
com.airbnb.lottie.R$style: int TextAppearance_AppCompat_Subhead
com.airbnb.lottie.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
com.airbnb.lottie.LottieAnimationView: void setApplyingOpacityToLayersEnabled(boolean)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openOrCreateDatabase(java.lang.String,char[],net.sqlcipher.database.SQLiteDatabase$CursorFactory,net.sqlcipher.database.SQLiteDatabaseHook,net.sqlcipher.DatabaseErrorHandler)
com.airbnb.lottie.animation.content.ContentGroup: java.util.List contentsFromModels(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer,java.util.List)
net.sqlcipher.BulkCursorProxy: void deactivate()
com.airbnb.lottie.value.LottieInterpolatedValue: java.lang.Object getValue(com.airbnb.lottie.value.LottieFrameInfo)
okhttp3.Protocol: okhttp3.Protocol[] values()
com.airbnb.lottie.model.layer.Layer: float getTimeStretch()
com.airbnb.lottie.LottieDrawable: void setMinProgress(float)
net.sqlcipher.database.SQLiteDatabase$2: SQLiteDatabase$2(net.sqlcipher.database.SQLiteDatabase,byte[])
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
com.google.android.material.textfield.MaterialAutoCompleteTextView: java.lang.CharSequence getHint()
leakcanary.KeyedWeakReference: KeyedWeakReference(java.lang.Object,java.lang.String,java.lang.String,long,java.lang.ref.ReferenceQueue)
com.airbnb.lottie.parser.KeyframeParser: <clinit>()
com.bumptech.glide.manager.SupportRequestManagerFragment: SupportRequestManagerFragment()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: void skipQuotedValue(okio.ByteString)
com.google.gson.internal.bind.TypeAdapters$13: TypeAdapters$13()
com.airbnb.lottie.LottieDrawable$3: void run(com.airbnb.lottie.LottieComposition)
com.airbnb.lottie.BuildConfig: BuildConfig()
com.airbnb.lottie.parser.ShapeFillParser: ShapeFillParser()
com.airbnb.lottie.model.MutablePair: java.lang.String toString()
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy: ConstraintProxy$BatteryNotLowProxy()
net.sqlcipher.database.SQLiteCursor: boolean commitUpdates(java.util.Map)
com.airbnb.lottie.utils.Utils: void saveLayerCompat(android.graphics.Canvas,android.graphics.RectF,android.graphics.Paint,int)
com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: android.graphics.Matrix getMatrix()
com.airbnb.lottie.parser.JsonUtils: android.graphics.PointF jsonObjectToPoint(com.airbnb.lottie.parser.moshi.JsonReader,float)
com.airbnb.lottie.LottieTask: com.airbnb.lottie.LottieTask addListener(com.airbnb.lottie.LottieListener)
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
com.google.android.material.button.MaterialButton: int getInsetBottom()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
net.sqlcipher.database.SQLiteClosable: java.lang.String getObjInfo()
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SQLiteDatabase: boolean yieldIfContendedSafely(long)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getSuffixText()
com.airbnb.lottie.model.content.RectangleShape: com.airbnb.lottie.model.animatable.AnimatablePointValue getSize()
net.sqlcipher.database.SQLiteDatabase: int native_getDbLookaside()
net.sqlcipher.AbstractWindowedCursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)
com.airbnb.lottie.PerformanceTracker: java.util.List getSortedRenderTimes()
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
com.airbnb.lottie.animation.content.ContentGroup: boolean hasTwoOrMoreDrawableContent()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
net.sqlcipher.IBulkCursor: android.os.Bundle respond(android.os.Bundle)
com.airbnb.lottie.LottieDrawable$2: LottieDrawable$2(com.airbnb.lottie.LottieDrawable)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
com.airbnb.lottie.parser.GradientStrokeParser: GradientStrokeParser()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
com.airbnb.lottie.model.content.ShapeGroup: boolean isHidden()
com.airbnb.lottie.model.content.ShapeStroke: float getMiterLimit()
net.sqlcipher.CursorWindow: boolean isLong(int,int)
com.airbnb.lottie.TextDelegate: void setText(java.lang.String,java.lang.String)
com.airbnb.lottie.model.layer.BaseLayer: void setProgress(float)
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet,int)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$LinkedTreeMapIterator: LinkedHashTreeMap$LinkedTreeMapIterator(com.airbnb.lottie.parser.moshi.LinkedHashTreeMap)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
com.airbnb.lottie.utils.LottieValueAnimator: LottieValueAnimator()
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
androidx.constraintlayout.widget.ConstraintLayout: void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener)
com.airbnb.lottie.animation.content.PolystarContent: void onValueChanged()
com.airbnb.lottie.utils.LottieValueAnimator: void removeFrameCallback(boolean)
com.airbnb.lottie.utils.MiscUtils: int floorMod(float,float)
com.airbnb.lottie.L: <clinit>()
com.airbnb.lottie.PerformanceTracker: void addFrameListener(com.airbnb.lottie.PerformanceTracker$FrameListener)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.airbnb.lottie.LottieAnimationView: void removeAllUpdateListeners()
com.airbnb.lottie.LottieAnimationView: int getRepeatCount()
com.airbnb.lottie.model.content.PolystarShape$Type: com.airbnb.lottie.model.content.PolystarShape$Type valueOf(java.lang.String)
com.airbnb.lottie.LottieComposition: float getStartFrame()
com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setIconTintList(android.content.res.ColorStateList)
net.sqlcipher.database.SupportHelper: void close()
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat[] values()
com.airbnb.lottie.utils.LottieValueAnimator: void cancel()
com.airbnb.lottie.LottieDrawable: void setMinAndMaxFrame(java.lang.String,java.lang.String,boolean)
com.google.android.material.button.MaterialButtonToggleGroup: java.lang.CharSequence getAccessibilityClassName()
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
net.sqlcipher.database.SQLiteDebug: void notifyActiveCursorFinalized()
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
com.airbnb.lottie.animation.keyframe.ColorKeyframeAnimation: int getIntValue(com.airbnb.lottie.value.Keyframe,float)
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: void beginObject()
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
net.sqlcipher.database.SQLiteQueryStats: SQLiteQueryStats(long,long)
com.airbnb.lottie.utils.Utils: void applyTrimPathIfNeeded(android.graphics.Path,float,float,float)
com.airbnb.lottie.animation.content.GradientStrokeContent: int getGradientHash()
androidx.constraintlayout.widget.Guideline: Guideline(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.value.Keyframe: int getEndValueInt()
com.airbnb.lottie.utils.BaseLottieAnimator: void addListener(android.animation.Animator$AnimatorListener)
com.airbnb.lottie.parser.AnimatableTransformParser: <clinit>()
curtains.WindowType: curtains.WindowType[] values()
com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()
com.airbnb.lottie.model.animatable.BaseAnimatableValue: java.lang.String toString()
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
net.sqlcipher.database.SQLiteClosable: void acquireReference()
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
leakcanary.internal.NotificationReceiver: NotificationReceiver()
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
com.google.gson.internal.bind.TypeAdapters$15: TypeAdapters$15()
net.sqlcipher.database.SQLiteDatabase: void access$000(net.sqlcipher.database.SQLiteDatabase,byte[])
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$EntrySet: boolean remove(java.lang.Object)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
com.airbnb.lottie.parser.KeyframesParser: void setEndFrames(java.util.List)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
com.airbnb.lottie.parser.moshi.JsonReader: int selectName(com.airbnb.lottie.parser.moshi.JsonReader$Options)
net.sqlcipher.AbstractCursor$SelfContentObserver: AbstractCursor$SelfContentObserver(net.sqlcipher.AbstractCursor)
net.sqlcipher.AbstractCursor: boolean updateToNull(int)
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
shark.AndroidObjectInspectors: shark.AndroidObjectInspectors valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SQLiteCursor: java.util.concurrent.locks.ReentrantLock access$202(net.sqlcipher.database.SQLiteCursor,java.util.concurrent.locks.ReentrantLock)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
com.airbnb.lottie.LottieDrawable: void setApplyingOpacityToLayersEnabled(boolean)
com.google.android.material.chip.Chip: void setBackgroundResource(int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.google.android.material.chip.Chip: void setChipIconResource(int)
net.sqlcipher.DatabaseUtils: void dumpCurrentRow(net.sqlcipher.Cursor)
com.airbnb.lottie.LottieDrawable: com.airbnb.lottie.model.layer.CompositionLayer access$000(com.airbnb.lottie.LottieDrawable)
net.sqlcipher.database.SQLiteDirectCursorDriver: SQLiteDirectCursorDriver(net.sqlcipher.database.SQLiteDatabase,java.lang.String,java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
androidx.work.impl.workers.CombineContinuationsWorker: CombineContinuationsWorker(android.content.Context,androidx.work.WorkerParameters)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
net.sqlcipher.DatabaseUtils: void cursorStringToInsertHelper(net.sqlcipher.Cursor,java.lang.String,net.sqlcipher.DatabaseUtils$InsertHelper,int)
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
com.airbnb.lottie.parser.JsonUtils: java.util.List jsonToPoints(com.airbnb.lottie.parser.moshi.JsonReader,float)
leakcanary.internal.RequestStoragePermissionActivity: RequestStoragePermissionActivity()
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: boolean equal(java.lang.Object,java.lang.Object)
com.airbnb.lottie.animation.keyframe.SplitDimensionPathKeyframeAnimation: SplitDimensionPathKeyframeAnimation(com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation,com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: int getWindowAnimations()
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatHoveredFocusedTranslationZ()
shark.AndroidResourceIdNames: AndroidResourceIdNames(int[],java.lang.String[],kotlin.jvm.internal.DefaultConstructorMarker)
net.sqlcipher.database.SQLiteCursor$QueryThread: SQLiteCursor$QueryThread(net.sqlcipher.database.SQLiteCursor,int)
com.airbnb.lottie.model.content.ShapeTrimPath$Type: ShapeTrimPath$Type(java.lang.String,int)
net.sqlcipher.database.SQLiteCursor: void finalize()
com.airbnb.lottie.model.layer.BaseLayer$2: <clinit>()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
com.airbnb.lottie.R$styleable: R$styleable()
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
com.airbnb.lottie.animation.content.TrimPathContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation getEnd()
com.airbnb.lottie.LottieDrawable: boolean enableMergePathsForKitKatAndAbove()
androidx.constraintlayout.widget.Barrier: void setType(int)
net.sqlcipher.database.SQLiteProgram: void native_bind_string(int,java.lang.String)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
net.sqlcipher.AbstractCursor: boolean updateString(int,java.lang.String)
net.sqlcipher.AbstractCursor$SelfContentObserver: void onChange(boolean)
com.airbnb.lottie.model.layer.BaseLayer: com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation access$000(com.airbnb.lottie.model.layer.BaseLayer)
com.google.android.material.floatingactionbutton.FloatingActionButton: FloatingActionButton(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.FontAssetDelegate: java.lang.String getFontPath(java.lang.String)
com.google.android.material.tabs.TabLayout: int getDefaultHeight()
com.airbnb.lottie.model.KeyPath: java.lang.String keysToString()
net.sqlcipher.database.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])
com.airbnb.lottie.model.content.Mask$MaskMode: com.airbnb.lottie.model.content.Mask$MaskMode valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
androidx.work.impl.background.systemalarm.RescheduleReceiver: RescheduleReceiver()
com.google.android.material.bottomnavigation.BottomNavigationView: android.content.res.ColorStateList getItemIconTintList()
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
com.airbnb.lottie.network.FileExtension: com.airbnb.lottie.network.FileExtension valueOf(java.lang.String)
com.google.android.material.bottomnavigation.BottomNavigationItemView: int getItemPosition()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
net.sqlcipher.DatabaseUtils$InsertHelper: void prepareForInsert()
androidx.constraintlayout.helper.widget.Flow: void setHorizontalStyle(int)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
net.sqlcipher.R$string: R$string()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
net.sqlcipher.database.SQLiteDatabase: void close()
com.airbnb.lottie.LottieAnimationView: boolean removeLottieOnCompositionLoadedListener(com.airbnb.lottie.LottieOnCompositionLoadedListener)
com.google.android.material.bottomnavigation.BottomNavigationView: android.view.MenuInflater getMenuInflater()
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
com.airbnb.lottie.LottieDrawable: void drawWithNewAspectRatio(android.graphics.Canvas)
leakcanary.internal.AndroidSupportFragmentDestroyWatcher: leakcanary.ReachabilityWatcher access$getReachabilityWatcher$p(leakcanary.internal.AndroidSupportFragmentDestroyWatcher)
net.sqlcipher.DatabaseUtils: void dumpCursor(net.sqlcipher.Cursor,java.lang.StringBuilder)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: int getStrokeWidth()
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy[] values()
com.airbnb.lottie.utils.Utils: Utils()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCheckedIconTint()
com.airbnb.lottie.model.content.Repeater: com.airbnb.lottie.model.animatable.AnimatableTransform getTransform()
com.airbnb.lottie.model.content.ShapeStroke$1: <clinit>()
com.airbnb.lottie.LottieAnimationView: void setMaxProgress(float)
net.sqlcipher.AbstractCursor: AbstractCursor()
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$EntrySet: boolean contains(java.lang.Object)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapperImpl: com.airbnb.lottie.value.Keyframe getCurrentKeyframe()
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.LottieAnimationView$SavedState: LottieAnimationView$SavedState(android.os.Parcelable)
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationX()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getBoxStrokeErrorColor()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidth(int)
com.airbnb.lottie.PerformanceTracker: void logRenderTimes()
net.sqlcipher.database.SQLiteQueryBuilder: void setCursorFactory(net.sqlcipher.database.SQLiteDatabase$CursorFactory)
com.airbnb.lottie.utils.LottieValueAnimator: float getAnimatedFraction()
com.airbnb.lottie.parser.ShapeGroupParser: <clinit>()
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
net.sqlcipher.AbstractWindowedCursor: boolean isString(int)
com.airbnb.lottie.LottieComposition$Factory: com.airbnb.lottie.LottieComposition fromJsonSync(com.airbnb.lottie.parser.moshi.JsonReader)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
com.google.android.material.chip.Chip: float getTextStartPadding()
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
com.airbnb.lottie.animation.content.MergePathsContent: void absorbContent(java.util.ListIterator)
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setTitle(java.lang.CharSequence)
net.sqlcipher.database.SQLiteQueryBuilder: java.lang.String buildUnionSubQuery(java.lang.String,java.lang.String[],java.util.Set,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)
com.airbnb.lottie.animation.content.RepeaterContent: void draw(android.graphics.Canvas,android.graphics.Matrix,int)
com.airbnb.lottie.model.Font: java.lang.String getFamily()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.airbnb.lottie.value.LottieFrameInfo: float getInterpolatedKeyframeProgress()
com.airbnb.lottie.animation.content.GradientFillContent: void draw(android.graphics.Canvas,android.graphics.Matrix,int)
androidx.constraintlayout.widget.Barrier: int getMargin()
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$EntrySet: LinkedHashTreeMap$EntrySet(com.airbnb.lottie.parser.moshi.LinkedHashTreeMap)
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieResult fromUrlSync(android.content.Context,java.lang.String)
com.airbnb.lottie.LottieComposition: void incrementMatteOrMaskCount(int)
com.airbnb.lottie.LottieDrawable: float getMaxScale(android.graphics.Canvas)
androidx.constraintlayout.helper.widget.Flow: void setPaddingLeft(int)
com.google.android.material.tabs.TabLayout$TabView: int getContentHeight()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
net.sqlcipher.DatabaseUtils: void dumpCurrentRow(net.sqlcipher.Cursor,java.lang.StringBuilder)
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: char readEscapeCharacter()
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardForegroundColor()
leakcanary.AndroidLeakFixes: leakcanary.AndroidLeakFixes[] values()
androidx.constraintlayout.widget.Barrier: int getType()
androidx.cardview.widget.CardView: float getCardElevation()
net.sqlcipher.AbstractWindowedCursor: boolean isFloat(int)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.LottieCompositionFactory$3: LottieCompositionFactory$3(java.lang.ref.WeakReference,android.content.Context,int)
com.airbnb.lottie.LottieAnimationView: void setMinAndMaxProgress(float,float)
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
net.sqlcipher.BulkCursorToCursorAdaptor: void registerDataSetObserver(android.database.DataSetObserver)
com.bumptech.glide.module.AppGlideModule: AppGlideModule()
com.dimas.made1.core.data.source.local.room.AppDatabase_Impl: AppDatabase_Impl()
com.airbnb.lottie.manager.FontAssetManager: FontAssetManager(android.graphics.drawable.Drawable$Callback,com.airbnb.lottie.FontAssetDelegate)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
com.airbnb.lottie.parser.moshi.JsonReader: void beginObject()
com.airbnb.lottie.animation.content.RepeaterContent: void absorbContent(java.util.ListIterator)
com.airbnb.lottie.animation.content.EllipseContent: void resolveKeyPath(com.airbnb.lottie.model.KeyPath,int,java.util.List,com.airbnb.lottie.model.KeyPath)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.airbnb.lottie.model.layer.TextLayer: void drawFontTextLine(java.lang.String,com.airbnb.lottie.model.DocumentData,android.graphics.Canvas,float)
net.sqlcipher.database.SQLiteStatement: long executeInsert()
com.google.android.material.bottomnavigation.BottomNavigationMenuView: int getItemTextAppearanceInactive()
com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setPresenter(com.google.android.material.bottomnavigation.BottomNavigationPresenter)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
com.airbnb.lottie.animation.content.EllipseContent: EllipseContent(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer,com.airbnb.lottie.model.content.CircleShape)
com.google.gson.internal.bind.TypeAdapters$29: TypeAdapters$29()
com.google.android.material.chip.ChipGroup: void setShowDividerVertical(int)
com.google.android.material.card.MaterialCardView: int getContentPaddingBottom()
com.airbnb.lottie.model.content.ShapePath: boolean isHidden()
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$KeySet: boolean contains(java.lang.Object)
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
com.google.android.material.chip.Chip: void setCheckable(boolean)
leakcanary.KeyedWeakReference: long access$getHeapDumpUptimeMillis$cp()
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
com.airbnb.lottie.parser.GradientColorParser: int getOpacityAtPosition(double,double[],double[])
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
com.google.gson.internal.bind.TypeAdapters$6: TypeAdapters$6()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
net.sqlcipher.AbstractCursor: boolean moveToLast()
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: void beginArray()
com.airbnb.lottie.model.layer.Layer$MatteType: <clinit>()
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
com.airbnb.lottie.model.Marker: boolean matchesName(java.lang.String)
leakcanary.internal.InternalLeakCanary: android.content.SharedPreferences getHeapDumpPrefs()
com.airbnb.lottie.animation.content.GradientFillContent: void addValueCallback(java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)
com.airbnb.lottie.LottieAnimationView: void init(android.util.AttributeSet,int)
com.airbnb.lottie.utils.LottieValueAnimator: void setFrame(float)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityStopped(android.app.Activity)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
com.airbnb.lottie.LottieAnimationView: void setCompositionTask(com.airbnb.lottie.LottieTask)
net.sqlcipher.DatabaseUtils$InsertHelper: net.sqlcipher.database.SQLiteStatement getStatement(boolean)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
net.sqlcipher.database.SQLiteDatabase: void loadICUData(android.content.Context,java.io.File)
leakcanary.internal.InternalLeakCanary: void checkRunningInDebuggableBuild()
com.google.gson.internal.bind.TypeAdapters$24: TypeAdapters$24()
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
net.sqlcipher.BulkCursorToCursorAdaptor: java.lang.String[] getColumnNames()
com.airbnb.lottie.LottieAnimationView: void pauseAnimation()
com.airbnb.lottie.LottieAnimationView: void onAttachedToWindow()
com.airbnb.lottie.model.FontCharacter: java.util.List getShapes()
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setTextAppearanceActive(int)
com.google.android.material.chip.Chip: void setChipEndPadding(float)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.airbnb.lottie.model.layer.BaseLayer: void applyMasks(android.graphics.Canvas,android.graphics.Matrix)
com.airbnb.lottie.LottieDrawable$7: LottieDrawable$7(com.airbnb.lottie.LottieDrawable,float)
com.airbnb.lottie.model.MutablePair: int hashCode()
com.google.android.material.tabs.TabLayout: void setSelectedTabIndicator(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
com.airbnb.lottie.model.content.ShapeTrimPath: java.lang.String getName()
com.facebook.shimmer.ShimmerFrameLayout: ShimmerFrameLayout(android.content.Context,android.util.AttributeSet)
net.sqlcipher.IBulkCursor: boolean updateRows(java.util.Map)
net.sqlcipher.database.SQLiteDatabase: boolean isDatabaseIntegrityOk()
com.airbnb.lottie.animation.content.MergePathsContent$1: <clinit>()
com.google.android.material.bottomappbar.BottomAppBar: void setBackgroundTint(android.content.res.ColorStateList)
com.airbnb.lottie.utils.BaseLottieAnimator: void removeUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)
com.airbnb.lottie.model.layer.TextLayer: TextLayer(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.Layer)
com.airbnb.lottie.LottieAnimationView: void cancelAnimation()
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteStatement compileStatement(java.lang.String)
com.airbnb.lottie.LottieComposition$Factory: com.airbnb.lottie.LottieComposition fromFileSync(android.content.Context,java.lang.String)
com.airbnb.lottie.model.animatable.BaseAnimatableValue: boolean isStatic()
com.dimas.made1.splashscreen.SplashScreenFragment: SplashScreenFragment()
com.airbnb.lottie.model.content.ShapeTrimPath: java.lang.String toString()
com.airbnb.lottie.animation.keyframe.ColorKeyframeAnimation: java.lang.Integer getValue(com.airbnb.lottie.value.Keyframe,float)
org.koin.core.logger.Level: org.koin.core.logger.Level valueOf(java.lang.String)
com.google.android.material.chip.Chip: float getChipMinHeight()
net.sqlcipher.AbstractCursor: int getColumnIndexOrThrow(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
com.airbnb.lottie.utils.MiscUtils: int floorDiv(int,int)
net.sqlcipher.database.SqliteWrapper: boolean isLowMemory(net.sqlcipher.database.SQLiteException)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
com.airbnb.lottie.LottieAnimationView$1: void onResult(java.lang.Throwable)
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context)
net.sqlcipher.CursorWindow: double getDouble_native(int,int)
net.sqlcipher.database.SQLiteDebug: long getHeapAllocatedSize()
com.airbnb.lottie.model.content.RectangleShape: java.lang.String getName()
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode valueOf(java.lang.String)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$1: LinkedHashTreeMap$1()
com.airbnb.lottie.animation.content.ShapeContent: ShapeContent(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer,com.airbnb.lottie.model.content.ShapePath)
com.airbnb.lottie.LottieComposition$Factory: com.airbnb.lottie.LottieComposition fromInputStreamSync(java.io.InputStream,boolean)
com.airbnb.lottie.parser.AnimatableTransformParser: boolean isAnchorPointIdentity(com.airbnb.lottie.model.animatable.AnimatablePathValue)
com.airbnb.lottie.LottieAnimationView: void setMinAndMaxFrame(int,int)
net.sqlcipher.database.SQLiteDatabase: void closeClosable()
com.airbnb.lottie.LottieTask: LottieTask(java.util.concurrent.Callable,boolean)
net.sqlcipher.CursorWindow: int getNumRows()
com.airbnb.lottie.model.animatable.AnimatableTextFrame: AnimatableTextFrame(java.util.List)
androidx.navigation.dynamicfeatures.fragment.ui.DefaultProgressFragment: DefaultProgressFragment()
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String)
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: double nextDouble()
com.airbnb.lottie.model.animatable.AnimatableValue: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation createAnimation()
androidx.viewpager.widget.ViewPager: void setPageMargin(int)
net.sqlcipher.BulkCursorToCursorAdaptor: boolean deleteRow()
net.sqlcipher.database.SQLiteDatabase: void enableSqlProfiling(java.lang.String)
com.google.gson.internal.bind.TypeAdapters$30: TypeAdapters$30()
net.sqlcipher.database.SQLiteDatabase: java.lang.String getTime()
net.sqlcipher.CursorWrapper: int getType(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
com.airbnb.lottie.LottieAnimationView: boolean addLottieOnCompositionLoadedListener(com.airbnb.lottie.LottieOnCompositionLoadedListener)
com.airbnb.lottie.manager.FontAssetManager: android.graphics.Typeface getTypeface(java.lang.String,java.lang.String)
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener)
com.airbnb.lottie.animation.content.StrokeContent: void draw(android.graphics.Canvas,android.graphics.Matrix,int)
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
com.airbnb.lottie.model.content.ShapeStroke$LineCapType: ShapeStroke$LineCapType(java.lang.String,int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec)
net.sqlcipher.CursorWindow: boolean putDouble(double,int,int)
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setCheckable(boolean)
com.airbnb.lottie.LottieDrawable: android.graphics.Bitmap updateBitmap(java.lang.String,android.graphics.Bitmap)
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
com.airbnb.lottie.model.content.Mask: Mask(com.airbnb.lottie.model.content.Mask$MaskMode,com.airbnb.lottie.model.animatable.AnimatableShapeValue,com.airbnb.lottie.model.animatable.AnimatableIntegerValue,boolean)
com.google.android.material.tabs.TabLayout: void setInlineLabel(boolean)
net.sqlcipher.database.SQLiteQueryBuilder: void setTables(java.lang.String)
com.airbnb.lottie.model.content.GradientStroke: boolean isHidden()
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
net.sqlcipher.database.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.Object[])
net.sqlcipher.CursorWindow: void finalize()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.constraintlayout.helper.widget.Flow: Flow(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$1: int compare(java.lang.Object,java.lang.Object)
com.airbnb.lottie.model.layer.Layer: com.airbnb.lottie.model.animatable.AnimatableTextFrame getText()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpecResource(int)
net.sqlcipher.StaleDataException: StaleDataException(java.lang.String)
com.airbnb.lottie.utils.MiscUtils: int floorMod(int,int)
com.airbnb.lottie.network.NetworkFetcher: java.lang.String getErrorFromConnection(java.net.HttpURLConnection)
com.airbnb.lottie.PerformanceTracker: void removeFrameListener(com.airbnb.lottie.PerformanceTracker$FrameListener)
net.sqlcipher.DatabaseUtils: void cursorRowToContentValues(net.sqlcipher.Cursor,android.content.ContentValues)
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
com.google.android.material.card.MaterialCardView: void setCheckedIconResource(int)
com.airbnb.lottie.value.LottieRelativeIntegerValueCallback: java.lang.Integer getOffset(com.airbnb.lottie.value.LottieFrameInfo)
com.airbnb.lottie.parser.ShapeStrokeParser: com.airbnb.lottie.model.content.ShapeStroke parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
com.airbnb.lottie.utils.LogcatLogger: void warning(java.lang.String)
com.airbnb.lottie.model.animatable.AnimatableIntegerValue: java.lang.String toString()
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$KeySet$1: java.lang.Object next()
net.sqlcipher.AbstractCursor: int getCount()
net.sqlcipher.database.SQLiteCursor: void fillWindow(int)
com.airbnb.lottie.model.animatable.AnimatableSplitDimensionPathValue: AnimatableSplitDimensionPathValue(com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openOrCreateDatabase(java.lang.String,java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory,net.sqlcipher.database.SQLiteDatabaseHook)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.airbnb.lottie.value.LottieInterpolatedFloatValue: java.lang.Float interpolateValue(java.lang.Float,java.lang.Float,float)
leakcanary.internal.activity.LeakActivity: LeakActivity()
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()
com.airbnb.lottie.animation.content.FillContent: java.lang.String getName()
com.google.android.material.chip.Chip: float getChipIconSize()
com.airbnb.lottie.LottieDrawable: boolean isApplyingOpacityToLayersEnabled()
com.google.android.material.chip.Chip: void setMaxWidth(int)
com.airbnb.lottie.utils.BaseLottieAnimator: void notifyStart(boolean)
com.google.android.material.chip.Chip: void setCloseIconResource(int)
com.airbnb.lottie.value.LottieInterpolatedPointValue: LottieInterpolatedPointValue(android.graphics.PointF,android.graphics.PointF)
net.sqlcipher.database.SQLiteDirectCursorDriver: void cursorRequeried(android.database.Cursor)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: float getStartDelayProgress()
com.airbnb.lottie.parser.PolystarShapeParser: PolystarShapeParser()
com.airbnb.lottie.LottieDrawable$1: LottieDrawable$1(com.airbnb.lottie.LottieDrawable)
com.airbnb.lottie.LottieComposition: com.airbnb.lottie.model.Marker getMarker(java.lang.String)
androidx.viewpager2.widget.ViewPager2: void setUserInputEnabled(boolean)
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieTask fromZipStream(java.util.zip.ZipInputStream,java.lang.String)
com.airbnb.lottie.model.content.PolystarShape: com.airbnb.lottie.model.animatable.AnimatableFloatValue getOuterRoundedness()
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
net.sqlcipher.DatabaseUtils$InsertHelper: void bindNull(int)
com.google.android.material.bottomnavigation.BottomNavigationView: void setItemTextAppearanceInactive(int)
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setIconSize(int)
net.sqlcipher.database.SQLiteDatabase: void beginTransaction()
net.sqlcipher.database.SQLiteCursor: int getColumnIndex(java.lang.String)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
com.google.android.material.tabs.TabLayout: TabLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieResult fromAssetSync(android.content.Context,java.lang.String,java.lang.String)
com.airbnb.lottie.LottieAnimationView: android.graphics.Bitmap updateBitmap(java.lang.String,android.graphics.Bitmap)
com.airbnb.lottie.animation.content.EllipseContent: void invalidate()
com.google.gson.internal.bind.TypeAdapters$1: TypeAdapters$1()
com.airbnb.lottie.parser.FontParser: com.airbnb.lottie.model.Font parse(com.airbnb.lottie.parser.moshi.JsonReader)
com.airbnb.lottie.R$id: R$id()
net.sqlcipher.database.SQLiteDatabase: int native_status(int,boolean)
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.airbnb.lottie.LottieAnimationView: int getRepeatMode()
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$1: int compare(java.lang.Comparable,java.lang.Comparable)
net.sqlcipher.AbstractWindowedCursor: short getShort(int)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$EntrySet$1: java.util.Map$Entry next()
com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation: java.lang.Float getValue(com.airbnb.lottie.value.Keyframe,float)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
net.sqlcipher.IBulkCursor: java.lang.String[] getColumnNames()
net.sqlcipher.database.DatabaseObjectNotClosedException: DatabaseObjectNotClosedException()
com.airbnb.lottie.LottieDrawable: int getFrame()
com.airbnb.lottie.model.layer.Layer: int getSolidWidth()
com.airbnb.lottie.parser.LottieCompositionMoshiParser: LottieCompositionMoshiParser()
com.airbnb.lottie.animation.content.MergePathsContent: void opFirstPathWithRest(android.graphics.Path$Op)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
com.airbnb.lottie.LottieComposition: float getEndFrame()
com.airbnb.lottie.model.animatable.AnimatableShapeValue: boolean isStatic()
leakcanary.internal.NotificationReceiver$Action: leakcanary.internal.NotificationReceiver$Action[] values()
com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout$Tab getTab()
net.sqlcipher.database.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)
net.sqlcipher.database.SQLiteQuery: java.lang.String native_column_name(int)
com.airbnb.lottie.value.Keyframe: java.lang.String toString()
com.airbnb.lottie.model.content.MergePaths: java.lang.String toString()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: float getLinearCurrentKeyframeProgress()
net.sqlcipher.database.SupportHelper$1: void onUpgrade(net.sqlcipher.database.SQLiteDatabase,int,int)
com.airbnb.lottie.model.animatable.AnimatableGradientColorValue: java.util.List getKeyframes()
net.sqlcipher.CursorWrapper: CursorWrapper(net.sqlcipher.Cursor)
net.sqlcipher.database.SQLiteDatabase: void loadLibs(android.content.Context,java.io.File,net.sqlcipher.database.SQLiteDatabase$LibraryLoader)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationZ(float)
com.google.android.material.tabs.TabLayout: void setInlineLabelResource(int)
net.sqlcipher.AbstractCursor: boolean isFieldUpdated(int)
androidx.media.AudioAttributesImplApi21: AudioAttributesImplApi21()
com.airbnb.lottie.model.content.CircleShape: java.lang.String getName()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZResource(int)
net.sqlcipher.IBulkCursor: void onMove(int)
net.sqlcipher.DatabaseUtils: java.lang.String stringForQuery(net.sqlcipher.database.SQLiteDatabase,java.lang.String,java.lang.String[])
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
net.sqlcipher.CursorWindow: boolean putLong(long,int,int)
com.airbnb.lottie.parser.ContentModelParser: ContentModelParser()
com.airbnb.lottie.animation.content.GradientStrokeContent: java.lang.String getName()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.airbnb.lottie.LottieComposition: void setPerformanceTrackingEnabled(boolean)
com.airbnb.lottie.LottieDrawable: void resumeAnimation()
com.airbnb.lottie.LottieDrawable: void setTextDelegate(com.airbnb.lottie.TextDelegate)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.airbnb.lottie.LottieAnimationView$1: void onResult(java.lang.Object)
com.airbnb.lottie.parser.LottieCompositionMoshiParser: com.airbnb.lottie.LottieComposition parse(com.airbnb.lottie.parser.moshi.JsonReader)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColorStateList(android.content.res.ColorStateList)
net.sqlcipher.AbstractCursor: long getLong(int)
net.sqlcipher.database.SQLiteProgram: void native_compile(java.lang.String)
net.sqlcipher.database.SQLiteDatabase: void loadLibs(android.content.Context,java.io.File)
com.airbnb.lottie.model.content.ShapeTrimPath$Type: <clinit>()
com.airbnb.lottie.parser.moshi.JsonReader: void endArray()
com.airbnb.lottie.utils.LottieValueAnimator: void setRepeatMode(int)
com.airbnb.lottie.value.LottieRelativePointValueCallback: LottieRelativePointValueCallback(android.graphics.PointF)
androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)
com.google.android.material.bottomnavigation.BottomNavigationView: void setItemHorizontalTranslationEnabled(boolean)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.Cursor rawQuery(java.lang.String,java.lang.Object[])
com.airbnb.lottie.LottieDrawable: void setMaxProgress(float)
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
com.google.android.material.timepicker.ClockFaceView: ClockFaceView(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openOrCreateDatabase(java.lang.String,byte[],net.sqlcipher.database.SQLiteDatabase$CursorFactory,net.sqlcipher.database.SQLiteDatabaseHook,net.sqlcipher.DatabaseErrorHandler)
net.sqlcipher.CursorWindow: long getLong_native(int,int)
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
com.airbnb.lottie.utils.GammaEvaluator: int evaluate(float,int,int)
net.sqlcipher.DatabaseUtils: void dumpCursor(net.sqlcipher.Cursor,java.io.PrintStream)
com.google.android.material.internal.BaselineLayout: int getBaseline()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
com.google.android.material.chip.ChipGroup: void setFlexWrap(int)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
net.sqlcipher.CursorWindow: int getNumRows_native()
com.airbnb.lottie.utils.Utils: boolean isAtLeastVersion(int,int,int,int,int,int)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)
com.airbnb.lottie.LottieCompositionFactory$1: com.airbnb.lottie.LottieResult call()
com.airbnb.lottie.LottieResult: boolean equals(java.lang.Object)
com.airbnb.lottie.LottieDrawable: void setAlpha(int)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
net.sqlcipher.AbstractCursor: boolean updateLong(int,long)
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setTextColor(android.content.res.ColorStateList)
com.airbnb.lottie.R$attr: R$attr()
com.airbnb.lottie.parser.RectangleShapeParser: RectangleShapeParser()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundResource(int)
com.google.android.material.chip.ChipGroup: int getChipCount()
com.airbnb.lottie.parser.KeyframeParser: com.airbnb.lottie.value.Keyframe parseKeyframe(com.airbnb.lottie.LottieComposition,com.airbnb.lottie.parser.moshi.JsonReader,float,com.airbnb.lottie.parser.ValueParser)
com.airbnb.lottie.parser.moshi.JsonScope: java.lang.String getPath(int,int[],java.lang.String[],int[])
com.airbnb.lottie.LottieAnimationView: LottieAnimationView(android.content.Context)
net.sqlcipher.database.SQLiteDatabase: void native_setLocale(java.lang.String,int)
net.sqlcipher.AbstractCursor: boolean deleteRow()
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
net.sqlcipher.CursorWindow: byte[] getBlob(int,int)
net.sqlcipher.CrossProcessCursorWrapper: void fillWindow(int,android.database.CursorWindow)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
com.airbnb.lottie.LottieTask: com.airbnb.lottie.LottieTask addFailureListener(com.airbnb.lottie.LottieListener)
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
com.airbnb.lottie.LottieDrawable: void setMinAndMaxFrame(java.lang.String)
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
com.airbnb.lottie.model.content.MergePaths: java.lang.String getName()
com.airbnb.lottie.model.layer.BaseLayer: void draw(android.graphics.Canvas,android.graphics.Matrix,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
com.airbnb.lottie.LottieCompositionFactory$5: LottieCompositionFactory$5(org.json.JSONObject,java.lang.String)
net.sqlcipher.UnknownTypeException: UnknownTypeException(java.lang.String)
net.sqlcipher.AbstractCursor: int getType(int)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory valueOf(java.lang.String)
com.airbnb.lottie.LottieComposition$Factory: com.airbnb.lottie.Cancellable fromRawFile(android.content.Context,int,com.airbnb.lottie.OnCompositionLoadedListener)
com.airbnb.lottie.animation.keyframe.ScaleKeyframeAnimation: com.airbnb.lottie.value.ScaleXY getValue(com.airbnb.lottie.value.Keyframe,float)
com.airbnb.lottie.model.layer.Layer: java.lang.String toString()
net.sqlcipher.DatabaseUtils: void bindObjectToProgram(net.sqlcipher.database.SQLiteProgram,int,java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getExpandedComponentIdHint()
net.sqlcipher.BulkCursorProxy: boolean getWantsAllOnMoveCalls()
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
net.sqlcipher.AbstractWindowedCursor: boolean hasWindow()
com.airbnb.lottie.utils.Utils: void saveLayerCompat(android.graphics.Canvas,android.graphics.RectF,android.graphics.Paint)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
net.sqlcipher.database.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
com.airbnb.lottie.model.layer.BaseLayer: BaseLayer(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.Layer)
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
com.airbnb.lottie.utils.MiscUtils: int clamp(int,int,int)
com.airbnb.lottie.model.layer.TextLayer: boolean isModifier(int)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
com.airbnb.lottie.LottieCompositionFactory$9: com.airbnb.lottie.LottieResult call()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.airbnb.lottie.LottieAnimationView: void setSafeMode(boolean)
com.google.gson.internal.bind.ObjectTypeAdapter$1: ObjectTypeAdapter$1()
com.airbnb.lottie.parser.KeyframesParser: <clinit>()
androidx.lifecycle.ViewModel: ViewModel()
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: void skipToEndOfLine()
com.airbnb.lottie.LottieAnimationView: void removeUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)
com.google.android.material.textfield.TextInputLayout: int getErrorTextCurrentColor()
com.airbnb.lottie.model.animatable.AnimatableFloatValue: AnimatableFloatValue(java.util.List)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.airbnb.lottie.model.animatable.AnimatableShapeValue: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation createAnimation()
net.sqlcipher.DatabaseUtils: void appendValueToSql(java.lang.StringBuilder,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
androidx.lifecycle.ViewModelStore: void clear()
com.google.android.material.card.MaterialCardView: void setCheckedIconSize(int)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScroll(boolean)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
net.sqlcipher.CursorWindow: double getDouble(int,int)
com.airbnb.lottie.LottieComposition: LottieComposition()
com.airbnb.lottie.model.content.ShapeFill: ShapeFill(java.lang.String,boolean,android.graphics.Path$FillType,com.airbnb.lottie.model.animatable.AnimatableColorValue,com.airbnb.lottie.model.animatable.AnimatableIntegerValue,boolean)
com.airbnb.lottie.model.LottieCompositionCache: com.airbnb.lottie.model.LottieCompositionCache getInstance()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
com.airbnb.lottie.utils.BaseLottieAnimator: void notifyRepeat()
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: void notifyListeners()
net.sqlcipher.DatabaseUtils: long queryNumEntries(net.sqlcipher.database.SQLiteDatabase,java.lang.String)
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
net.sqlcipher.CursorWindow: void setCursorWindowAllocation(net.sqlcipher.CursorWindowAllocation)
com.airbnb.lottie.parser.CircleShapeParser: com.airbnb.lottie.model.content.CircleShape parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatPressedTranslationZ()
com.google.android.material.card.MaterialCardView: void setClickable(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCustomSize(int)
com.airbnb.lottie.animation.content.EllipseContent: void setContents(java.util.List,java.util.List)
com.airbnb.lottie.LottieAnimationView: void setAnimationFromUrl(java.lang.String)
com.google.android.material.bottomnavigation.BottomNavigationView: android.content.res.ColorStateList getItemTextColor()
net.sqlcipher.BulkCursorNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevation(float)
com.airbnb.lottie.model.content.Mask$MaskMode: Mask$MaskMode(java.lang.String,int)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$EmptyKeyframeWrapper: boolean isCachedValueEnabled(float)
com.google.android.material.chip.ChipGroup: void setChipSpacingVertical(int)
net.sqlcipher.database.SQLiteCursor: void deactivate()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
com.airbnb.lottie.parser.AnimatableValueParser: com.airbnb.lottie.model.animatable.AnimatableIntegerValue parseInteger(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
com.airbnb.lottie.utils.MeanCalculator: float getMean()
net.sqlcipher.database.SQLiteDatabase$SyncUpdateInfo: SQLiteDatabase$SyncUpdateInfo(java.lang.String,java.lang.String,java.lang.String)
androidx.cardview.widget.CardView: void setMinimumHeight(int)
com.airbnb.lottie.parser.moshi.JsonScope: JsonScope()
androidx.constraintlayout.helper.widget.Flow: void setVerticalBias(float)
androidx.fragment.app.DialogFragment: DialogFragment()
com.airbnb.lottie.FontAssetDelegate: FontAssetDelegate()
com.airbnb.lottie.model.content.MergePaths: boolean isHidden()
com.airbnb.lottie.parser.ShapeFillParser: com.airbnb.lottie.model.content.ShapeFill parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
net.sqlcipher.database.SQLiteProgram: SQLiteProgram(net.sqlcipher.database.SQLiteDatabase,java.lang.String)
net.sqlcipher.database.SQLiteQuery: java.lang.String columnNameLocked(int)
com.airbnb.lottie.model.content.GradientFill: com.airbnb.lottie.model.animatable.AnimatableFloatValue getHighlightLength()
com.airbnb.lottie.LottieDrawable: float getScale()
com.airbnb.lottie.model.animatable.AnimatablePathValue: AnimatablePathValue()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
net.sqlcipher.database.SQLiteQuery: java.lang.String toString()
androidx.navigation.dynamicfeatures.fragment.ui.InstallViewModel: InstallViewModel()
com.airbnb.lottie.R$color: R$color()
com.airbnb.lottie.model.MutablePair: boolean objectsEqual(java.lang.Object,java.lang.Object)
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: <clinit>()
com.airbnb.lottie.LottieDrawable: boolean isAnimating()
leakcanary.KeyedWeakReference: void access$setHeapDumpUptimeMillis$cp(long)
com.airbnb.lottie.model.layer.BaseLayer: boolean hasMatteOnThisLayer()
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
com.airbnb.lottie.animation.content.PolystarContent: PolystarContent(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer,com.airbnb.lottie.model.content.PolystarShape)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding[] values()
net.sqlcipher.database.SQLiteCursor: SQLiteCursor(net.sqlcipher.database.SQLiteDatabase,net.sqlcipher.database.SQLiteCursorDriver,java.lang.String,net.sqlcipher.database.SQLiteQuery)
net.sqlcipher.database.SQLiteDatabase: SQLiteDatabase(java.lang.String,char[],net.sqlcipher.database.SQLiteDatabase$CursorFactory,int,net.sqlcipher.database.SQLiteDatabaseHook)
net.sqlcipher.CursorWindow: java.lang.String getString_native(int,int)
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList getTabRippleColor()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)
com.google.android.material.button.MaterialButton: void setIconGravity(int)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
com.airbnb.lottie.animation.keyframe.ScaleKeyframeAnimation: ScaleKeyframeAnimation(java.util.List)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
com.airbnb.lottie.parser.AnimatableTextPropertiesParser: com.airbnb.lottie.model.animatable.AnimatableTextProperties parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
net.sqlcipher.DatabaseUtils: byte[] getCollationKeyInBytes(java.lang.String)
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
com.airbnb.lottie.model.layer.BaseLayer: void addAnimation(com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: android.graphics.drawable.Drawable getItemBackground()
com.airbnb.lottie.LottieDrawable$4: void run(com.airbnb.lottie.LottieComposition)
com.airbnb.lottie.value.LottieRelativePointValueCallback: android.graphics.PointF getValue(com.airbnb.lottie.value.LottieFrameInfo)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.airbnb.lottie.LottieDrawable: void draw(android.graphics.Canvas)
net.sqlcipher.DatabaseUtils: void appendEscapedSQLString(java.lang.StringBuilder,java.lang.String)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.airbnb.lottie.LottieComposition$Factory: com.airbnb.lottie.Cancellable fromAssetFileName(android.content.Context,java.lang.String,com.airbnb.lottie.OnCompositionLoadedListener)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
androidx.viewpager2.widget.ViewPager2: int getItemDecorationCount()
com.airbnb.lottie.model.KeyPath: java.lang.String toString()
com.google.gson.internal.bind.TypeAdapters$19: TypeAdapters$19()
net.sqlcipher.DatabaseUtils: void cursorIntToContentValuesIfPresent(net.sqlcipher.Cursor,android.content.ContentValues,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
com.google.android.material.bottomappbar.BottomAppBar: boolean getHideOnScroll()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
com.airbnb.lottie.animation.keyframe.GradientColorKeyframeAnimation: com.airbnb.lottie.model.content.GradientColor getValue(com.airbnb.lottie.value.Keyframe,float)
com.airbnb.lottie.parser.FloatParser: java.lang.Float parse(com.airbnb.lottie.parser.moshi.JsonReader,float)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()
com.airbnb.lottie.LottieComposition$Factory$ListenerAdapter: void onResult(com.airbnb.lottie.LottieComposition)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationX(float)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
com.airbnb.lottie.parser.LayerParser: com.airbnb.lottie.model.layer.Layer parse(com.airbnb.lottie.LottieComposition)
com.airbnb.lottie.model.animatable.AnimatableScaleValue: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation createAnimation()
com.airbnb.lottie.model.content.ShapePath: java.lang.String toString()
com.airbnb.lottie.R$anim: R$anim()
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
com.airbnb.lottie.parser.AnimatableTransformParser: boolean isRotationIdentity(com.airbnb.lottie.model.animatable.AnimatableFloatValue)
net.sqlcipher.database.SQLiteDatabase: boolean enableWriteAheadLogging()
com.airbnb.lottie.parser.ScaleXYParser: ScaleXYParser()
com.airbnb.lottie.model.layer.BaseLayer: void setupInOutAnimations()
com.airbnb.lottie.model.content.PolystarShape: com.airbnb.lottie.model.animatable.AnimatableFloatValue getInnerRoundedness()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
leakcanary.internal.InternalLeakCanary: void addDynamicShortcut(android.app.Application)
com.airbnb.lottie.model.KeyPath: KeyPath(java.lang.String[])
com.airbnb.lottie.value.ScaleXY: float getScaleY()
net.sqlcipher.DatabaseUtils: java.lang.String getHexCollationKey(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
com.airbnb.lottie.utils.GammaEvaluator: float EOCF_sRGB(float)
com.airbnb.lottie.LottieDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
com.google.android.material.tabs.TabLayout: void setSelectedTabIndicator(android.graphics.drawable.Drawable)
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.airbnb.lottie.value.LottieValueCallback: void setValue(java.lang.Object)
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$AvlIterator: void reset(com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openDatabase(java.lang.String,char[],net.sqlcipher.database.SQLiteDatabase$CursorFactory,int,net.sqlcipher.database.SQLiteDatabaseHook,net.sqlcipher.DatabaseErrorHandler)
com.airbnb.lottie.R$drawable: R$drawable()
com.airbnb.lottie.animation.content.FillContent: void resolveKeyPath(com.airbnb.lottie.model.KeyPath,int,java.util.List,com.airbnb.lottie.model.KeyPath)
com.airbnb.lottie.network.NetworkFetcher: com.airbnb.lottie.LottieResult fetchFromNetwork()
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieTask fromJsonInputStream(java.io.InputStream,java.lang.String)
net.sqlcipher.database.SQLiteStatement: long simpleQueryForLong()
com.airbnb.lottie.model.KeyPath: boolean isContainer(java.lang.String)
com.airbnb.lottie.animation.content.CompoundTrimPathContent: void apply(android.graphics.Path)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
com.google.android.material.chip.Chip: void setTextStartPadding(float)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$KeySet: int size()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
com.airbnb.lottie.animation.keyframe.PointKeyframeAnimation: PointKeyframeAnimation(java.util.List)
com.airbnb.lottie.parser.JsonUtils: android.graphics.PointF jsonToPoint(com.airbnb.lottie.parser.moshi.JsonReader,float)
net.sqlcipher.BulkCursorToCursorAdaptor: boolean requery()
com.airbnb.lottie.parser.FontParser: <clinit>()
com.airbnb.lottie.model.content.CircleShape: CircleShape(java.lang.String,com.airbnb.lottie.model.animatable.AnimatableValue,com.airbnb.lottie.model.animatable.AnimatablePointValue,boolean,boolean)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node: int hashCode()
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$EntrySet$1: java.lang.Object next()
com.airbnb.lottie.LottieComposition: float getFrameRate()
com.airbnb.lottie.utils.Utils: void closeQuietly(java.io.Closeable)
androidx.cardview.widget.CardView: int getContentPaddingLeft()
com.airbnb.lottie.value.LottieRelativeFloatValueCallback: LottieRelativeFloatValueCallback(java.lang.Float)
androidx.fragment.app.FragmentActivity: FragmentActivity()
com.airbnb.lottie.parser.JsonUtils$1: <clinit>()
com.airbnb.lottie.model.content.ShapeTrimPath: com.airbnb.lottie.model.content.ShapeTrimPath$Type getType()
net.sqlcipher.AbstractCursor: byte[] getBlob(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
com.airbnb.lottie.model.content.GradientType: GradientType(java.lang.String,int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setAnimateShowBeforeLayout(boolean)
com.airbnb.lottie.LottieAnimationView: void setProgress(float)
leakcanary.internal.InternalLeakCanary: boolean getApplicationVisible()
net.sqlcipher.database.SQLiteDatabase: void addToCompiledQueries(java.lang.String,net.sqlcipher.database.SQLiteCompiledSql)
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieTask fromRawRes(android.content.Context,int,java.lang.String)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setLabelVisibilityMode(int)
com.airbnb.lottie.utils.BaseLottieAnimator: void notifyCancel()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardBackgroundColor()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.constraintlayout.widget.ConstraintHelper: void setReferenceTags(java.lang.String)
net.sqlcipher.AbstractWindowedCursor: double getDouble(int)
com.google.android.material.tabs.TabLayout: void setTabIndicatorAnimationMode(int)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapper wrap(java.util.List)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.airbnb.lottie.network.NetworkFetcher: NetworkFetcher(android.content.Context,java.lang.String,java.lang.String)
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
net.sqlcipher.MatrixCursor: short getShort(int)
net.sqlcipher.database.SQLiteCursor: void queryThreadLock()
com.airbnb.lottie.model.FontCharacter: int hashFor(char,java.lang.String,java.lang.String)
com.airbnb.lottie.model.layer.BaseLayer: boolean hasMasksOnThisLayer()
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
com.airbnb.lottie.value.LottieValueCallback: void setAnimation(com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation)
leakcanary.internal.PlumberInstaller: PlumberInstaller()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getRippleColorStateList()
net.sqlcipher.database.SQLiteDatabase$2: void run()
com.airbnb.lottie.LottieImageAsset: int getHeight()
net.sqlcipher.database.SQLiteStatement: void execute()
com.airbnb.lottie.model.content.Repeater: java.lang.String getName()
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int doPeek()
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
net.sqlcipher.IBulkCursor: net.sqlcipher.CursorWindow getWindow(int)
curtains.WindowType: curtains.WindowType valueOf(java.lang.String)
net.sqlcipher.database.SQLiteCursor: boolean onMove(int,int)
leakcanary.internal.InternalLeakCanary: boolean isDebuggableBuild()
com.airbnb.lottie.LottieAnimationView: com.airbnb.lottie.LottieListener access$200()
net.sqlcipher.database.SQLiteProgram: void native_finalize()
com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.badge.BadgeDrawable getOrCreateBadge()
com.airbnb.lottie.animation.keyframe.ValueCallbackKeyframeAnimation: float getEndProgress()
net.sqlcipher.CustomCursorWindowAllocation: CustomCursorWindowAllocation(long,long,long)
com.airbnb.lottie.utils.LottieValueAnimator: void verifyFrame()
net.sqlcipher.database.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)
net.sqlcipher.database.SQLiteDatabase: void setPageSize(long)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
net.sqlcipher.AbstractCursor: java.lang.String getColumnName(int)
com.airbnb.lottie.model.content.PolystarShape$Type: com.airbnb.lottie.model.content.PolystarShape$Type forValue(int)
com.airbnb.lottie.LottieDrawable: com.airbnb.lottie.LottieComposition getComposition()
androidx.cardview.widget.CardView: int getContentPaddingTop()
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
com.airbnb.lottie.model.layer.SolidLayer: SolidLayer(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.Layer)
com.airbnb.lottie.model.layer.TextLayer: void drawGlyph(android.graphics.Path,android.graphics.Paint,android.graphics.Canvas)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
com.airbnb.lottie.model.animatable.AnimatablePathValue: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation createAnimation()
com.airbnb.lottie.model.KeyPathElement: void addValueCallback(java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)
com.airbnb.lottie.model.content.ShapeTrimPath: com.airbnb.lottie.model.animatable.AnimatableFloatValue getStart()
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level[] values()
com.google.android.material.chip.ChipGroup: void setChipSpacingResource(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setUseCompatPadding(boolean)
net.sqlcipher.AbstractCursor: void unregisterDataSetObserver(android.database.DataSetObserver)
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode valueOf(java.lang.String)
com.airbnb.lottie.LottieDrawable: void updateBounds()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
net.sqlcipher.DatabaseUtils$InsertHelper: void buildSQL()
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openOrCreateDatabase(java.lang.String,char[],net.sqlcipher.database.SQLiteDatabase$CursorFactory)
com.airbnb.lottie.animation.content.RectangleContent: void setContents(java.util.List,java.util.List)
net.sqlcipher.database.SQLiteDatabase: void native_execSQL(java.lang.String)
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieResult fromUrlSync(android.content.Context,java.lang.String,java.lang.String)
com.airbnb.lottie.LottieOnCompositionLoadedListener: void onCompositionLoaded(com.airbnb.lottie.LottieComposition)
net.sqlcipher.database.SQLiteDatabase$LibraryLoader: void loadLibraries(java.lang.String[])
com.airbnb.lottie.model.animatable.AnimatableGradientColorValue: java.lang.String toString()
net.sqlcipher.database.SQLiteOpenHelper: void setWriteAheadLoggingEnabled(boolean)
com.airbnb.lottie.utils.BaseLottieAnimator: void removeAllUpdateListeners()
com.airbnb.lottie.R$integer: R$integer()
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openOrCreateDatabase(java.io.File,java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory,net.sqlcipher.database.SQLiteDatabaseHook)
com.airbnb.lottie.animation.content.BaseStrokeContent$PathGroup: java.util.List access$100(com.airbnb.lottie.animation.content.BaseStrokeContent$PathGroup)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: java.lang.Object remove(java.lang.Object)
com.google.android.material.card.MaterialCardView: void setCheckedIconMargin(int)
net.sqlcipher.database.SQLiteDoneException: SQLiteDoneException(java.lang.String)
com.airbnb.lottie.animation.content.TrimPathContent: TrimPathContent(com.airbnb.lottie.model.layer.BaseLayer,com.airbnb.lottie.model.content.ShapeTrimPath)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.Cursor rawQueryWithFactory(net.sqlcipher.database.SQLiteDatabase$CursorFactory,java.lang.String,java.lang.String[],java.lang.String)
com.google.android.material.chip.Chip: void setLines(int)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values()
com.airbnb.lottie.utils.LottieValueAnimator: java.lang.Object getAnimatedValue()
com.airbnb.lottie.LottieCompositionFactory$7: java.lang.Object call()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.ImageAssetDelegate: android.graphics.Bitmap fetchBitmap(com.airbnb.lottie.LottieImageAsset)
net.sqlcipher.database.SQLiteDatabase: int releaseMemory()
net.sqlcipher.database.SQLiteDatabase$4: SQLiteDatabase$4(net.sqlcipher.database.SQLiteDatabase,android.database.sqlite.SQLiteTransactionListener)
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
net.sqlcipher.database.SQLiteDatabase: void beginTransactionWithListener(net.sqlcipher.database.SQLiteTransactionListener)
com.airbnb.lottie.LottieImageAsset: void setBitmap(android.graphics.Bitmap)
com.airbnb.lottie.R$bool: R$bool()
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: void setValueCallback(com.airbnb.lottie.value.LottieValueCallback)
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
leakcanary.KeyedWeakReference: java.lang.String getKey()
net.sqlcipher.database.SupportHelper$1: void onConfigure(net.sqlcipher.database.SQLiteDatabase)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openDatabase(java.lang.String,byte[],net.sqlcipher.database.SQLiteDatabase$CursorFactory,int,net.sqlcipher.database.SQLiteDatabaseHook,net.sqlcipher.DatabaseErrorHandler)
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
com.airbnb.lottie.animation.content.FillContent: FillContent(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer,com.airbnb.lottie.model.content.ShapeFill)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
com.airbnb.lottie.animation.keyframe.PointKeyframeAnimation: android.graphics.PointF getValue(com.airbnb.lottie.value.Keyframe,float)
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
com.google.android.material.bottomnavigation.BottomNavigationItemView: int getItemVisiblePosition()
com.airbnb.lottie.PerformanceTracker$1: int compare(androidx.core.util.Pair,androidx.core.util.Pair)
com.airbnb.lottie.model.animatable.AnimatableTransform: AnimatableTransform()
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
com.airbnb.lottie.model.animatable.AnimatablePointValue: boolean isStatic()
com.google.android.material.chip.Chip: void setSingleLine(boolean)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
com.airbnb.lottie.model.layer.TextLayer: void drawTextGlyphs(com.airbnb.lottie.model.DocumentData,android.graphics.Matrix,com.airbnb.lottie.model.Font,android.graphics.Canvas)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
com.airbnb.lottie.parser.ShapeGroupParser: ShapeGroupParser()
com.airbnb.lottie.model.KeyPath: KeyPath(com.airbnb.lottie.model.KeyPath)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: java.lang.Object get(java.lang.Object)
com.airbnb.lottie.LottieAnimationView: void onDetachedFromWindow()
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
com.airbnb.lottie.model.animatable.BaseAnimatableValue: java.util.List getKeyframes()
com.airbnb.lottie.LottieAnimationView: void enableOrDisableHardwareLayer()
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealScrimColor(int)
com.airbnb.lottie.utils.Utils: boolean isNetworkException(java.lang.Throwable)
com.airbnb.lottie.LottieCompositionFactory$9: LottieCompositionFactory$9(com.airbnb.lottie.LottieComposition)
leakcanary.internal.DisplayLeakConnectorView: DisplayLeakConnectorView(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.animation.keyframe.SplitDimensionPathKeyframeAnimation: java.lang.Object getValue()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.airbnb.lottie.parser.ShapeDataParser: ShapeDataParser()
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openDatabase(java.lang.String,char[],net.sqlcipher.database.SQLiteDatabase$CursorFactory,int)
com.airbnb.lottie.animation.content.RepeaterContent: android.graphics.Path getPath()
net.sqlcipher.MatrixCursor: int getType(int)
com.google.android.material.card.MaterialCardView: void setChecked(boolean)
net.sqlcipher.CursorWindow: boolean isInteger_native(int,int)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapper: boolean isCachedValueEnabled(float)
com.airbnb.lottie.model.KeyPath: boolean endsWithGlobstar()
net.sqlcipher.database.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$EmptyKeyframeWrapper: float getEndProgress()
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
com.airbnb.lottie.model.content.GradientFill: com.airbnb.lottie.model.content.GradientType getGradientType()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.airbnb.lottie.LottieDrawable: void removeAnimatorListener(android.animation.Animator$AnimatorListener)
net.sqlcipher.CustomCursorWindowAllocation: long getMaxAllocationSize()
net.sqlcipher.CursorWindow: int getRequiredPosition()
com.airbnb.lottie.utils.LottieValueAnimator: void setMinFrame(int)
com.airbnb.lottie.LottieDrawable: void cancelAnimation()
com.airbnb.lottie.parser.AnimatablePathValueParser: com.airbnb.lottie.model.animatable.AnimatableValue parseSplitPath(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
com.airbnb.lottie.model.layer.Layer: java.lang.String getRefId()
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
com.dimas.made1.MyApplication: MyApplication()
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
com.airbnb.lottie.LottieResult: int hashCode()
com.airbnb.lottie.parser.RepeaterParser: <clinit>()
net.sqlcipher.database.SQLiteQueryBuilder: java.lang.String buildQueryString(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.airbnb.lottie.parser.JsonUtils: int jsonToColor(com.airbnb.lottie.parser.moshi.JsonReader)
com.airbnb.lottie.animation.content.BaseStrokeContent: void setContents(java.util.List,java.util.List)
net.sqlcipher.database.SQLiteDatabase$5: SQLiteDatabase$5(net.sqlcipher.database.SQLiteDatabase,android.database.sqlite.SQLiteTransactionListener)
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource valueOf(java.lang.String)
net.sqlcipher.database.SQLiteDebug: int getNumActiveCursorsFinalized()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocusedResource(int)
leakcanary.internal.InternalLeakCanary: void access$setHeapDumpTrigger$p(leakcanary.internal.InternalLeakCanary,leakcanary.internal.HeapDumpTrigger)
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
net.sqlcipher.database.SQLiteDatabase: boolean yieldIfContendedSafely()
com.airbnb.lottie.animation.content.PolystarContent: void resolveKeyPath(com.airbnb.lottie.model.KeyPath,int,java.util.List,com.airbnb.lottie.model.KeyPath)
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
net.sqlcipher.DatabaseUtils: void dumpCursor(net.sqlcipher.Cursor)
com.google.android.material.card.MaterialCardView: void setCheckedIconMarginResource(int)
net.sqlcipher.AbstractCursor: int getColumnIndex(java.lang.String)
com.airbnb.lottie.LottieAnimationView: void setImageBitmap(android.graphics.Bitmap)
androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(int)
com.airbnb.lottie.utils.Utils: void applyTrimPathIfNeeded(android.graphics.Path,com.airbnb.lottie.animation.content.TrimPathContent)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
net.sqlcipher.AbstractCursor: boolean moveToPosition(int)
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
com.airbnb.lottie.model.layer.BaseLayer$1: BaseLayer$1(com.airbnb.lottie.model.layer.BaseLayer)
com.google.android.material.card.MaterialCardView: void setCheckable(boolean)
net.sqlcipher.AbstractCursor: boolean isClosed()
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
net.sqlcipher.database.SQLiteDebug: SQLiteDebug()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: java.lang.Object getValue(com.airbnb.lottie.value.Keyframe,float)
com.airbnb.lottie.LottieCompositionFactory: boolean isNightMode(android.content.Context)
com.airbnb.lottie.manager.ImageAssetManager: android.graphics.Bitmap putBitmap(java.lang.String,android.graphics.Bitmap)
com.airbnb.lottie.model.content.ShapeStroke: com.airbnb.lottie.model.animatable.AnimatableFloatValue getWidth()
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.model.layer.Layer: boolean isHidden()
net.sqlcipher.database.SQLiteDatabase$3: void run()
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
com.google.android.material.timepicker.ClockHandView: ClockHandView(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.LottieComposition: com.airbnb.lottie.PerformanceTracker getPerformanceTracker()
com.airbnb.lottie.model.content.PolystarShape$Type: com.airbnb.lottie.model.content.PolystarShape$Type[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
net.sqlcipher.BulkCursorToCursorAdaptor: void copyStringToBuffer(int,android.database.CharArrayBuffer)
com.airbnb.lottie.utils.BaseLottieAnimator: void notifyUpdate()
net.sqlcipher.database.SQLiteDirectCursorDriver: void cursorDeactivated()
net.sqlcipher.database.SQLiteCursor: void setFillWindowForwardOnly(boolean)
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
com.airbnb.lottie.model.content.MergePaths: MergePaths(java.lang.String,com.airbnb.lottie.model.content.MergePaths$MergePathsMode,boolean)
net.sqlcipher.MatrixCursor: void ensureCapacity(int)
com.airbnb.lottie.parser.ColorParser: java.lang.Object parse(com.airbnb.lottie.parser.moshi.JsonReader,float)
net.sqlcipher.database.SQLiteQuery: SQLiteQuery(net.sqlcipher.database.SQLiteDatabase,java.lang.String,int,java.lang.String[])
androidx.lifecycle.SavedStateHandleController$OnRecreation: SavedStateHandleController$OnRecreation()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.airbnb.lottie.LottieTask$LottieFutureTask: LottieTask$LottieFutureTask(com.airbnb.lottie.LottieTask,java.util.concurrent.Callable)
com.airbnb.lottie.animation.content.GradientStrokeContent: void addValueCallback(java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)
com.dimas.made1.explore.content.MovieTvFragment: MovieTvFragment()
androidx.appcompat.widget.Toolbar: void setTitle(int)
com.airbnb.lottie.animation.content.GradientFillContent: void getBounds(android.graphics.RectF,android.graphics.Matrix,boolean)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.chip.ChipGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.airbnb.lottie.model.content.ShapeData: void interpolateBetween(com.airbnb.lottie.model.content.ShapeData,com.airbnb.lottie.model.content.ShapeData,float)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.model.layer.TextLayer$2: TextLayer$2(com.airbnb.lottie.model.layer.TextLayer,int)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: float getInterpolatedCurrentKeyframeProgress()
com.airbnb.lottie.LottieAnimationView: float getProgress()
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: void setProgress(float)
androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)
net.sqlcipher.MatrixCursor: float getFloat(int)
com.airbnb.lottie.network.NetworkCache: java.io.File writeTempCacheFile(java.lang.String,java.io.InputStream,com.airbnb.lottie.network.FileExtension)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
net.sqlcipher.AbstractCursor: int getInt(int)
com.airbnb.lottie.utils.MiscUtils: float clamp(float,float,float)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$SingleKeyframeWrapper: BaseKeyframeAnimation$SingleKeyframeWrapper(java.util.List)
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieResult fromJsonReaderSync(com.airbnb.lottie.parser.moshi.JsonReader,java.lang.String)
com.airbnb.lottie.LottieTask: void access$200(com.airbnb.lottie.LottieTask,java.lang.Throwable)
com.airbnb.lottie.value.LottieInterpolatedValue: LottieInterpolatedValue(java.lang.Object,java.lang.Object,android.view.animation.Interpolator)
com.google.android.material.tabs.TabLayout: void setUnboundedRipple(boolean)
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
com.airbnb.lottie.utils.MiscUtils: <clinit>()
com.airbnb.lottie.LottieAnimationView: void setMaxFrame(java.lang.String)
com.airbnb.lottie.LottieTask: void access$300(com.airbnb.lottie.LottieTask,com.airbnb.lottie.LottieResult)
com.google.android.material.snackbar.SnackbarContentLayout: void setMaxInlineActionWidth(int)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
com.google.gson.internal.bind.TypeAdapters$23: TypeAdapters$23()
net.sqlcipher.database.SQLiteDatabase: void beginTransactionWithListenerInternal(net.sqlcipher.database.SQLiteTransactionListener,net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
net.sqlcipher.DefaultCursorWindowAllocation: long getGrowthPaddingSize()
com.airbnb.lottie.model.content.PolystarShape: com.airbnb.lottie.model.animatable.AnimatableFloatValue getOuterRadius()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$SingleKeyframeWrapper: boolean isValueChanged(float)
net.sqlcipher.database.SQLiteQueryStats: long getTotalQueryResultSize()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
com.airbnb.lottie.model.animatable.AnimatableFloatValue: boolean isStatic()
net.sqlcipher.database.SQLiteQuery: int fillWindow(net.sqlcipher.CursorWindow,int,int)
com.google.android.material.bottomnavigation.BottomNavigationView: void setElevation(float)
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: void skipName()
net.sqlcipher.DatabaseUtils$InsertHelper: void bind(int,float)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
net.sqlcipher.DefaultCursorWindowAllocation: long getInitialAllocationSize()
com.google.android.material.chip.Chip: float getChipCornerRadius()
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$EmptyKeyframeWrapper: boolean isEmpty()
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.lifecycle.ViewModelStore: java.util.Set keys()
com.google.android.material.tabs.TabLayout: void setTabMode(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
net.sqlcipher.CursorWindow: boolean isString(int,int)
androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)
net.sqlcipher.CursorWindow: void writeToParcel(android.os.Parcel,int)
com.google.android.material.chip.Chip: float getChipStartPadding()
androidx.constraintlayout.widget.VirtualLayout: VirtualLayout(android.content.Context,android.util.AttributeSet)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$EntrySet: int size()
com.airbnb.lottie.animation.content.BaseStrokeContent: BaseStrokeContent(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer,android.graphics.Paint$Cap,android.graphics.Paint$Join,float,com.airbnb.lottie.model.animatable.AnimatableIntegerValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,java.util.List,com.airbnb.lottie.model.animatable.AnimatableFloatValue)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapper: boolean isValueChanged(float)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpecResource(int)
com.airbnb.lottie.TextDelegate: java.lang.String getText(java.lang.String)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType[] values()
leakcanary.internal.AndroidXFragmentDestroyWatcher: leakcanary.ReachabilityWatcher access$getReachabilityWatcher$p(leakcanary.internal.AndroidXFragmentDestroyWatcher)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextAppearance(int)
com.airbnb.lottie.parser.ShapeDataParser: com.airbnb.lottie.model.content.ShapeData parse(com.airbnb.lottie.parser.moshi.JsonReader,float)
com.airbnb.lottie.LottieAnimationView: boolean isAnimating()
com.airbnb.lottie.model.content.Mask: com.airbnb.lottie.model.content.Mask$MaskMode getMaskMode()
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$AvlIterator: LinkedHashTreeMap$AvlIterator()
com.google.gson.internal.bind.TypeAdapters$7: TypeAdapters$7()
net.sqlcipher.BulkCursorProxy: int requery(net.sqlcipher.IContentObserver,net.sqlcipher.CursorWindow)
com.airbnb.lottie.parser.AnimatableTransformParser: com.airbnb.lottie.model.animatable.AnimatableTransform parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
com.airbnb.lottie.model.content.MergePaths$MergePathsMode: MergePaths$MergePathsMode(java.lang.String,int)
com.google.gson.internal.bind.TimeTypeAdapter$1: TimeTypeAdapter$1()
com.airbnb.lottie.parser.moshi.JsonDataException: JsonDataException(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
com.airbnb.lottie.model.content.ShapeGroup: ShapeGroup(java.lang.String,java.util.List,boolean)
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior()
com.airbnb.lottie.parser.MergePathsParser: com.airbnb.lottie.model.content.MergePaths parse(com.airbnb.lottie.parser.moshi.JsonReader)
net.sqlcipher.AbstractCursor: java.lang.String getString(int)
com.airbnb.lottie.parser.LottieCompositionMoshiParser: void parseLayers(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition,java.util.List,androidx.collection.LongSparseArray)
com.google.android.material.bottomnavigation.BottomNavigationView: android.content.res.ColorStateList getItemRippleColor()
com.airbnb.lottie.parser.FloatParser: java.lang.Object parse(com.airbnb.lottie.parser.moshi.JsonReader,float)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
net.sqlcipher.database.SupportFactory: SupportFactory(byte[],net.sqlcipher.database.SQLiteDatabaseHook)
net.sqlcipher.AbstractCursor: int getColumnCount()
net.sqlcipher.database.SQLiteCompiledSql: boolean acquire()
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: java.lang.String nextQuotedValue(okio.ByteString)
net.sqlcipher.database.SQLiteDatabase: void markTableSyncable(java.lang.String,java.lang.String,java.lang.String)
com.airbnb.lottie.value.ScaleXY: float getScaleX()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.material.bottomnavigation.BottomNavigationView: void setLabelVisibilityMode(int)
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
com.airbnb.lottie.network.NetworkFetcher: com.airbnb.lottie.LottieResult fetchFromNetworkInternal()
net.sqlcipher.MatrixCursor: java.lang.String getString(int)
com.airbnb.lottie.parser.PolystarShapeParser: com.airbnb.lottie.model.content.PolystarShape parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
leakcanary.internal.AndroidXFragmentDestroyWatcher: AndroidXFragmentDestroyWatcher(leakcanary.ReachabilityWatcher)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
net.sqlcipher.CursorWindow: boolean setNumColumns_native(int)
androidx.viewpager.widget.ViewPager: int getCurrentItem()
com.airbnb.lottie.model.layer.BaseLayer: java.lang.String getName()
com.airbnb.lottie.parser.GradientFillParser: GradientFillParser()
net.sqlcipher.database.SQLiteDatabase$CursorFactory: net.sqlcipher.Cursor newCursor(net.sqlcipher.database.SQLiteDatabase,net.sqlcipher.database.SQLiteCursorDriver,java.lang.String,net.sqlcipher.database.SQLiteQuery)
com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.content.GradientType getGradientType()
net.sqlcipher.AbstractCursor: boolean update(int,java.lang.Object)
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
com.airbnb.lottie.animation.content.TrimPathContent: void setContents(java.util.List,java.util.List)
leakcanary.internal.InternalLeakCanary: void setResumedActivity(android.app.Activity)
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalBias(float)
com.airbnb.lottie.model.content.PolystarShape: com.airbnb.lottie.animation.content.Content toContent(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer)
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
net.sqlcipher.database.SupportFactory: SupportFactory(byte[],net.sqlcipher.database.SQLiteDatabaseHook,boolean)
com.airbnb.lottie.model.Font: float getAscent()
com.airbnb.lottie.parser.FontParser: FontParser()
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
net.sqlcipher.AbstractCursor: boolean updateInt(int,int)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getSuffixTextColor()
com.airbnb.lottie.utils.MiscUtils: void resolveKeyPath(com.airbnb.lottie.model.KeyPath,int,java.util.List,com.airbnb.lottie.model.KeyPath,com.airbnb.lottie.animation.content.KeyPathElementContent)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
com.airbnb.lottie.utils.LottieValueAnimator: boolean isRunning()
org.koin.core.definition.Kind: org.koin.core.definition.Kind valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.airbnb.lottie.value.LottieRelativePointValueCallback: java.lang.Object getValue(com.airbnb.lottie.value.LottieFrameInfo)
com.airbnb.lottie.animation.keyframe.SplitDimensionPathKeyframeAnimation: void setProgress(float)
com.google.gson.internal.bind.TypeAdapters$2: TypeAdapters$2()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtended(boolean)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.work.impl.WorkDatabase_Impl: WorkDatabase_Impl()
com.airbnb.lottie.LottieImageAsset: LottieImageAsset(int,int,java.lang.String,java.lang.String,java.lang.String)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
com.google.android.material.appbar.AppBarLayout: int getTopInset()
com.airbnb.lottie.LottieAnimationView$SavedState$1: com.airbnb.lottie.LottieAnimationView$SavedState[] newArray(int)
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setChecked(boolean)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.google.android.material.button.MaterialButton: int getTextHeight()
com.airbnb.lottie.LottieDrawable: void setRepeatMode(int)
com.airbnb.lottie.animation.content.RepeaterContent: void resolveKeyPath(com.airbnb.lottie.model.KeyPath,int,java.util.List,com.airbnb.lottie.model.KeyPath)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
androidx.lifecycle.ProcessLifecycleOwner$3: ProcessLifecycleOwner$3(androidx.lifecycle.ProcessLifecycleOwner)
androidx.constraintlayout.widget.ConstraintLayout: void setId(int)
net.sqlcipher.CursorWindow: net.sqlcipher.CursorWindow newFromParcel(android.os.Parcel)
net.sqlcipher.database.SQLiteProgram: void bindBlob(int,byte[])
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
net.sqlcipher.CursorWindow: int getType_native(int,int)
net.sqlcipher.IContentObserver$Stub: net.sqlcipher.IContentObserver asInterface(android.os.IBinder)
com.airbnb.lottie.animation.keyframe.PathKeyframeAnimation: PathKeyframeAnimation(java.util.List)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
com.google.android.material.button.MaterialButton: void setIconSize(int)
com.airbnb.lottie.model.layer.ImageLayer: void drawLayer(android.graphics.Canvas,android.graphics.Matrix,int)
com.airbnb.lottie.utils.LottieValueAnimator: float getMaxFrame()
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int findName(java.lang.String,com.airbnb.lottie.parser.moshi.JsonReader$Options)
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieResult fromAssetSync(android.content.Context,java.lang.String)
leakcanary.internal.HeapAnalyzerService: HeapAnalyzerService()
net.sqlcipher.AbstractCursor: void deactivateInternal()
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
com.airbnb.lottie.model.layer.BaseLayer: void setVisible(boolean)
com.airbnb.lottie.animation.keyframe.IntegerKeyframeAnimation: IntegerKeyframeAnimation(java.util.List)
shark.LeakTraceReference$ReferenceType: shark.LeakTraceReference$ReferenceType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.constraintlayout.widget.ConstraintHelper: void setReferencedIds(int[])
com.airbnb.lottie.utils.Utils: android.graphics.Bitmap renderPath(android.graphics.Path)
com.airbnb.lottie.parser.CircleShapeParser: <clinit>()
com.airbnb.lottie.utils.LottieValueAnimator: void clearComposition()
com.google.android.material.textview.MaterialTextView: MaterialTextView(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.value.Keyframe: float getStartValueFloat()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
net.sqlcipher.database.SQLiteDatabase: boolean needUpgrade(int)
com.airbnb.lottie.LottieAnimationView: float getMaxFrame()
com.airbnb.lottie.value.LottieFrameInfo: java.lang.Object getStartValue()
net.sqlcipher.database.SQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)
com.airbnb.lottie.utils.Logger: void warning(java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node: java.lang.Object setValue(java.lang.Object)
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: void endArray()
com.airbnb.lottie.animation.content.GradientStrokeContent: android.graphics.RadialGradient getRadialGradient()
com.airbnb.lottie.animation.LPaint: void setTextLocales(android.os.LocaleList)
net.sqlcipher.CursorWindowAllocation: long getGrowthPaddingSize()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior()
com.airbnb.lottie.model.content.MergePaths: com.airbnb.lottie.model.content.MergePaths$MergePathsMode getMode()
com.airbnb.lottie.LottieDrawable: com.airbnb.lottie.manager.ImageAssetManager getImageAssetManager()
com.airbnb.lottie.TextDelegate: void invalidate()
com.airbnb.lottie.model.content.ShapeFill: com.airbnb.lottie.animation.content.Content toContent(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer)
net.sqlcipher.AbstractCursor: void fillWindow(int,android.database.CursorWindow)
com.airbnb.lottie.LottieAnimationView: void addAnimatorListener(android.animation.Animator$AnimatorListener)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getRippleColor()
com.airbnb.lottie.model.content.GradientFill: android.graphics.Path$FillType getFillType()
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
androidx.cardview.widget.CardView: float getMaxCardElevation()
com.airbnb.lottie.animation.content.ContentGroup: android.graphics.Matrix getTransformationMatrix()
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.google.android.material.button.MaterialButtonToggleGroup: void setCheckedId(int)
com.google.android.material.button.MaterialButton: void setInsetTop(int)
net.sqlcipher.database.SQLiteCursor: boolean access$002(net.sqlcipher.database.SQLiteCursor,boolean)
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder: android.os.ParcelFileDescriptor rewind()
com.airbnb.lottie.model.content.ShapeTrimPath: ShapeTrimPath(java.lang.String,com.airbnb.lottie.model.content.ShapeTrimPath$Type,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
com.google.gson.internal.bind.TypeAdapters$22: TypeAdapters$22()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
net.sqlcipher.CursorWindow$1: java.lang.Object[] newArray(int)
com.airbnb.lottie.value.LottieInterpolatedFloatValue: java.lang.Object interpolateValue(java.lang.Object,java.lang.Object,float)
net.sqlcipher.CursorWindow: boolean putString(java.lang.String,int,int)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$SingleKeyframeWrapper: float getEndProgress()
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openOrCreateDatabase(java.lang.String,java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory,net.sqlcipher.database.SQLiteDatabaseHook,net.sqlcipher.DatabaseErrorHandler)
net.sqlcipher.CursorWindow: byte[] getBlob_native(int,int)
net.sqlcipher.CursorWindow: boolean isNull(int,int)
com.airbnb.lottie.model.layer.Layer: int getSolidColor()
net.sqlcipher.database.SQLiteDatabase$4: void onCommit()
com.airbnb.lottie.model.MutablePair: MutablePair()
com.airbnb.lottie.animation.keyframe.MaskKeyframeAnimation: java.util.List getMaskAnimations()
net.sqlcipher.database.SQLiteCompiledSql: SQLiteCompiledSql(net.sqlcipher.database.SQLiteDatabase,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
com.airbnb.lottie.animation.content.Content: java.lang.String getName()
com.airbnb.lottie.parser.GradientColorParser: void addOpacityStopsToGradientIfNeeded(com.airbnb.lottie.model.content.GradientColor,java.util.List)
androidx.cardview.widget.CardView: float getRadius()
com.airbnb.lottie.model.layer.TextLayer: void drawCharacterFromFont(java.lang.String,com.airbnb.lottie.model.DocumentData,android.graphics.Canvas)
com.airbnb.lottie.utils.Utils: android.graphics.Bitmap resizeBitmapIfNeeded(android.graphics.Bitmap,int,int)
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status[] values()
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String)
com.airbnb.lottie.LottieCompositionFactory$10: void onResult(java.lang.Object)
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
com.google.android.material.tabs.TabLayout: void setOnTabSelectedListener(com.google.android.material.tabs.TabLayout$OnTabSelectedListener)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node removeInternalByKey(java.lang.Object)
com.google.android.material.internal.FlowLayout: int getItemSpacing()
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
androidx.constraintlayout.helper.widget.Flow: void setPaddingBottom(int)
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieTask fromUrl(android.content.Context,java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
net.sqlcipher.AbstractCursor: void onChange(boolean)
com.airbnb.lottie.network.NetworkCache: void clear()
com.airbnb.lottie.LottieComposition$Factory: com.airbnb.lottie.LottieComposition fromInputStreamSync(java.io.InputStream)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
com.google.android.material.appbar.AppBarLayout: void setElevation(float)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: com.airbnb.lottie.value.Keyframe getCurrentKeyframe()
com.airbnb.lottie.animation.content.PolystarContent$1: <clinit>()
com.airbnb.lottie.parser.moshi.JsonReader: boolean hasNext()
leakcanary.internal.InternalLeakCanary: void getVersion$annotations()
com.airbnb.lottie.LottieAnimationView: void setAnimation(int)
leakcanary.internal.DisplayLeakConnectorView: void setType(leakcanary.internal.DisplayLeakConnectorView$Type)
net.sqlcipher.BulkCursorToCursorAdaptor: void deactivate()
com.airbnb.lottie.LottieComposition: java.util.Map getImages()
com.airbnb.lottie.LottieDrawable: void start()
com.google.android.material.bottomnavigation.BottomNavigationMenuView: int getSelectedItemId()
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: int secondaryHash(int)
net.sqlcipher.CursorWrapper: android.database.Cursor getWrappedCursor()
com.airbnb.lottie.LottieDrawable$8: LottieDrawable$8(com.airbnb.lottie.LottieDrawable,java.lang.String)
net.sqlcipher.database.SQLiteProgram: void native_bind_double(int,double)
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
com.airbnb.lottie.parser.moshi.JsonReader: void endObject()
net.sqlcipher.CursorWindow: void native_clear()
net.sqlcipher.CursorWindow: char[] copyStringToBuffer_native(int,int,int,android.database.CharArrayBuffer)
com.airbnb.lottie.RenderMode: RenderMode(java.lang.String,int)
com.airbnb.lottie.model.content.ShapeTrimPath: com.airbnb.lottie.animation.content.Content toContent(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer)
net.sqlcipher.CursorWindow: void close_native()
com.airbnb.lottie.value.LottieInterpolatedValue: java.lang.Object interpolateValue(java.lang.Object,java.lang.Object,float)
net.sqlcipher.AbstractWindowedCursor: long getLong(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundColor(int)
com.airbnb.lottie.parser.LottieCompositionMoshiParser: <clinit>()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
com.google.android.material.card.MaterialCardView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
net.sqlcipher.DatabaseUtils: void cursorDoubleToContentValues(net.sqlcipher.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)
androidx.viewpager2.widget.ViewPager2: int getCurrentItem()
net.sqlcipher.CustomCursorWindowAllocation: long getGrowthPaddingSize()
com.airbnb.lottie.parser.GradientStrokeParser: com.airbnb.lottie.model.content.GradientStroke parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.chip.Chip: void setTextEndPadding(float)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)
com.airbnb.lottie.R: R()
com.airbnb.lottie.model.layer.TextLayer: void getBounds(android.graphics.RectF,android.graphics.Matrix,boolean)
com.google.android.material.appbar.AppBarLayout: int getLiftOnScrollTargetViewId()
com.airbnb.lottie.LottieDrawable: float getMinFrame()
com.airbnb.lottie.animation.keyframe.PathKeyframe: void createPath()
com.airbnb.lottie.utils.BaseLottieAnimator: BaseLottieAnimator()
net.sqlcipher.database.SQLiteDebug$DbStats: SQLiteDebug$DbStats(java.lang.String,long,long,int)
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
shark.AndroidResourceIdNames: <clinit>()
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
net.sqlcipher.database.SQLiteAbortException: SQLiteAbortException(java.lang.String)
com.airbnb.lottie.LottieDrawable: float getMaxFrame()
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
com.airbnb.lottie.model.animatable.AnimatableColorValue: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation createAnimation()
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
net.sqlcipher.AbstractCursor: void close()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSize()
com.airbnb.lottie.model.content.MergePaths$MergePathsMode: com.airbnb.lottie.model.content.MergePaths$MergePathsMode valueOf(java.lang.String)
com.airbnb.lottie.animation.content.MergePathsContent: MergePathsContent(com.airbnb.lottie.model.content.MergePaths)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.android.HandlerContext createDispatcher(java.util.List)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
net.sqlcipher.AbstractCursor: void setExtras(android.os.Bundle)
com.airbnb.lottie.parser.IntegerParser: <clinit>()
com.bumptech.glide.GeneratedAppGlideModule: GeneratedAppGlideModule()
com.airbnb.lottie.LottieDrawable: void setProgress(float)
com.airbnb.lottie.LottieDrawable: void setFontAssetDelegate(com.airbnb.lottie.FontAssetDelegate)
com.airbnb.lottie.LottieTask: com.airbnb.lottie.LottieResult access$000(com.airbnb.lottie.LottieTask)
com.airbnb.lottie.LottieComposition: java.util.List getLayers()
net.sqlcipher.database.SQLiteQueryBuilder: java.lang.String[] computeProjection(java.lang.String[])
net.sqlcipher.database.SQLiteDirectCursorDriver: void setBindArguments(java.lang.String[])
com.airbnb.lottie.LottieDrawable: boolean isLooping()
com.airbnb.lottie.utils.Utils: float getAnimationScale(android.content.Context)
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
com.airbnb.lottie.parser.KeyframeParser: com.airbnb.lottie.value.Keyframe parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition,float,com.airbnb.lottie.parser.ValueParser,boolean)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
com.airbnb.lottie.model.layer.BaseLayer: void applyAddMask(android.graphics.Canvas,android.graphics.Matrix,com.airbnb.lottie.model.content.Mask,com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation,com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation)
com.airbnb.lottie.LottieCompositionFactory$2: com.airbnb.lottie.LottieResult call()
com.airbnb.lottie.animation.content.GradientFillContent: void setContents(java.util.List,java.util.List)
com.airbnb.lottie.LottieComposition: androidx.collection.SparseArrayCompat getCharacters()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
net.sqlcipher.database.SQLiteDatabase: void markTableSyncable(java.lang.String,java.lang.String)
com.airbnb.lottie.LottieDrawable: boolean isMergePathsEnabledForKitKatAndAbove()
com.airbnb.lottie.LottieAnimationView$5: <clinit>()
com.airbnb.lottie.model.layer.CompositionLayer: boolean hasMasks()
com.airbnb.lottie.animation.content.StrokeContent: void addValueCallback(java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()
net.sqlcipher.database.SQLiteDatabase: int status(int,boolean)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
com.airbnb.lottie.model.content.ShapeData: java.lang.String toString()
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
net.sqlcipher.IBulkCursor: boolean deleteRow(int)
com.airbnb.lottie.LottieDrawable$13: LottieDrawable$13(com.airbnb.lottie.LottieDrawable,float,float)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
com.airbnb.lottie.LottieLogger: void warning(java.lang.String,java.lang.Throwable)
com.airbnb.lottie.model.layer.CompositionLayer$1: <clinit>()
com.google.android.material.internal.FlowLayout: void setLineSpacing(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SQLiteDatabase: java.util.ArrayList getActiveDatabases()
com.airbnb.lottie.model.animatable.AnimatableShapeValue: java.util.List getKeyframes()
net.sqlcipher.CursorWindow$1: net.sqlcipher.CursorWindow[] newArray(int)
com.airbnb.lottie.LottieDrawable: void playAnimation()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
com.google.android.material.floatingactionbutton.FloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
net.sqlcipher.database.SQLiteDoneException: SQLiteDoneException()
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.R$dimen: R$dimen()
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.airbnb.lottie.model.layer.ShapeLayer: void getBounds(android.graphics.RectF,android.graphics.Matrix,boolean)
com.airbnb.lottie.model.layer.CompositionLayer: void addValueCallback(java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$KeySet: java.util.Iterator iterator()
com.airbnb.lottie.LottieAnimationView: boolean hasMasks()
net.sqlcipher.AbstractCursor: void abortUpdates()
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
com.airbnb.lottie.LottieDrawable: com.airbnb.lottie.TextDelegate getTextDelegate()
com.airbnb.lottie.parser.AnimatablePathValueParser: <clinit>()
net.sqlcipher.database.SQLiteDatabase: void onCorruption()
com.airbnb.lottie.LottieTask: void notifyListeners()
net.sqlcipher.database.SQLiteCursor: int cursorPickFillWindowStartPosition(int,int)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList getMaterialThemeColorsTintList()
net.sqlcipher.database.SQLiteDatabase: void dbopen(java.lang.String,int)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPlaceholderTextColor()
com.airbnb.lottie.animation.content.FillContent: void setContents(java.util.List,java.util.List)
com.google.android.material.bottomappbar.BottomAppBar: int getRightInset()
net.sqlcipher.database.SQLiteFullException: SQLiteFullException()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZ(float)
net.sqlcipher.CursorWindow: <clinit>()
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
shark.ObjectInspectors: shark.ObjectInspectors valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
net.sqlcipher.database.SQLiteCursor: java.util.concurrent.locks.ReentrantLock access$200(net.sqlcipher.database.SQLiteCursor)
net.sqlcipher.database.SQLiteDatabase: void loadLibs(android.content.Context,net.sqlcipher.database.SQLiteDatabase$LibraryLoader)
com.airbnb.lottie.model.content.GradientStroke: float getMiterLimit()
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
com.airbnb.lottie.LottieAnimationView: void setRepeatCount(int)
com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)
com.airbnb.lottie.LottieDrawable: void setSafeMode(boolean)
androidx.work.impl.WorkDatabase: WorkDatabase()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
net.sqlcipher.SQLException: SQLException()
net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType: net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType[] values()
com.airbnb.lottie.LottieCompositionFactory: void clearCache(android.content.Context)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
com.airbnb.lottie.LottieDrawable: void setMinAndMaxFrame(int,int)
androidx.constraintlayout.widget.Placeholder: int getEmptyVisibility()
net.sqlcipher.DatabaseUtils: void cursorFillWindow(net.sqlcipher.Cursor,int,android.database.CursorWindow)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
com.airbnb.lottie.parser.GradientFillParser: com.airbnb.lottie.model.content.GradientFill parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
com.google.android.material.tabs.TabLayout: void setSelectedTabIndicatorGravity(int)
com.airbnb.lottie.LottieAnimationView: java.util.List resolveKeyPath(com.airbnb.lottie.model.KeyPath)
net.sqlcipher.AbstractWindowedCursor: int getInt(int)
com.airbnb.lottie.utils.MiscUtils: double lerp(double,double,double)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
com.airbnb.lottie.LottieCompositionFactory$6: LottieCompositionFactory$6(java.lang.String,java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
com.google.android.material.card.MaterialCardView: void setBackground(android.graphics.drawable.Drawable)
com.airbnb.lottie.model.layer.TextLayer: void drawTextWithFont(com.airbnb.lottie.model.DocumentData,com.airbnb.lottie.model.Font,android.graphics.Matrix,android.graphics.Canvas)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)
leakcanary.internal.DisplayLeakConnectorView$Type: leakcanary.internal.DisplayLeakConnectorView$Type valueOf(java.lang.String)
shark.HprofVersion: shark.HprofVersion[] values()
com.google.android.material.tabs.TabLayout: int getTabScrollRange()
com.google.gson.internal.bind.TimeTypeAdapter: TimeTypeAdapter()
net.sqlcipher.database.SQLiteDatabase: java.lang.String getPath()
com.airbnb.lottie.LottieComposition: android.graphics.Rect getBounds()
com.airbnb.lottie.model.animatable.AnimatableValue: java.util.List getKeyframes()
com.airbnb.lottie.value.LottieInterpolatedIntegerValue: LottieInterpolatedIntegerValue(java.lang.Integer,java.lang.Integer,android.view.animation.Interpolator)
com.airbnb.lottie.model.layer.BaseLayer: void intersectBoundsWithMask(android.graphics.RectF,android.graphics.Matrix)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.EndIconDelegate getEndIconDelegate()
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SQLiteCursor$MainThreadNotificationHandler: SQLiteCursor$MainThreadNotificationHandler(net.sqlcipher.database.SQLiteCursor)
com.airbnb.lottie.model.content.GradientColor: int[] getColors()
net.sqlcipher.database.SQLiteProgram: void native_bind_blob(int,byte[])
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource[] values()
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
leakcanary.internal.InternalLeakCanary: void setEnabledBlocking(java.lang.String,boolean)
com.google.android.material.chip.ChipGroup: void setChipSpacingVerticalResource(int)
com.airbnb.lottie.LottieAnimationView: int getFrame()
com.google.android.material.chip.Chip: void setChipStartPadding(float)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: void removeInternal(com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node,boolean)
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
com.airbnb.lottie.model.animatable.AnimatableTextFrame: com.airbnb.lottie.animation.keyframe.TextKeyframeAnimation createAnimation()
leakcanary.internal.navigation.NavigatingActivity: NavigatingActivity()
com.airbnb.lottie.LottieAnimationView: void setPerformanceTrackingEnabled(boolean)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: java.util.Set entrySet()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
com.google.android.material.chip.ChipGroup: void setShowDividerHorizontal(int)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityStopped(android.app.Activity)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setItemBackgroundRes(int)
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostStarted(android.app.Activity)
com.google.android.material.timepicker.TimePickerView: TimePickerView(android.content.Context,android.util.AttributeSet)
net.sqlcipher.BulkCursorNative: android.os.IBinder asBinder()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.airbnb.lottie.model.content.CircleShape: boolean isHidden()
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.animation.content.BaseStrokeContent: void addValueCallback(java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
androidx.work.NetworkType: androidx.work.NetworkType[] values()
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleRoundedCornerRadius()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
com.airbnb.lottie.utils.LottieValueAnimator: void resumeAnimation()
com.airbnb.lottie.LottieAnimationView: void setImageDrawable(android.graphics.drawable.Drawable)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$AvlBuilder: LinkedHashTreeMap$AvlBuilder()
com.airbnb.lottie.animation.content.ShapeContent: void setContents(java.util.List,java.util.List)
com.airbnb.lottie.LottieDrawable: void setRepeatCount(int)
net.sqlcipher.database.SQLiteTransactionListener: void onCommit()
net.sqlcipher.database.SQLiteCursor: net.sqlcipher.CursorWindow access$100(net.sqlcipher.database.SQLiteCursor)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
com.google.android.material.textfield.TextInputLayout: void setErrorIconVisible(boolean)
com.airbnb.lottie.model.layer.CompositionLayer: void resolveChildKeyPath(com.airbnb.lottie.model.KeyPath,int,java.util.List,com.airbnb.lottie.model.KeyPath)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
net.sqlcipher.CursorWindow: void freeLastRow()
com.airbnb.lottie.animation.LPaint: LPaint(int,android.graphics.PorterDuff$Mode)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
com.airbnb.lottie.value.LottieFrameInfo: float getOverallProgress()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
com.airbnb.lottie.model.layer.Layer: com.airbnb.lottie.model.animatable.AnimatableFloatValue getTimeRemapping()
com.airbnb.lottie.LottieAnimationView: float getMinFrame()
net.sqlcipher.AbstractCursor: boolean commitUpdates()
com.airbnb.lottie.model.CubicCurveData: void setControlPoint1(float,float)
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setBadge(com.google.android.material.badge.BadgeDrawable)
com.airbnb.lottie.model.animatable.AnimatableValue: boolean isStatic()
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
net.sqlcipher.database.SQLiteDatabase: void execSQL(java.lang.String)
net.sqlcipher.database.SQLiteDatabase: void setVersion(int)
com.airbnb.lottie.LottieDrawable: void drawWithOriginalAspectRatio(android.graphics.Canvas)
com.airbnb.lottie.LottieAnimationView: android.os.Parcelable onSaveInstanceState()
net.sqlcipher.database.SQLiteCursor: int access$300(net.sqlcipher.database.SQLiteCursor)
com.google.android.material.tabs.TabLayout: int getTabMinWidth()
com.google.android.material.tabs.TabLayout: void setSelectedTabIndicatorHeight(int)
net.sqlcipher.database.SQLiteDatabase: void openDatabaseInternal(byte[],net.sqlcipher.database.SQLiteDatabaseHook)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackground(android.graphics.drawable.Drawable)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.Cursor rawQuery(java.lang.String,java.lang.String[])
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
net.sqlcipher.DatabaseUtils: java.lang.String dumpCurrentRowToString(net.sqlcipher.Cursor)
com.airbnb.lottie.model.content.GradientType: com.airbnb.lottie.model.content.GradientType[] values()
com.airbnb.lottie.value.LottieFrameInfo: LottieFrameInfo()
androidx.work.impl.diagnostics.DiagnosticsReceiver: DiagnosticsReceiver()
com.google.android.material.internal.VisibilityAwareImageButton: int getUserSetVisibility()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZResource(int)
com.airbnb.lottie.LottieDrawable: int getOpacity()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: void addUpdateListener(com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$AnimationListener)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
net.sqlcipher.IBulkCursor: int requery(net.sqlcipher.IContentObserver,net.sqlcipher.CursorWindow)
net.sqlcipher.BulkCursorToCursorAdaptor: void set(net.sqlcipher.IBulkCursor,int,int)
com.airbnb.lottie.parser.ShapePathParser: com.airbnb.lottie.model.content.ShapePath parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
com.airbnb.lottie.value.Keyframe: float getStartProgress()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)
com.airbnb.lottie.LottieAnimationView: void playAnimation()
net.sqlcipher.DatabaseUtils: int getKeyLen(byte[])
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy valueOf(java.lang.String)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setBadgeDrawables(android.util.SparseArray)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.google.android.material.textfield.TextInputLayout: void setPrefixTextAppearance(int)
com.airbnb.lottie.utils.LogcatLogger: void error(java.lang.String,java.lang.Throwable)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
com.airbnb.lottie.manager.ImageAssetManager: boolean hasSameContext(android.content.Context)
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextColor(android.content.res.ColorStateList)
net.sqlcipher.database.SQLiteDatabase: void changePassword(java.lang.String)
com.airbnb.lottie.model.animatable.AnimatablePointValue: java.lang.String toString()
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
com.airbnb.lottie.animation.content.EllipseContent: void addValueCallback(java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)
com.airbnb.lottie.utils.LottieValueAnimator: void endAnimation()
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
net.sqlcipher.database.SQLiteClosable: SQLiteClosable()
com.airbnb.lottie.LottieDrawable: void pauseAnimation()
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: void rebalance(com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node,boolean)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$SingleKeyframeWrapper: float getStartDelayProgress()
net.sqlcipher.CrossProcessCursorWrapper: CrossProcessCursorWrapper(net.sqlcipher.Cursor)
com.airbnb.lottie.utils.MeanCalculator: void add(float)
com.airbnb.lottie.R$layout: R$layout()
com.airbnb.lottie.parser.moshi.JsonReader$Options: com.airbnb.lottie.parser.moshi.JsonReader$Options of(java.lang.String[])
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
com.airbnb.lottie.LottieDrawable$11: void run(com.airbnb.lottie.LottieComposition)
net.sqlcipher.MatrixCursor: MatrixCursor(java.lang.String[],int)
net.sqlcipher.database.SQLiteDatabase: void openDatabaseInternal(char[],net.sqlcipher.database.SQLiteDatabaseHook)
com.google.android.material.chip.Chip: void setTextAppearance(int)
net.sqlcipher.CrossProcessCursorWrapper: android.database.CursorWindow getWindow()
com.airbnb.lottie.LottieComposition$Factory$ListenerAdapter: void onResult(java.lang.Object)
net.sqlcipher.database.SQLiteDatabase: void rekey(byte[])
net.sqlcipher.database.SQLiteDatabase: int updateWithOnConflict(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[],int)
net.sqlcipher.AbstractCursor: boolean updateFloat(int,float)
com.airbnb.lottie.parser.AnimatableValueParser: AnimatableValueParser()
net.sqlcipher.BulkCursorProxy: boolean updateRows(java.util.Map)
net.sqlcipher.AbstractCursor: android.database.CursorWindow getWindow()
leakcanary.internal.InternalLeakCanary$FormFactor: leakcanary.internal.InternalLeakCanary$FormFactor[] values()
net.sqlcipher.AbstractCursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)
com.airbnb.lottie.model.KeyPath: com.airbnb.lottie.model.KeyPath resolve(com.airbnb.lottie.model.KeyPathElement)
net.sqlcipher.database.SQLiteOpenHelper: net.sqlcipher.database.SQLiteDatabase getReadableDatabase(byte[])
net.sqlcipher.DatabaseUtils: void readExceptionWithOperationApplicationExceptionFromParcel(android.os.Parcel)
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
com.airbnb.lottie.parser.moshi.JsonReader$Token: JsonReader$Token(java.lang.String,int)
com.airbnb.lottie.parser.AnimatablePathValueParser: AnimatablePathValueParser()
androidx.lifecycle.ProcessLifecycleOwnerInitializer: ProcessLifecycleOwnerInitializer()
net.sqlcipher.CursorWindow: void native_init(android.os.IBinder)
net.sqlcipher.database.SQLiteMisuseException: SQLiteMisuseException()
com.airbnb.lottie.model.content.ShapeStroke: com.airbnb.lottie.model.animatable.AnimatableColorValue getColor()
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
net.sqlcipher.database.SQLiteDirectCursorDriver: net.sqlcipher.Cursor query(net.sqlcipher.database.SQLiteDatabase$CursorFactory,java.lang.Object[])
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
com.google.android.material.chip.Chip: void setMinLines(int)
net.sqlcipher.AbstractCursor: short getShort(int)
net.sqlcipher.database.SQLiteDatabase: SQLiteDatabase(java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory,int,net.sqlcipher.DatabaseErrorHandler)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
net.sqlcipher.database.SQLiteDatabase: void access$100(net.sqlcipher.database.SQLiteDatabase,char[])
com.airbnb.lottie.network.FileExtension: java.lang.String tempExtension()
com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setBadgeIfNeeded(com.google.android.material.bottomnavigation.BottomNavigationItemView)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.button.MaterialButton: void setChecked(boolean)
com.dimas.made1.home.content.ContentFragment: ContentFragment()
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$AnimationListener: void onValueChanged()
net.sqlcipher.CursorWindow$1: net.sqlcipher.CursorWindow createFromParcel(android.os.Parcel)
com.airbnb.lottie.animation.content.GradientStrokeContent: int[] applyDynamicColorsIfNeeded(int[])
androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy[] values()
com.airbnb.lottie.model.content.GradientFill: com.airbnb.lottie.model.animatable.AnimatablePointValue getEndPoint()
com.airbnb.lottie.LottieAnimationView: void onVisibilityChanged(android.view.View,int)
net.sqlcipher.BulkCursorNative: BulkCursorNative()
com.airbnb.lottie.parser.ShapeStrokeParser: ShapeStrokeParser()
com.airbnb.lottie.parser.moshi.JsonReader: void skipName()
com.airbnb.lottie.LottieCompositionFactory$10: void onResult(com.airbnb.lottie.LottieComposition)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
com.google.android.material.bottomappbar.BottomAppBar: void setSubtitle(java.lang.CharSequence)
com.airbnb.lottie.model.layer.NullLayer: NullLayer(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.Layer)
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: void skipUnquotedValue()
com.airbnb.lottie.model.layer.BaseLayer: void intersectBoundsWithMatte(android.graphics.RectF,android.graphics.Matrix)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
com.airbnb.lottie.utils.Utils: float getScale(android.graphics.Matrix)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.google.android.material.tabs.TabLayout: void setupWithViewPager(androidx.viewpager.widget.ViewPager)
com.google.gson.internal.bind.TypeAdapters$18: TypeAdapters$18()
androidx.work.impl.utils.futures.DirectExecutor: androidx.work.impl.utils.futures.DirectExecutor valueOf(java.lang.String)
net.sqlcipher.database.SQLiteTransactionListener: void onBegin()
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
com.airbnb.lottie.animation.content.MergePathsContent: android.graphics.Path getPath()
com.google.android.material.chip.ChipGroup: void setSelectionRequired(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
com.airbnb.lottie.animation.content.BaseStrokeContent$PathGroup: com.airbnb.lottie.animation.content.TrimPathContent access$200(com.airbnb.lottie.animation.content.BaseStrokeContent$PathGroup)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
net.sqlcipher.CursorWindow: int describeContents()
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieTask cache(java.lang.String,java.util.concurrent.Callable)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openOrCreateDatabase(java.lang.String,char[],net.sqlcipher.database.SQLiteDatabase$CursorFactory,net.sqlcipher.database.SQLiteDatabaseHook)
net.sqlcipher.database.SQLiteDatabase: char[] getChars(byte[])
androidx.constraintlayout.helper.widget.Flow: void setHorizontalGap(int)
leakcanary.internal.AppWatcherInstaller: AppWatcherInstaller()
com.airbnb.lottie.model.content.ShapeStroke: java.lang.String getName()
net.sqlcipher.database.SQLiteDebug: void getHeapDirtyPages(int[])
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
net.sqlcipher.IContentObserver$Stub: android.os.IBinder asBinder()
com.google.gson.internal.bind.DateTypeAdapter: DateTypeAdapter()
com.airbnb.lottie.model.layer.Layer: int getPreCompWidth()
com.airbnb.lottie.utils.LottieValueAnimator: float getMinFrame()
net.sqlcipher.database.SQLiteConstraintException: SQLiteConstraintException(java.lang.String)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$EmptyKeyframeWrapper: boolean isValueChanged(float)
com.airbnb.lottie.model.Font: java.lang.String getName()
leakcanary.internal.RowElementLayout: RowElementLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
com.airbnb.lottie.value.LottieFrameInfo: float getLinearKeyframeProgress()
androidx.constraintlayout.helper.widget.Flow: void setPaddingTop(int)
com.airbnb.lottie.LottieDrawable: void drawInternal(android.graphics.Canvas)
com.airbnb.lottie.model.content.ShapeStroke: ShapeStroke(java.lang.String,com.airbnb.lottie.model.animatable.AnimatableFloatValue,java.util.List,com.airbnb.lottie.model.animatable.AnimatableColorValue,com.airbnb.lottie.model.animatable.AnimatableIntegerValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.content.ShapeStroke$LineCapType,com.airbnb.lottie.model.content.ShapeStroke$LineJoinType,float,boolean)
com.airbnb.lottie.model.layer.Layer$LayerType: Layer$LayerType(java.lang.String,int)
com.airbnb.lottie.LottieAnimationView: LottieAnimationView(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setErrorContentDescription(java.lang.CharSequence)
com.airbnb.lottie.value.Keyframe: Keyframe(com.airbnb.lottie.LottieComposition,java.lang.Object,java.lang.Object,android.view.animation.Interpolator,float,java.lang.Float)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setAdapter(android.widget.ListAdapter)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getUseCompatPadding()
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.google.android.material.card.MaterialCardView: void setCheckedIconSizeResource(int)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.Cursor queryWithFactory(net.sqlcipher.database.SQLiteDatabase$CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.google.android.material.chip.Chip: float getChipStrokeWidth()
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.tabs.TabLayout: int getTabCount()
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.airbnb.lottie.model.DocumentData$Justification: <clinit>()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.chip.Chip: void setOnCheckedChangeListenerInternal(android.widget.CompoundButton$OnCheckedChangeListener)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: float getProgress()
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: LinkedHashTreeMap(java.util.Comparator)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
net.sqlcipher.database.SQLiteDebug: void getPagerStats(net.sqlcipher.database.SQLiteDebug$PagerStats)
com.airbnb.lottie.animation.keyframe.TextKeyframeAnimation: TextKeyframeAnimation(java.util.List)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
net.sqlcipher.DatabaseUtils: void cursorStringToContentValues(net.sqlcipher.Cursor,java.lang.String,android.content.ContentValues)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openOrCreateDatabase(java.lang.String,java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory)
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
org.koin.core.definition.Kind: org.koin.core.definition.Kind[] values()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
net.sqlcipher.CursorWindowAllocation: long getInitialAllocationSize()
com.airbnb.lottie.LottieComposition: java.util.List getMarkers()
androidx.constraintlayout.helper.widget.Flow: void setPadding(int)
androidx.work.Worker: Worker(android.content.Context,androidx.work.WorkerParameters)
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
net.sqlcipher.AbstractWindowedCursor: int getType(int)
com.airbnb.lottie.value.LottieRelativeIntegerValueCallback: LottieRelativeIntegerValueCallback()
com.google.android.material.bottomnavigation.BottomNavigationView: void setItemTextColor(android.content.res.ColorStateList)
leakcanary.KeyedWeakReference: void clear()
androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)
com.google.android.material.button.MaterialButton: int getIconPadding()
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
com.airbnb.lottie.PerformanceTracker: void clearRenderTimes()
androidx.cardview.widget.CardView: boolean getUseCompatPadding()
com.airbnb.lottie.model.animatable.AnimatableIntegerValue: AnimatableIntegerValue()
net.sqlcipher.MatrixCursor$RowBuilder: net.sqlcipher.MatrixCursor$RowBuilder add(java.lang.Object)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
com.airbnb.lottie.animation.content.PolystarContent: void createPolygonPath()
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapper: float getStartDelayProgress()
com.google.android.material.tabs.TabLayout$TabView: int getContentWidth()
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
net.sqlcipher.database.SQLiteQueryBuilder: net.sqlcipher.Cursor query(net.sqlcipher.database.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.airbnb.lottie.LottieAnimationView: void setSpeed(float)
com.airbnb.lottie.LottieDrawable$5: LottieDrawable$5(com.airbnb.lottie.LottieDrawable,float)
net.sqlcipher.database.SQLiteDatabase: void unlock()
net.sqlcipher.DatabaseUtils: DatabaseUtils()
com.google.android.material.datepicker.MaterialCalendar: MaterialCalendar()
com.google.gson.internal.bind.TypeAdapters$25: TypeAdapters$25()
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy valueOf(java.lang.String)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: float getEndProgress()
com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)
net.sqlcipher.BulkCursorToCursorAdaptor: android.os.Bundle getExtras()
net.sqlcipher.database.SQLiteProgram: void native_bind_null(int)
com.google.android.material.bottomnavigation.BottomNavigationView: void setItemIconSizeRes(int)
com.google.gson.internal.bind.TypeAdapters$26: TypeAdapters$26()
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
net.sqlcipher.database.SQLiteOpenHelper: net.sqlcipher.database.SQLiteDatabase getReadableDatabase(char[])
com.airbnb.lottie.model.layer.BaseLayer: void removeAnimation(com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason[] values()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
net.sqlcipher.database.SQLiteDatabase: void unlockForced()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.airbnb.lottie.model.layer.Layer: java.util.List getInOutKeyframes()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
net.sqlcipher.database.SQLiteDatabase: void removeSQLiteClosable(net.sqlcipher.database.SQLiteClosable)
com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation: float getFloatValue(com.airbnb.lottie.value.Keyframe,float)
com.airbnb.lottie.parser.LottieCompositionParser: LottieCompositionParser()
com.google.android.material.card.MaterialCardView: void setPreventCornerOverlap(boolean)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
com.google.android.play.core.assetpacks.ExtractionForegroundService: ExtractionForegroundService()
com.google.android.material.tabs.TabLayout: int getTabIndicatorGravity()
com.airbnb.lottie.LottieCompositionFactory$7: com.airbnb.lottie.LottieResult call()
net.sqlcipher.MatrixCursor: int getInt(int)
com.airbnb.lottie.utils.MiscUtils: int lerp(int,int,float)
net.sqlcipher.database.SQLiteCursorDriver: void setBindArguments(java.lang.String[])
net.sqlcipher.IBulkCursor: int count()
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.model.animatable.AnimatableIntegerValue: AnimatableIntegerValue(java.util.List)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
net.sqlcipher.database.SQLiteProgram: void releaseCompiledSqlIfNotInCache()
com.airbnb.lottie.animation.content.ShapeContent: void onValueChanged()
com.airbnb.lottie.LottieDrawable: <clinit>()
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
net.sqlcipher.database.SQLiteOpenHelper: void onDowngrade(net.sqlcipher.database.SQLiteDatabase,int,int)
net.sqlcipher.database.SQLiteDatabase: void enableSqlTracing(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
net.sqlcipher.database.SQLiteDatabase: byte[] getBytes(char[])
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
com.airbnb.lottie.LottieAnimationView: int access$000(com.airbnb.lottie.LottieAnimationView)
com.google.android.material.chip.Chip: void setRippleColorResource(int)
net.sqlcipher.AbstractCursor: void deactivate()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportImageTintList()
leakcanary.KeyedWeakReference: long getRetainedUptimeMillis()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setItemHorizontalTranslationEnabled(boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
net.sqlcipher.database.SQLiteDatabase: void lock()
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
com.airbnb.lottie.model.DocumentData: int hashCode()
com.google.android.material.circularreveal.CircularRevealFrameLayout: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
androidx.viewpager2.widget.ViewPager2: void setPageTransformer(androidx.viewpager2.widget.ViewPager2$PageTransformer)
com.airbnb.lottie.L: L()
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
shark.AndroidObjectInspectors: shark.AndroidObjectInspectors[] values()
net.sqlcipher.database.SQLiteOpenHelper: SQLiteOpenHelper(android.content.Context,java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory,int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getErrorContentDescription()
com.airbnb.lottie.value.LottieInterpolatedFloatValue: LottieInterpolatedFloatValue(java.lang.Float,java.lang.Float)
com.airbnb.lottie.value.Keyframe: int getStartValueInt()
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentMode()
com.google.android.material.card.MaterialCardView: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.viewpager2.widget.ViewPager2: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
com.airbnb.lottie.parser.moshi.JsonReader$Options: JsonReader$Options(java.lang.String[],okio.Options)
leakcanary.internal.AndroidXFragmentDestroyWatcher: java.lang.Object invoke(java.lang.Object)
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
com.airbnb.lottie.model.content.ShapeData: java.util.List getCurves()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.airbnb.lottie.LottieDrawable: void endAnimation()
net.sqlcipher.MatrixCursor: net.sqlcipher.MatrixCursor$RowBuilder newRow()
com.airbnb.lottie.utils.LottieValueAnimator: void postFrameCallback()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: EmptyActivityLifecycleCallbacks()
com.airbnb.lottie.model.FontCharacter: java.lang.String getStyle()
com.airbnb.lottie.model.content.ShapeTrimPath$Type: com.airbnb.lottie.model.content.ShapeTrimPath$Type[] values()
com.airbnb.lottie.parser.PointFParser: PointFParser()
com.airbnb.lottie.model.DocumentData$Justification: DocumentData$Justification(java.lang.String,int)
com.airbnb.lottie.LottieAnimationView$SavedState$1: LottieAnimationView$SavedState$1()
net.sqlcipher.database.SQLiteDatabase: void markTableSyncable(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
net.sqlcipher.database.SQLiteDatabase: void setLockingEnabled(boolean)
net.sqlcipher.R: R()
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieResult fromRawResSync(android.content.Context,int)
com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation getStartOpacity()
com.airbnb.lottie.utils.BaseLottieAnimator: void setStartDelay(long)
com.airbnb.lottie.animation.content.TrimPathContent: com.airbnb.lottie.model.content.ShapeTrimPath$Type getType()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintList(android.content.res.ColorStateList)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.airbnb.lottie.parser.AnimatableValueParser: com.airbnb.lottie.model.animatable.AnimatableFloatValue parseFloat(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
com.google.android.material.tabs.TabLayout: void setScrollAnimatorListener(android.animation.Animator$AnimatorListener)
net.sqlcipher.BulkCursorToCursorAdaptor: void registerContentObserver(android.database.ContentObserver)
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node findByEntry(java.util.Map$Entry)
androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy valueOf(java.lang.String)
com.airbnb.lottie.utils.Logger: <clinit>()
androidx.constraintlayout.helper.widget.Flow: void setWrapMode(int)
androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()
com.airbnb.lottie.model.layer.TextLayer: void drawLayer(android.graphics.Canvas,android.graphics.Matrix,int)
net.sqlcipher.database.SQLiteCompiledSql: void native_finalize()
com.google.android.play.core.assetpacks.AssetPackExtractionService: AssetPackExtractionService()
leakcanary.internal.InternalLeakCanary: leakcanary.internal.InternalLeakCanary$FormFactor getFormFactor()
net.sqlcipher.AbstractCursor: boolean updateBlob(int,byte[])
androidx.cardview.widget.CardView: int getContentPaddingRight()
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
net.sqlcipher.AbstractCursor: boolean moveToFirst()
com.airbnb.lottie.parser.AnimatableValueParser: com.airbnb.lottie.model.animatable.AnimatablePointValue parsePoint(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
net.sqlcipher.database.SQLiteQueryBuilder: void appendColumns(java.lang.StringBuilder,java.lang.String[])
com.airbnb.lottie.utils.Utils: float dpScale()
com.google.android.material.tabs.TabLayout: int getTabIndicatorAnimationMode()
com.airbnb.lottie.utils.LottieValueAnimator: void pauseAnimation()
net.sqlcipher.database.SQLiteDatabase: void addSQLiteClosable(net.sqlcipher.database.SQLiteClosable)
com.airbnb.lottie.network.NetworkCache: androidx.core.util.Pair fetch(java.lang.String)
com.airbnb.lottie.LottieDrawable: void addValueCallback(com.airbnb.lottie.model.KeyPath,java.lang.Object,com.airbnb.lottie.value.SimpleLottieValueCallback)
com.airbnb.lottie.utils.MiscUtils: void getPathFromData(com.airbnb.lottie.model.content.ShapeData,android.graphics.Path)
com.airbnb.lottie.animation.content.BaseStrokeContent: void onValueChanged()
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieResult fromJsonStringSync(java.lang.String,java.lang.String)
net.sqlcipher.database.SQLiteQuery: void requery()
com.airbnb.lottie.LottieDrawable: void buildCompositionLayer()
com.airbnb.lottie.model.layer.TextLayer: java.lang.String codePointToString(java.lang.String,int)
com.airbnb.lottie.animation.content.RectangleContent: void onValueChanged()
com.airbnb.lottie.LottieResult: LottieResult(java.lang.Object)
com.airbnb.lottie.LottieLogger: void debug(java.lang.String,java.lang.Throwable)
com.airbnb.lottie.model.FontCharacter: int hashCode()
com.airbnb.lottie.LottieAnimationView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
net.sqlcipher.AbstractCursor: boolean getWantsAllOnMoveCalls()
com.google.android.material.timepicker.RadialViewGroup: RadialViewGroup(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.model.animatable.AnimatablePathValue: java.util.List getKeyframes()
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState[] values()
com.airbnb.lottie.LottieAnimationView: com.airbnb.lottie.PerformanceTracker getPerformanceTracker()
androidx.fragment.app.FragmentContainerView: FragmentContainerView(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SQLiteDatabase: java.util.Map getSyncedTables()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
com.airbnb.lottie.parser.moshi.JsonReader: java.lang.String nextName()
com.airbnb.lottie.model.layer.TextLayer: float getTextLineWidthForGlyphs(java.lang.String,com.airbnb.lottie.model.Font,float,float)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
net.sqlcipher.database.SQLiteOpenHelper: SQLiteOpenHelper(android.content.Context,java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory,int,net.sqlcipher.database.SQLiteDatabaseHook)
com.airbnb.lottie.model.layer.CompositionLayer: CompositionLayer(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.Layer,java.util.List,com.airbnb.lottie.LottieComposition)
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int selectName(com.airbnb.lottie.parser.moshi.JsonReader$Options)
net.sqlcipher.BulkCursorProxy: java.lang.String[] getColumnNames()
com.google.android.material.button.MaterialButton: void setIconPadding(int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
com.airbnb.lottie.value.Keyframe: boolean isStatic()
com.airbnb.lottie.model.layer.TextLayer$3: <clinit>()
com.airbnb.lottie.animation.keyframe.PathKeyframeAnimation: java.lang.Object getValue(com.airbnb.lottie.value.Keyframe,float)
net.sqlcipher.AbstractWindowedCursor: java.lang.String getString(int)
com.airbnb.lottie.LottieCompositionFactory$3: com.airbnb.lottie.LottieResult call()
leakcanary.internal.InternalLeakCanary: void registerResumedActivityListener(android.app.Application)
com.google.android.material.card.MaterialCardView: int getCheckedIconMargin()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.airbnb.lottie.model.content.CircleShape: com.airbnb.lottie.model.animatable.AnimatablePointValue getSize()
com.airbnb.lottie.LottieAnimationView: void setTextDelegate(com.airbnb.lottie.TextDelegate)
com.airbnb.lottie.model.LottieCompositionCache: com.airbnb.lottie.LottieComposition get(java.lang.String)
net.sqlcipher.database.SupportFactory: androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$EntrySet: java.util.Iterator iterator()
com.airbnb.lottie.model.content.ShapeStroke: com.airbnb.lottie.model.content.ShapeStroke$LineJoinType getJoinType()
androidx.recyclerview.widget.RecyclerView: int getScrollState()
com.airbnb.lottie.parser.moshi.JsonReader: void pushScope(int)
net.sqlcipher.AbstractWindowedCursor: byte[] getBlob(int)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
com.airbnb.lottie.value.LottieRelativeFloatValueCallback: LottieRelativeFloatValueCallback()
net.sqlcipher.database.SQLiteDatabase: void beginTransactionWithListenerNonExclusive(android.database.sqlite.SQLiteTransactionListener)
net.sqlcipher.database.SQLiteDatabase: long getPageSize()
net.sqlcipher.CursorWindow: boolean isFloat(int,int)
net.sqlcipher.MatrixCursor$RowBuilder: MatrixCursor$RowBuilder(net.sqlcipher.MatrixCursor,int,int)
net.sqlcipher.CursorWindow: void native_init(boolean,long,long,long)
com.airbnb.lottie.LottieAnimationView: void loop(boolean)
com.airbnb.lottie.LottieAnimationView$SavedState: LottieAnimationView$SavedState(android.os.Parcel,com.airbnb.lottie.LottieAnimationView$1)
com.airbnb.lottie.parser.RepeaterParser: com.airbnb.lottie.model.content.Repeater parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedSize()
com.dimas.made1.favorite.content.FavoriteMovieTvFragment: FavoriteMovieTvFragment()
net.sqlcipher.DatabaseUtils: long longForQuery(net.sqlcipher.database.SQLiteStatement,java.lang.String[])
androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet)
com.airbnb.lottie.model.KeyPath: com.airbnb.lottie.model.KeyPath addKey(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
com.airbnb.lottie.model.content.PolystarShape: PolystarShape(java.lang.String,com.airbnb.lottie.model.content.PolystarShape$Type,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,boolean)
com.google.android.material.bottomnavigation.BottomNavigationItemView: com.google.android.material.badge.BadgeDrawable getBadge()
com.airbnb.lottie.LottieAnimationView: java.lang.String getImageAssetsFolder()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleX(float)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: void doubleCapacity()
com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatablePathValue getAnchorPoint()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.airbnb.lottie.animation.content.RepeaterContent: void setContents(java.util.List,java.util.List)
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
com.airbnb.lottie.animation.content.CompoundTrimPathContent: void addTrimPath(com.airbnb.lottie.animation.content.TrimPathContent)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openOrCreateDatabase(java.io.File,java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory)
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.airbnb.lottie.parser.MaskParser: com.airbnb.lottie.model.content.Mask parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
net.sqlcipher.database.SQLiteDatabase: void onAllReferencesReleased()
com.google.android.material.chip.Chip: void setChipMinHeight(float)
com.airbnb.lottie.animation.content.PolystarContent: java.lang.String getName()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.airbnb.lottie.model.animatable.AnimatableScaleValue: boolean isStatic()
leakcanary.internal.AndroidSupportFragmentDestroyWatcher: AndroidSupportFragmentDestroyWatcher(leakcanary.ReachabilityWatcher)
com.airbnb.lottie.utils.MiscUtils: float lerp(float,float,float)
net.sqlcipher.IBulkCursor: android.os.Bundle getExtras()
com.google.android.material.chip.Chip: void setIconEndPadding(float)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
net.sqlcipher.AbstractWindowedCursor: boolean isLong(int)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.airbnb.lottie.model.layer.BaseLayer: void setContents(java.util.List,java.util.List)
androidx.constraintlayout.helper.widget.Flow: void setVerticalAlign(int)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: int getItemTextAppearanceActive()
com.google.gson.internal.bind.SqlDateTypeAdapter$1: SqlDateTypeAdapter$1()
com.airbnb.lottie.animation.content.FillContent: void addValueCallback(java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)
net.sqlcipher.database.SQLiteDatabase: void disableWriteAheadLogging()
net.sqlcipher.database.SQLiteDatabase: boolean isDbLockedByCurrentThread()
leakcanary.internal.InternalLeakCanary: void scheduleRetainedObjectCheck()
com.airbnb.lottie.model.layer.BaseLayer: com.airbnb.lottie.model.layer.BaseLayer forModel(com.airbnb.lottie.model.layer.Layer,com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.LottieComposition)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
com.airbnb.lottie.LottieComposition: com.airbnb.lottie.model.layer.Layer layerModelForId(long)
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
com.airbnb.lottie.LottieLogger: void debug(java.lang.String)
com.airbnb.lottie.model.layer.Layer: int getPreCompHeight()
com.airbnb.lottie.LottieAnimationView: void setAnimation(java.io.InputStream,java.lang.String)
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: void close()
net.sqlcipher.database.SQLiteQueryBuilder: java.lang.String buildUnionQuery(java.lang.String[],java.lang.String,java.lang.String)
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
com.google.android.material.bottomappbar.BottomAppBar: androidx.appcompat.widget.ActionMenuView getActionMenuView()
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
net.sqlcipher.IBulkCursor: boolean getWantsAllOnMoveCalls()
com.airbnb.lottie.model.layer.ImageLayer: void getBounds(android.graphics.RectF,android.graphics.Matrix,boolean)
com.airbnb.lottie.parser.KeyframesParser: java.util.List parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition,float,com.airbnb.lottie.parser.ValueParser)
net.sqlcipher.database.SupportHelper$1: void onOpen(net.sqlcipher.database.SQLiteDatabase)
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setIconTintList(android.content.res.ColorStateList)
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
net.sqlcipher.database.SQLiteDatabase: SQLiteDatabase(java.lang.String,char[],net.sqlcipher.database.SQLiteDatabase$CursorFactory,int)
com.airbnb.lottie.LottieAnimationView: void setMinAndMaxFrame(java.lang.String)
com.airbnb.lottie.LottieDrawable: void setImageAssetDelegate(com.airbnb.lottie.ImageAssetDelegate)
net.sqlcipher.IContentObserver$Stub$Proxy: IContentObserver$Stub$Proxy(android.os.IBinder)
com.airbnb.lottie.utils.LottieValueAnimator: float getFrame()
com.airbnb.lottie.animation.keyframe.MaskKeyframeAnimation: MaskKeyframeAnimation(java.util.List)
net.sqlcipher.database.SQLiteDatabase: android.database.Cursor query(java.lang.String)
net.sqlcipher.CursorWindow: CursorWindow(boolean)
com.airbnb.lottie.parser.moshi.JsonReader: void skipValue()
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieResult fromJsonInputStreamSync(java.io.InputStream,java.lang.String,boolean)
com.airbnb.lottie.model.layer.Layer: float getStartProgress()
com.google.android.material.button.MaterialButtonToggleGroup: void setupButtonChild(com.google.android.material.button.MaterialButton)
androidx.cardview.widget.CardView: CardView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPrefixText()
com.airbnb.lottie.parser.AnimatableTransformParser: boolean isSkewIdentity(com.airbnb.lottie.model.animatable.AnimatableFloatValue)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
com.airbnb.lottie.value.Keyframe: boolean containsProgress(float)
com.airbnb.lottie.value.LottieInterpolatedIntegerValue: java.lang.Integer interpolateValue(java.lang.Integer,java.lang.Integer,float)
net.sqlcipher.BulkCursorToCursorAdaptor: void set(net.sqlcipher.IBulkCursor)
androidx.appcompat.widget.AppCompatImageView: void drawableStateChanged()
com.airbnb.lottie.LottieDrawable: void reverseAnimationSpeed()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.airbnb.lottie.LottieCompositionFactory$8: java.lang.Object call()
com.google.android.material.bottomappbar.BottomAppBar: int getLeftInset()
net.sqlcipher.Cursor: int getType(int)
net.sqlcipher.BulkCursorToCursorAdaptor: net.sqlcipher.IContentObserver getObserver()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevationResource(int)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
com.airbnb.lottie.LottieDrawable$6: LottieDrawable$6(com.airbnb.lottie.LottieDrawable,int)
com.google.android.material.button.MaterialButton: int getIconGravity()
com.airbnb.lottie.LottieDrawable$5: void run(com.airbnb.lottie.LottieComposition)
net.sqlcipher.database.SQLiteDatabase: void setTransactionSuccessful()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
com.airbnb.lottie.value.LottieInterpolatedIntegerValue: LottieInterpolatedIntegerValue(java.lang.Integer,java.lang.Integer)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
com.airbnb.lottie.animation.content.RectangleContent: android.graphics.Path getPath()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieResult fromJsonReaderSyncInternal(com.airbnb.lottie.parser.moshi.JsonReader,java.lang.String,boolean)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
androidx.cardview.widget.CardView: void setMinimumWidth(int)
net.sqlcipher.database.SQLiteStatement: java.lang.String native_1x1_string()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
com.airbnb.lottie.model.layer.BaseLayer: void setMatteLayer(com.airbnb.lottie.model.layer.BaseLayer)
net.sqlcipher.database.SQLiteProgram: void bindNull(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpecResource(int)
com.airbnb.lottie.model.layer.Layer$LayerType: <clinit>()
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
com.airbnb.lottie.model.content.Repeater: com.airbnb.lottie.model.animatable.AnimatableFloatValue getOffset()
com.airbnb.lottie.LottieDrawable: void setScaleType(android.widget.ImageView$ScaleType)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
net.sqlcipher.database.SqliteWrapper: int update(android.content.Context,android.content.ContentResolver,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$KeySet: void clear()
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
com.airbnb.lottie.animation.content.PolystarContent: void invalidate()
net.sqlcipher.DatabaseUtils$InsertHelper: void bind(int,long)
com.google.android.material.tabs.TabLayout: void setElevation(float)
com.airbnb.lottie.parser.PathKeyframeParser: com.airbnb.lottie.animation.keyframe.PathKeyframe parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
com.google.android.material.button.MaterialButtonToggleGroup: int getCheckedButtonId()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
com.airbnb.lottie.LottieDrawable$9: LottieDrawable$9(com.airbnb.lottie.LottieDrawable,java.lang.String)
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver: ConstraintProxyUpdateReceiver()
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
com.airbnb.lottie.LottieDrawable$11: LottieDrawable$11(com.airbnb.lottie.LottieDrawable,java.lang.String,java.lang.String,boolean)
com.airbnb.lottie.model.animatable.AnimatableShapeValue: java.lang.String toString()
leakcanary.AndroidLeakFixes: leakcanary.AndroidLeakFixes valueOf(java.lang.String)
androidx.viewpager2.widget.ViewPager2: void setCurrentItem(int)
net.sqlcipher.IContentObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()
com.airbnb.lottie.animation.content.RepeaterContent: void addValueCallback(java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)
com.airbnb.lottie.LottieAnimationView: void setFallbackResource(int)
com.airbnb.lottie.parser.moshi.JsonReader: java.lang.String getPath()
net.sqlcipher.AbstractCursor: boolean moveToPrevious()
com.airbnb.lottie.LottieAnimationView: com.airbnb.lottie.LottieComposition getComposition()
com.airbnb.lottie.model.KeyPath: int incrementDepthBy(java.lang.String,int)
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieTask fromJsonString(java.lang.String,java.lang.String)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.google.gson.internal.Excluder: Excluder()
com.google.android.material.card.MaterialCardView: float getProgress()
com.airbnb.lottie.model.layer.Layer: Layer(java.util.List,com.airbnb.lottie.LottieComposition,java.lang.String,long,com.airbnb.lottie.model.layer.Layer$LayerType,long,java.lang.String,java.util.List,com.airbnb.lottie.model.animatable.AnimatableTransform,int,int,int,float,float,int,int,com.airbnb.lottie.model.animatable.AnimatableTextFrame,com.airbnb.lottie.model.animatable.AnimatableTextProperties,java.util.List,com.airbnb.lottie.model.layer.Layer$MatteType,com.airbnb.lottie.model.animatable.AnimatableFloatValue,boolean)
com.airbnb.lottie.manager.ImageAssetManager: android.graphics.Bitmap bitmapForId(java.lang.String)
net.sqlcipher.database.SQLiteDatabase: int lastChangeCount()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
com.google.android.material.internal.FlowLayout: FlowLayout(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: LinkedHashTreeMap()
com.airbnb.lottie.LottieTask: LottieTask(java.util.concurrent.Callable)
com.google.android.material.bottomnavigation.BottomNavigationView: int getItemTextAppearanceInactive()
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SupportFactory: SupportFactory(byte[])
leakcanary.internal.InternalLeakCanary: boolean getDumpEnabledInAboutScreen$leakcanary_android_core_release()
com.google.android.material.chip.Chip: void setChecked(boolean)
com.airbnb.lottie.animation.content.ContentGroup: void draw(android.graphics.Canvas,android.graphics.Matrix,int)
com.airbnb.lottie.LottieTask$1: void run()
com.airbnb.lottie.value.LottieInterpolatedPointValue: android.graphics.PointF interpolateValue(android.graphics.PointF,android.graphics.PointF,float)
com.airbnb.lottie.LottieComposition: java.util.Map getFonts()
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
com.airbnb.lottie.animation.content.BaseStrokeContent: void draw(android.graphics.Canvas,android.graphics.Matrix,int)
com.google.android.material.datepicker.MaterialTextInputPicker: MaterialTextInputPicker()
net.sqlcipher.database.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openDatabase(java.lang.String,java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory,int)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase create(net.sqlcipher.database.SQLiteDatabase$CursorFactory,java.lang.String)
com.airbnb.lottie.utils.Logger: void setInstance(com.airbnb.lottie.LottieLogger)
androidx.work.BackoffPolicy: androidx.work.BackoffPolicy valueOf(java.lang.String)
net.sqlcipher.DatabaseUtils: int getTypeOfObject(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.airbnb.lottie.model.layer.NullLayer: void getBounds(android.graphics.RectF,android.graphics.Matrix,boolean)
androidx.cardview.widget.CardView: int getContentPaddingBottom()
com.airbnb.lottie.value.ScaleXY: ScaleXY(float,float)
net.sqlcipher.DefaultDatabaseErrorHandler: DefaultDatabaseErrorHandler()
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
androidx.constraintlayout.widget.Barrier: Barrier(android.content.Context,android.util.AttributeSet)
androidx.viewpager.widget.ViewPager: void setOffscreenPageLimit(int)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
com.airbnb.lottie.parser.IntegerParser: IntegerParser()
com.airbnb.lottie.LottieCompositionFactory$6: com.airbnb.lottie.LottieResult call()
net.sqlcipher.DatabaseUtils$InsertHelper: int getColumnIndex(java.lang.String)
com.airbnb.lottie.LottieAnimationView$4: java.lang.Object getValue(com.airbnb.lottie.value.LottieFrameInfo)
com.airbnb.lottie.LottieTask: void setResult(com.airbnb.lottie.LottieResult)
net.sqlcipher.CursorWindowAllocation: long getMaxAllocationSize()
net.sqlcipher.CursorWindow: void freeLastRow_native()
com.airbnb.lottie.model.DocumentData$Justification: com.airbnb.lottie.model.DocumentData$Justification valueOf(java.lang.String)
net.sqlcipher.MatrixCursor: java.lang.String[] getColumnNames()
com.airbnb.lottie.parser.GradientFillParser: <clinit>()
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.model.content.ShapeFill: com.airbnb.lottie.model.animatable.AnimatableIntegerValue getOpacity()
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SQLiteCursor: void registerDataSetObserver(android.database.DataSetObserver)
net.sqlcipher.database.SQLiteDatabase: void rowUpdated(java.lang.String,long)
com.airbnb.lottie.animation.content.MergePathsContent: void setContents(java.util.List,java.util.List)
com.google.android.material.card.MaterialCardView: void setCheckedIconTint(android.content.res.ColorStateList)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.LottieAnimationView: <clinit>()
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: int size()
com.airbnb.lottie.model.layer.TextLayer: java.util.List getContentsForCharacter(com.airbnb.lottie.model.FontCharacter)
com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.animatable.AnimatableFloatValue getWidth()
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setShifting(boolean)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
com.airbnb.lottie.LottieComposition$Factory: LottieComposition$Factory()
net.sqlcipher.BulkCursorProxy: int count()
com.airbnb.lottie.model.layer.BaseLayer: void buildParentLayerListIfNeeded()
net.sqlcipher.database.SQLiteDatabase$4: void onBegin()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
com.airbnb.lottie.utils.Utils: int hashFor(float,float,float,float)
com.airbnb.lottie.model.animatable.AnimatableScaleValue: java.util.List getKeyframes()
com.google.android.material.chip.ChipGroup: void setChipSpacing(int)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
net.sqlcipher.CursorWindow: int getStartPosition()
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.model.content.PolystarShape: com.airbnb.lottie.model.animatable.AnimatableFloatValue getPoints()
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
net.sqlcipher.AbstractCursor: boolean move(int)
com.airbnb.lottie.parser.AnimatableTransformParser: boolean isPositionIdentity(com.airbnb.lottie.model.animatable.AnimatableValue)
com.airbnb.lottie.model.animatable.AnimatableGradientColorValue: boolean isStatic()
com.google.android.material.button.MaterialButtonToggleGroup: int getLastVisibleChildIndex()
com.airbnb.lottie.parser.KeyframesParser: KeyframesParser()
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
net.sqlcipher.database.SQLiteQuery: void bindNull(int)
net.sqlcipher.database.SQLiteStatement: long native_1x1_long()
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.google.android.material.tabs.TabLayout: int getTabGravity()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
net.sqlcipher.database.SQLiteStatement: java.lang.String simpleQueryForString()
com.google.android.material.appbar.AppBarLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
net.sqlcipher.database.SQLiteDatabase: void keyDatabase(net.sqlcipher.database.SQLiteDatabaseHook,java.lang.Runnable)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.airbnb.lottie.parser.AnimatableTextPropertiesParser: com.airbnb.lottie.model.animatable.AnimatableTextProperties parseAnimatableTextProperties(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
com.airbnb.lottie.parser.ColorParser: <clinit>()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
com.airbnb.lottie.animation.keyframe.GradientColorKeyframeAnimation: GradientColorKeyframeAnimation(java.util.List)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node: java.lang.Object getValue()
com.airbnb.lottie.value.Keyframe: Keyframe(java.lang.Object)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.model.content.ShapeFill: java.lang.String toString()
androidx.appcompat.widget.SearchView: void setInputType(int)
com.airbnb.lottie.LottieComposition: boolean hasImages()
com.airbnb.lottie.model.layer.BaseLayer: void applyIntersectMask(android.graphics.Canvas,android.graphics.Matrix,com.airbnb.lottie.model.content.Mask,com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation,com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation)
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
com.airbnb.lottie.LottieTask$1: LottieTask$1(com.airbnb.lottie.LottieTask)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$SingleKeyframeWrapper: boolean isCachedValueEnabled(float)
com.airbnb.lottie.model.layer.BaseLayer: void addValueCallback(java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)
com.airbnb.lottie.animation.keyframe.ValueCallbackKeyframeAnimation: void notifyListeners()
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node findByObject(java.lang.Object)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node: java.lang.String toString()
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
net.sqlcipher.database.SQLiteCursor$QueryThread: void run()
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()
com.airbnb.lottie.parser.ShapeStrokeParser: <clinit>()
net.sqlcipher.CursorWindow: void setRequiredPosition(int)
com.airbnb.lottie.LottieImageAsset: java.lang.String getDirName()
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
com.airbnb.lottie.model.content.GradientColor: float[] getPositions()
com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: void addAnimationsToLayer(com.airbnb.lottie.model.layer.BaseLayer)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
com.google.android.material.bottomappbar.BottomAppBar: void setCradleVerticalOffset(float)
net.sqlcipher.database.SQLiteQuery: int native_column_count()
leakcanary.internal.InternalLeakCanary: boolean access$getApplicationVisible$p(leakcanary.internal.InternalLeakCanary)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
com.airbnb.lottie.model.Marker: <clinit>()
com.airbnb.lottie.parser.ShapeDataParser: java.lang.Object parse(com.airbnb.lottie.parser.moshi.JsonReader,float)
com.airbnb.lottie.parser.moshi.JsonReader: void string(okio.BufferedSink,java.lang.String)
com.airbnb.lottie.animation.content.Content: void setContents(java.util.List,java.util.List)
com.airbnb.lottie.model.content.MergePaths$MergePathsMode: <clinit>()
com.google.android.material.chip.Chip: void setIconStartPadding(float)
net.sqlcipher.database.SQLiteDirectCursorDriver: net.sqlcipher.Cursor query(net.sqlcipher.database.SQLiteDatabase$CursorFactory,java.lang.String[])
com.airbnb.lottie.L: void setTraceEnabled(boolean)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
net.sqlcipher.database.SQLiteOpenHelper: SQLiteOpenHelper(android.content.Context,java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory,int,net.sqlcipher.database.SQLiteDatabaseHook,net.sqlcipher.DatabaseErrorHandler)
com.airbnb.lottie.animation.keyframe.GradientColorKeyframeAnimation: java.lang.Object getValue(com.airbnb.lottie.value.Keyframe,float)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.airbnb.lottie.manager.ImageAssetManager: void setDelegate(com.airbnb.lottie.ImageAssetDelegate)
com.airbnb.lottie.model.content.Repeater: com.airbnb.lottie.model.animatable.AnimatableFloatValue getCopies()
shark.LeakTrace$GcRootType: shark.LeakTrace$GcRootType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
net.sqlcipher.database.SQLiteDatabase: void native_rawExecSQL(java.lang.String)
com.airbnb.lottie.network.NetworkCache: java.io.File parentDir()
com.airbnb.lottie.LottieCompositionFactory$4: java.lang.Object call()
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
com.airbnb.lottie.TextDelegate: TextDelegate()
com.airbnb.lottie.animation.content.ContentGroup: ContentGroup(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer,java.lang.String,boolean,java.util.List,com.airbnb.lottie.model.animatable.AnimatableTransform)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.airbnb.lottie.LottieAnimationView: float getSpeed()
com.airbnb.lottie.value.LottieFrameInfo: com.airbnb.lottie.value.LottieFrameInfo set(float,float,java.lang.Object,java.lang.Object,float,float,float)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.airbnb.lottie.model.layer.ImageLayer: android.graphics.Bitmap getBitmap()
com.airbnb.lottie.model.content.ShapeTrimPath: com.airbnb.lottie.model.animatable.AnimatableFloatValue getOffset()
com.airbnb.lottie.model.layer.BaseLayer: void drawLayer(android.graphics.Canvas,android.graphics.Matrix,int)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.airbnb.lottie.value.LottieRelativeIntegerValueCallback: java.lang.Object getValue(com.airbnb.lottie.value.LottieFrameInfo)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
com.google.gson.internal.bind.ArrayTypeAdapter$1: ArrayTypeAdapter$1()
com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: boolean applyValueCallback(java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)
net.sqlcipher.database.SQLiteTransactionListener: void onRollback()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: int getCircularRevealScrimColor()
com.airbnb.lottie.parser.FloatParser: <clinit>()
shark.LeakTraceObject$ObjectType: shark.LeakTraceObject$ObjectType valueOf(java.lang.String)
net.sqlcipher.SQLException: SQLException(java.lang.String)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
com.airbnb.lottie.model.animatable.AnimatableScaleValue: AnimatableScaleValue()
com.airbnb.lottie.LottieAnimationView: com.airbnb.lottie.LottieListener access$100(com.airbnb.lottie.LottieAnimationView)
com.airbnb.lottie.model.layer.CompositionLayer: void getBounds(android.graphics.RectF,android.graphics.Matrix,boolean)
com.airbnb.lottie.LottieAnimationView: void setAnimation(java.lang.String)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node last()
androidx.constraintlayout.widget.VirtualLayout: void setVisibility(int)
net.sqlcipher.DatabaseUtils: void cursorLongToContentValues(net.sqlcipher.Cursor,java.lang.String,android.content.ContentValues)
leakcanary.internal.AndroidSupportFragmentDestroyWatcher: java.lang.Object invoke(java.lang.Object)
net.sqlcipher.DatabaseUtils$InsertHelper: void bind(int,byte[])
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
com.google.android.material.internal.FlowLayout: int getLineSpacing()
net.sqlcipher.database.SupportHelper$1: void onDowngrade(net.sqlcipher.database.SQLiteDatabase,int,int)
net.sqlcipher.database.SQLiteDatabase: void checkLockHoldTime()
net.sqlcipher.BulkCursorProxy: net.sqlcipher.CursorWindow getWindow(int)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type[] values()
com.airbnb.lottie.model.content.ShapeTrimPath$Type: com.airbnb.lottie.model.content.ShapeTrimPath$Type valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)
com.google.android.material.card.MaterialCardView: void setStrokeColor(android.content.res.ColorStateList)
com.airbnb.lottie.utils.LottieValueAnimator: float getAnimatedValueAbsolute()
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node: boolean equals(java.lang.Object)
com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.content.ShapeStroke$LineJoinType getJoinType()
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
com.airbnb.lottie.model.content.GradientFill: com.airbnb.lottie.model.animatable.AnimatableIntegerValue getOpacity()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
com.airbnb.lottie.parser.GradientStrokeParser: <clinit>()
com.airbnb.lottie.model.content.GradientType: <clinit>()
net.sqlcipher.IContentObserver: void onChange(boolean)
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(int)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)
net.sqlcipher.database.SQLiteQueryBuilder: <clinit>()
net.sqlcipher.database.SQLiteOpenHelper: void onCreate(net.sqlcipher.database.SQLiteDatabase)
com.airbnb.lottie.parser.moshi.JsonReader: void access$000(okio.BufferedSink,java.lang.String)
com.airbnb.lottie.model.layer.Layer$MatteType: com.airbnb.lottie.model.layer.Layer$MatteType[] values()
com.google.android.material.chip.Chip: void setElevation(float)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
com.airbnb.lottie.LottieComposition: int getMaskAndMatteCount()
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: JsonUtf8Reader(okio.BufferedSource)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieImageAsset findImageAssetForFileName(com.airbnb.lottie.LottieComposition,java.lang.String)
com.airbnb.lottie.model.LottieCompositionCache: void resize(int)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
com.airbnb.lottie.model.animatable.AnimatablePointValue: java.util.List getKeyframes()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.animatable.AnimatableIntegerValue getOpacity()
com.airbnb.lottie.model.MutablePair: void set(java.lang.Object,java.lang.Object)
com.airbnb.lottie.model.layer.TextLayer: void drawCharacterAsGlyph(com.airbnb.lottie.model.FontCharacter,android.graphics.Matrix,float,com.airbnb.lottie.model.DocumentData,android.graphics.Canvas)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
leakcanary.internal.AndroidHeapDumper: leakcanary.internal.DumpHeapResult dumpHeap()
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontal(int)
com.google.android.material.bottomnavigation.BottomNavigationView: void setItemTextAppearanceActive(int)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$LinkedTreeMapIterator: boolean hasNext()
com.airbnb.lottie.model.layer.ImageLayer: void addValueCallback(java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)
com.airbnb.lottie.model.content.CircleShape: boolean isReversed()
com.airbnb.lottie.LottieDrawable$6: void run(com.airbnb.lottie.LottieComposition)
com.airbnb.lottie.value.LottieValueCallback: java.lang.Object getValueInternal(float,float,java.lang.Object,java.lang.Object,float,float,float)
androidx.appcompat.widget.AppCompatImageView: boolean hasOverlappingRendering()
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
net.sqlcipher.IContentObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
net.sqlcipher.AbstractCursor: boolean moveToNext()
com.airbnb.lottie.model.content.RectangleShape: boolean isHidden()
com.airbnb.lottie.animation.keyframe.IntegerKeyframeAnimation: int getIntValue()
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values()
com.google.android.material.bottomnavigation.BottomNavigationView: android.view.Menu getMenu()
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteQueryStats getQueryStats(java.lang.String,java.lang.Object[])
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
net.sqlcipher.DefaultCursorWindowAllocation: long getMaxAllocationSize()
com.google.android.material.chip.ChipGroup: void setCheckedId(int)
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
com.airbnb.lottie.model.layer.Layer: long getId()
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
com.airbnb.lottie.animation.content.MergePathsContent: void addPaths()
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
net.sqlcipher.CustomCursorWindowAllocation: long getInitialAllocationSize()
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
shark.AndroidResourceIdNames: AndroidResourceIdNames(int[],java.lang.String[])
com.airbnb.lottie.model.layer.BaseLayer: void getBounds(android.graphics.RectF,android.graphics.Matrix,boolean)
net.sqlcipher.database.SQLiteDebug: net.sqlcipher.database.SQLiteDebug$PagerStats getDatabaseInfo()
net.sqlcipher.UnknownTypeException: UnknownTypeException()
net.sqlcipher.database.SQLiteDatabase: long getPragmaVal(net.sqlcipher.database.SQLiteDatabase,java.lang.String)
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
com.google.android.material.button.MaterialButton: void setPressed(boolean)
com.google.android.material.bottomnavigation.BottomNavigationView: void setItemBackgroundResource(int)
com.airbnb.lottie.utils.LottieValueAnimator: void removeFrameCallback()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.dimas.made1.core.data.source.local.room.AppDatabase: AppDatabase()
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
net.sqlcipher.CursorIndexOutOfBoundsException: CursorIndexOutOfBoundsException(int,int)
com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatableFloatValue getRotation()
com.airbnb.lottie.model.animatable.AnimatablePointValue: AnimatablePointValue(java.util.List)
com.google.android.material.card.MaterialCardView: float getCardViewRadius()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.airbnb.lottie.LottieAnimationView: void setAnimationFromJson(java.lang.String)
com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)
shark.AndroidResourceIdNames: void access$setHolderField$cp(shark.AndroidResourceIdNames)
com.airbnb.lottie.animation.keyframe.ShapeKeyframeAnimation: ShapeKeyframeAnimation(java.util.List)
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: boolean hasNext()
androidx.constraintlayout.widget.Barrier: void setDpMargin(int)
com.airbnb.lottie.LottieCompositionFactory$9: java.lang.Object call()
com.airbnb.lottie.model.DocumentData: DocumentData(java.lang.String,java.lang.String,float,com.airbnb.lottie.model.DocumentData$Justification,int,float,float,int,int,float,boolean)
com.airbnb.lottie.model.layer.Layer: com.airbnb.lottie.model.animatable.AnimatableTransform getTransform()
androidx.appcompat.widget.SearchView: int getPreferredWidth()
com.airbnb.lottie.model.content.PolystarShape$Type: <clinit>()
net.sqlcipher.database.SQLiteCursor: net.sqlcipher.database.SQLiteQuery access$600(net.sqlcipher.database.SQLiteCursor)
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
com.airbnb.lottie.LottieAnimationView$SavedState: void writeToParcel(android.os.Parcel,int)
com.airbnb.lottie.value.LottieRelativeIntegerValueCallback: java.lang.Integer getValue(com.airbnb.lottie.value.LottieFrameInfo)
com.airbnb.lottie.animation.content.PathContent: android.graphics.Path getPath()
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
net.sqlcipher.DatabaseUtils: void cursorLongToContentValuesIfPresent(net.sqlcipher.Cursor,android.content.ContentValues,java.lang.String)
androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy: ConstraintProxy$NetworkStateProxy()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.airbnb.lottie.animation.keyframe.ShapeKeyframeAnimation: android.graphics.Path getValue(com.airbnb.lottie.value.Keyframe,float)
androidx.viewpager.widget.ViewPager: int getClientWidth()
com.airbnb.lottie.LottieDrawable: void setImagesAssetsFolder(java.lang.String)
leakcanary.KeyedWeakReference: long getWatchUptimeMillis()
net.sqlcipher.database.SQLiteDatabase$3: SQLiteDatabase$3(net.sqlcipher.database.SQLiteDatabase,byte[],char[])
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.airbnb.lottie.model.KeyPath: com.airbnb.lottie.model.KeyPathElement getResolvedElement()
net.sqlcipher.RowAllocationException: RowAllocationException(java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.android.material.bottomnavigation.BottomNavigationView: void setSelectedItemId(int)
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
com.dimas.made1.utils.DataState: com.dimas.made1.utils.DataState[] values()
com.airbnb.lottie.LottieAnimationView: void setCacheComposition(boolean)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$EmptyKeyframeWrapper: com.airbnb.lottie.value.Keyframe getCurrentKeyframe()
com.dimas.made1.favorite.FavoriteFragment: FavoriteFragment()
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
com.google.android.material.bottomnavigation.BottomNavigationMenuView: int getItemIconSize()
com.airbnb.lottie.network.NetworkFetcher: com.airbnb.lottie.LottieComposition fetchFromCache()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setEnsureMinTouchTargetSize(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation getOpacity()
leakcanary.internal.InternalLeakCanary: boolean isInstantApp()
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
net.sqlcipher.database.SQLiteDatabase: long setMaximumSize(long)
net.sqlcipher.database.SQLiteDatabase: int getMaxSqlCacheSize()
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation: float getFloatValue()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.airbnb.lottie.utils.Utils: boolean hasZeroScaleAxis(android.graphics.Matrix)
com.airbnb.lottie.parser.PathKeyframeParser: PathKeyframeParser()
com.airbnb.lottie.LottieCompositionFactory: java.util.Map access$000()
com.airbnb.lottie.parser.JsonUtils: JsonUtils()
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
leakcanary.internal.AndroidHeapDumper: void cancelToast(android.widget.Toast)
com.airbnb.lottie.LottieAnimationView: void setAnimationFromUrl(java.lang.String,java.lang.String)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setItemTextAppearanceActive(int)
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
com.airbnb.lottie.utils.Logger: void debug(java.lang.String)
net.sqlcipher.DatabaseUtils: void cursorShortToContentValuesIfPresent(net.sqlcipher.Cursor,android.content.ContentValues,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
com.airbnb.lottie.animation.content.RepeaterContent: void getBounds(android.graphics.RectF,android.graphics.Matrix,boolean)
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat valueOf(java.lang.String)
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int nextInt()
com.airbnb.lottie.LottieDrawable: boolean setComposition(com.airbnb.lottie.LottieComposition)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.airbnb.lottie.LottieDrawable: boolean hasMasks()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
com.airbnb.lottie.model.layer.BaseLayer: void applyInvertedIntersectMask(android.graphics.Canvas,android.graphics.Matrix,com.airbnb.lottie.model.content.Mask,com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation,com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation)
com.airbnb.lottie.animation.content.DrawingContent: void getBounds(android.graphics.RectF,android.graphics.Matrix,boolean)
com.bumptech.glide.load.ImageHeaderParser$ImageType: boolean hasAlpha()
androidx.navigation.dynamicfeatures.fragment.DynamicNavHostFragment: DynamicNavHostFragment()
com.airbnb.lottie.animation.content.BaseStrokeContent: void applyDashPatternIfNeeded(android.graphics.Matrix)
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
com.airbnb.lottie.utils.BaseLottieAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)
com.airbnb.lottie.network.NetworkCache: java.io.File getCachedFile(java.lang.String)
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
com.google.gson.internal.bind.TypeAdapters$28: TypeAdapters$28()
com.airbnb.lottie.parser.FontCharacterParser: <clinit>()
com.airbnb.lottie.LottieAnimationView: void reverseAnimationSpeed()
com.google.android.material.textfield.TextInputLayout: void setPrefixTextColor(android.content.res.ColorStateList)
androidx.constraintlayout.widget.Barrier: void setMargin(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationY(float)
com.airbnb.lottie.PerformanceTracker$FrameListener: void onFrameRendered(float)
com.airbnb.lottie.LottieAnimationView: void enableMergePathsForKitKatAndAbove(boolean)
net.sqlcipher.database.SQLiteDatabase: SQLiteDatabase(java.lang.String,byte[],net.sqlcipher.database.SQLiteDatabase$CursorFactory,int,net.sqlcipher.database.SQLiteDatabaseHook)
com.google.android.material.button.MaterialButton: int getTextWidth()
com.airbnb.lottie.animation.LPaint: LPaint(android.graphics.PorterDuff$Mode)
net.sqlcipher.AbstractCursor: java.lang.String[] getColumnNames()
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: java.util.Set keySet()
androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(android.graphics.drawable.Drawable)
com.airbnb.lottie.animation.content.ShapeContent: java.lang.String getName()
com.airbnb.lottie.model.layer.BaseLayer: void applyInvertedSubtractMask(android.graphics.Canvas,android.graphics.Matrix,com.airbnb.lottie.model.content.Mask,com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation,com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation)
net.sqlcipher.AbstractCursor: boolean isLast()
com.airbnb.lottie.parser.AnimatableTransformParser: boolean isSkewAngleIdentity(com.airbnb.lottie.model.animatable.AnimatableFloatValue)
leakcanary.internal.InternalLeakCanary: InternalLeakCanary()
com.airbnb.lottie.LottieAnimationView: void disableExtraScaleModeInFitXY()
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status valueOf(java.lang.String)
com.airbnb.lottie.parser.moshi.JsonReader: boolean nextBoolean()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
net.sqlcipher.AbstractCursor: boolean isNull(int)
com.airbnb.lottie.animation.content.MergePathsContent: java.lang.String getName()
com.google.android.material.chip.Chip: void setMaxLines(int)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
com.airbnb.lottie.utils.LogcatLogger: LogcatLogger()
com.airbnb.lottie.parser.LayerParser: LayerParser()
com.google.android.material.appbar.MaterialToolbar: void setNavigationIconTint(int)
com.airbnb.lottie.model.layer.TextLayer: void drawGlyphTextLine(java.lang.String,com.airbnb.lottie.model.DocumentData,android.graphics.Matrix,com.airbnb.lottie.model.Font,android.graphics.Canvas,float,float)
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieTask fromUrl(android.content.Context,java.lang.String)
com.google.gson.internal.bind.TypeAdapters$17: TypeAdapters$17()
net.sqlcipher.database.SQLiteAbortException: SQLiteAbortException()
com.google.android.material.bottomnavigation.BottomNavigationView: int getMaxItemCount()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getExtendMotionSpec()
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
com.airbnb.lottie.model.layer.ShapeLayer: ShapeLayer(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.Layer)
com.google.gson.internal.bind.TypeAdapters$20: TypeAdapters$20()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: BaseTransientBottomBar$SnackbarBaseLayout(android.content.Context,android.util.AttributeSet)
net.sqlcipher.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShadowPaddingEnabled(boolean)
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
com.airbnb.lottie.LottieDrawable: void setFrame(int)
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String)
com.airbnb.lottie.animation.keyframe.PathKeyframe: PathKeyframe(com.airbnb.lottie.LottieComposition,com.airbnb.lottie.value.Keyframe)
net.sqlcipher.database.SQLiteContentHelper: SQLiteContentHelper()
com.airbnb.lottie.model.animatable.AnimatableFloatValue: java.util.List getKeyframes()
com.google.gson.internal.bind.TypeAdapters$14: TypeAdapters$14()
com.airbnb.lottie.animation.content.GradientStrokeContent: GradientStrokeContent(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer,com.airbnb.lottie.model.content.GradientStroke)
com.airbnb.lottie.LottieDrawable: void stop()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
net.sqlcipher.database.SQLiteDatabase: androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String)
net.sqlcipher.AbstractWindowedCursor: AbstractWindowedCursor()
com.airbnb.lottie.parser.ColorParser: ColorParser()
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
com.google.android.material.bottomappbar.BottomAppBar: android.content.res.ColorStateList getBackgroundTint()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedPadding()
com.airbnb.lottie.value.LottieRelativeFloatValueCallback: java.lang.Object getValue(com.airbnb.lottie.value.LottieFrameInfo)
androidx.core.app.ComponentActivity: ComponentActivity()
com.airbnb.lottie.model.LottieCompositionCache: LottieCompositionCache()
com.airbnb.lottie.utils.LottieValueAnimator: float getSpeed()
net.sqlcipher.database.SQLiteCursor: java.lang.String[] getColumnNames()
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
com.airbnb.lottie.model.animatable.AnimatableScaleValue: AnimatableScaleValue(com.airbnb.lottie.value.ScaleXY)
com.airbnb.lottie.network.NetworkCache: NetworkCache(android.content.Context)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getCustomSize()
com.google.android.material.card.MaterialCardView: int getStrokeWidth()
net.sqlcipher.database.SQLiteDatabaseHook: void preKey(net.sqlcipher.database.SQLiteDatabase)
net.sqlcipher.database.SQLiteDatabase: void resetCompiledSqlCache()
com.airbnb.lottie.parser.ShapeDataParser: <clinit>()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: int getLabelVisibilityMode()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
net.sqlcipher.IBulkCursor: void deactivate()
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
net.sqlcipher.CursorWindow$1: CursorWindow$1()
com.airbnb.lottie.model.layer.BaseLayer: void applyInvertedAddMask(android.graphics.Canvas,android.graphics.Matrix,com.airbnb.lottie.model.content.Mask,com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation,com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation)
com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatableFloatValue getSkew()
com.airbnb.lottie.manager.FontAssetManager: void setDefaultFontFileExtension(java.lang.String)
com.airbnb.lottie.LottieDrawable: float getSpeed()
com.airbnb.lottie.utils.LottieValueAnimator: void reverseAnimationSpeed()
com.airbnb.lottie.animation.keyframe.IntegerKeyframeAnimation: int getIntValue(com.airbnb.lottie.value.Keyframe,float)
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
com.airbnb.lottie.model.content.ShapeGroup: java.lang.String getName()
net.sqlcipher.AbstractWindowedCursor: android.database.CursorWindow getWindow()
androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)
com.google.android.material.textfield.TextInputLayout: void setSuffixText(java.lang.CharSequence)
com.google.android.material.tabs.TabLayout: android.graphics.drawable.Drawable getTabSelectedIndicator()
com.airbnb.lottie.LottieDrawable: void setMinFrame(java.lang.String)
com.airbnb.lottie.model.content.ShapeStroke$LineCapType: com.airbnb.lottie.model.content.ShapeStroke$LineCapType[] values()
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: void rotateRight(com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostResumed(android.app.Activity)
androidx.room.MultiInstanceInvalidationService: MultiInstanceInvalidationService()
com.google.android.material.bottomnavigation.BottomNavigationView: android.graphics.drawable.Drawable getItemBackground()
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
shark.LeakTrace$GcRootType: shark.LeakTrace$GcRootType[] values()
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
com.airbnb.lottie.parser.CircleShapeParser: CircleShapeParser()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: void setIsDiscrete()
com.google.android.material.button.MaterialButtonToggleGroup: void setSelectionRequired(boolean)
com.google.android.material.bottomnavigation.BottomNavigationView: int getItemBackgroundResource()
com.airbnb.lottie.animation.content.RepeaterContent: void onValueChanged()
com.airbnb.lottie.animation.keyframe.ShapeKeyframeAnimation: java.lang.Object getValue(com.airbnb.lottie.value.Keyframe,float)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
com.airbnb.lottie.model.content.MergePaths$MergePathsMode: com.airbnb.lottie.model.content.MergePaths$MergePathsMode[] values()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getRippleColor()
net.sqlcipher.database.SQLiteClosable: void releaseReference()
com.airbnb.lottie.value.LottieRelativePointValueCallback: LottieRelativePointValueCallback()
com.google.android.material.chip.ChipGroup: void setSingleSelection(boolean)
com.airbnb.lottie.LottieComposition$Factory: com.airbnb.lottie.Cancellable fromJsonString(java.lang.String,com.airbnb.lottie.OnCompositionLoadedListener)
com.airbnb.lottie.model.animatable.AnimatableSplitDimensionPathValue: java.util.List getKeyframes()
com.airbnb.lottie.animation.content.GradientFillContent: void onValueChanged()
com.google.android.material.card.MaterialCardView: void setStrokeWidth(int)
com.airbnb.lottie.animation.content.BaseStrokeContent$PathGroup: BaseStrokeContent$PathGroup(com.airbnb.lottie.animation.content.TrimPathContent,com.airbnb.lottie.animation.content.BaseStrokeContent$1)
com.airbnb.lottie.LottieDrawable: void setPerformanceTrackingEnabled(boolean)
net.sqlcipher.DatabaseUtils: char[] encodeHex(byte[],char[])
com.airbnb.lottie.animation.keyframe.SplitDimensionPathKeyframeAnimation: android.graphics.PointF getValue()
com.airbnb.lottie.LottieComposition: void setHasDashPattern(boolean)
com.airbnb.lottie.parser.LottieCompositionMoshiParser: void parseChars(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition,androidx.collection.SparseArrayCompat)
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
net.sqlcipher.database.SQLiteDatabase: void beginTransactionNonExclusive()
net.sqlcipher.database.SQLiteDatabase: void setLocale(java.util.Locale)
com.airbnb.lottie.LottieDrawable$10: void run(com.airbnb.lottie.LottieComposition)
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
com.bumptech.glide.load.PreferredColorSpace: com.bumptech.glide.load.PreferredColorSpace valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
net.sqlcipher.DatabaseUtils$InsertHelper: void close()
com.airbnb.lottie.parser.ShapePathParser: <clinit>()
com.airbnb.lottie.utils.LottieValueAnimator: void setSpeed(float)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
net.sqlcipher.AbstractCursor: boolean supportsUpdates()
com.airbnb.lottie.LottieDrawable$8: void run(com.airbnb.lottie.LottieComposition)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: boolean containsKey(java.lang.Object)
net.sqlcipher.database.SQLiteDebug$PagerStats: SQLiteDebug$PagerStats()
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node: java.lang.Object getKey()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
net.sqlcipher.database.SQLiteDatabase: void setICURoot(java.lang.String)
com.google.android.material.bottomnavigation.BottomNavigationView: BottomNavigationView(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SQLiteProgram: void native_bind_long(int,long)
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
androidx.activity.ComponentActivity: ComponentActivity()
leakcanary.internal.AndroidHeapDumper: void showToast(leakcanary.internal.FutureResult)
com.airbnb.lottie.LottieDrawable$16: void run(com.airbnb.lottie.LottieComposition)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
net.sqlcipher.database.SQLiteProgram: void close()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior()
com.airbnb.lottie.animation.content.DrawingContent: void draw(android.graphics.Canvas,android.graphics.Matrix,int)
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.airbnb.lottie.animation.content.BaseStrokeContent: void resolveKeyPath(com.airbnb.lottie.model.KeyPath,int,java.util.List,com.airbnb.lottie.model.KeyPath)
com.airbnb.lottie.value.ScaleXY: boolean equals(float,float)
com.airbnb.lottie.animation.content.EllipseContent: android.graphics.Path getPath()
com.airbnb.lottie.animation.content.TrimPathContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation getStart()
com.airbnb.lottie.parser.MaskParser: MaskParser()
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
com.google.android.play.core.common.PlayCoreDialogWrapperActivity: PlayCoreDialogWrapperActivity()
com.airbnb.lottie.model.layer.BaseLayer: com.airbnb.lottie.model.layer.Layer getLayerModel()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
com.airbnb.lottie.LottieDrawable: void clearComposition()
com.airbnb.lottie.model.animatable.AnimatableIntegerValue: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation createAnimation()
com.airbnb.lottie.parser.AnimatableValueParser: java.util.List parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition,com.airbnb.lottie.parser.ValueParser)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
com.airbnb.lottie.parser.ContentModelParser: <clinit>()
com.airbnb.lottie.LottieAnimationView: void removeAnimatorListener(android.animation.Animator$AnimatorListener)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$LinkedTreeMapIterator: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node nextNode()
com.airbnb.lottie.PerformanceTracker: void setEnabled(boolean)
net.sqlcipher.database.SQLiteDatabase: java.util.ArrayList getDbStats()
com.airbnb.lottie.model.animatable.AnimatableSplitDimensionPathValue: boolean isStatic()
com.airbnb.lottie.animation.content.GradientFillContent: int getGradientHash()
net.sqlcipher.CursorWindow: void close()
net.sqlcipher.database.SQLiteCompiledSql: void native_compile(java.lang.String)
net.sqlcipher.database.SQLiteOpenHelper: void onUpgrade(net.sqlcipher.database.SQLiteDatabase,int,int)
net.sqlcipher.DatabaseUtils: void cursorStringToContentValues(net.sqlcipher.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)
com.airbnb.lottie.LottieTask: com.airbnb.lottie.LottieTask removeFailureListener(com.airbnb.lottie.LottieListener)
net.sqlcipher.BulkCursorProxy: android.os.Bundle getExtras()
net.sqlcipher.database.SQLiteDatabase: int getVersion()
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
com.google.android.material.tabs.TabLayout: void setTabsFromPagerAdapter(androidx.viewpager.widget.PagerAdapter)
com.airbnb.lottie.LottieAnimationView: void setFailureListener(com.airbnb.lottie.LottieListener)
com.airbnb.lottie.LottieAnimationView$SavedState: LottieAnimationView$SavedState(android.os.Parcel)
net.sqlcipher.database.SQLiteProgram: long getUniqueId()
com.airbnb.lottie.model.content.ShapeStroke: boolean isHidden()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
leakcanary.internal.InternalLeakCanary: android.app.Activity getResumedActivity()
androidx.viewpager2.widget.ViewPager2: java.lang.CharSequence getAccessibilityClassName()
com.airbnb.lottie.model.content.MergePaths$MergePathsMode: com.airbnb.lottie.model.content.MergePaths$MergePathsMode forId(int)
net.sqlcipher.DatabaseUtils: void cursorLongToContentValues(net.sqlcipher.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapperImpl: boolean isValueChanged(float)
androidx.viewpager2.widget.ViewPager2: ViewPager2(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.manager.FontAssetManager: android.graphics.Typeface typefaceForStyle(android.graphics.Typeface,java.lang.String)
com.airbnb.lottie.animation.keyframe.ValueCallbackKeyframeAnimation: java.lang.Object getValue()
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.value.LottieRelativePointValueCallback: android.graphics.PointF getOffset(com.airbnb.lottie.value.LottieFrameInfo)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundResource(int)
leakcanary.internal.InternalLeakCanary: leakcanary.internal.HeapDumpTrigger access$getHeapDumpTrigger$p(leakcanary.internal.InternalLeakCanary)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
com.airbnb.lottie.LottieCompositionFactory$6: java.lang.Object call()
net.sqlcipher.DatabaseUtils: void cursorDoubleToCursorValues(net.sqlcipher.Cursor,java.lang.String,android.content.ContentValues)
com.google.android.material.appbar.AppBarLayout: int getPendingAction()
net.sqlcipher.MatrixCursor: double getDouble(int)
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
com.airbnb.lottie.parser.PathParser: <clinit>()
com.airbnb.lottie.model.content.ShapeGroup: java.lang.String toString()
com.airbnb.lottie.parser.GradientColorParser: GradientColorParser(int)
net.sqlcipher.database.SqliteWrapper: net.sqlcipher.Cursor query(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com.airbnb.lottie.LottieCompositionFactory: <clinit>()
com.airbnb.lottie.LottieTask: com.airbnb.lottie.LottieTask removeListener(com.airbnb.lottie.LottieListener)
com.airbnb.lottie.model.layer.BaseLayer: void resolveKeyPath(com.airbnb.lottie.model.KeyPath,int,java.util.List,com.airbnb.lottie.model.KeyPath)
net.sqlcipher.database.SQLiteQueryBuilder: net.sqlcipher.Cursor query(net.sqlcipher.database.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
com.google.android.material.bottomnavigation.BottomNavigationView: int getItemTextAppearanceActive()
androidx.constraintlayout.helper.widget.Flow: void setHorizontalAlign(int)
com.airbnb.lottie.value.LottieInterpolatedFloatValue: LottieInterpolatedFloatValue(java.lang.Float,java.lang.Float,android.view.animation.Interpolator)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieTask fromJson(org.json.JSONObject,java.lang.String)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
com.google.android.material.bottomappbar.BottomAppBar: void setElevation(float)
com.airbnb.lottie.PerformanceTracker: void recordRenderTime(java.lang.String,float)
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
com.dimas.made1.detail.DetailFragment: DetailFragment()
com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.animatable.AnimatablePointValue getStartPoint()
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
net.sqlcipher.DatabaseUtils$InsertHelper: long execute()
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.airbnb.lottie.animation.keyframe.ValueCallbackKeyframeAnimation: ValueCallbackKeyframeAnimation(com.airbnb.lottie.value.LottieValueCallback,java.lang.Object)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
com.airbnb.lottie.LottieAnimationView: void buildDrawingCache(boolean)
com.airbnb.lottie.LottieDrawable: void removeAnimatorUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)
com.airbnb.lottie.animation.content.BaseStrokeContent$PathGroup: BaseStrokeContent$PathGroup(com.airbnb.lottie.animation.content.TrimPathContent)
com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)
com.airbnb.lottie.LottieComposition: void addWarning(java.lang.String)
androidx.work.impl.foreground.SystemForegroundService: SystemForegroundService()
com.airbnb.lottie.LottieCompositionFactory$8: com.airbnb.lottie.LottieResult call()
com.airbnb.lottie.model.content.ShapeFill: android.graphics.Path$FillType getFillType()
com.airbnb.lottie.model.animatable.AnimatableShapeValue: AnimatableShapeValue(java.util.List)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getPrefixTextView()
net.sqlcipher.AbstractCursor: boolean requery()
com.airbnb.lottie.value.LottieValueCallback: LottieValueCallback()
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
com.bumptech.glide.Priority: com.bumptech.glide.Priority valueOf(java.lang.String)
net.sqlcipher.AbstractCursor: void registerContentObserver(android.database.ContentObserver)
com.airbnb.lottie.utils.Utils: <clinit>()
net.sqlcipher.database.SQLiteQuery: SQLiteQuery(net.sqlcipher.database.SQLiteDatabase,java.lang.String,int,java.lang.Object[])
com.airbnb.lottie.utils.LogcatLogger: void debug(java.lang.String,java.lang.Throwable)
com.google.android.material.card.MaterialCardView: void setStrokeColor(int)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
net.sqlcipher.database.SQLiteDatabase: boolean isReadOnly()
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
com.airbnb.lottie.animation.content.RectangleContent: void addValueCallback(java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)
leakcanary.internal.InternalLeakCanary$FormFactor: leakcanary.internal.InternalLeakCanary$FormFactor valueOf(java.lang.String)
com.airbnb.lottie.model.animatable.AnimatableGradientColorValue: AnimatableGradientColorValue(java.util.List)
com.airbnb.lottie.animation.content.ContentGroup: android.graphics.Path getPath()
net.sqlcipher.database.SQLiteDatabase: boolean isDbLockedByOtherThreads()
com.airbnb.lottie.parser.PointFParser: android.graphics.PointF parse(com.airbnb.lottie.parser.moshi.JsonReader,float)
com.airbnb.lottie.LottieCompositionFactory$1: LottieCompositionFactory$1(android.content.Context,java.lang.String,java.lang.String)
com.airbnb.lottie.LottieCompositionFactory: void setMaxCacheSize(int)
com.airbnb.lottie.value.LottieInterpolatedIntegerValue: java.lang.Object interpolateValue(java.lang.Object,java.lang.Object,float)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
com.airbnb.lottie.animation.keyframe.PathKeyframeAnimation: android.graphics.PointF getValue(com.airbnb.lottie.value.Keyframe,float)
net.sqlcipher.database.SQLiteException: SQLiteException(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
com.google.android.material.chip.Chip: float getIconStartPadding()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
net.sqlcipher.BulkCursorToCursorAdaptor: android.os.Bundle respond(android.os.Bundle)
com.airbnb.lottie.LottieAnimationView$3: void onResult(java.lang.Object)
net.sqlcipher.database.SQLiteCursor: int access$502(net.sqlcipher.database.SQLiteCursor,int)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
androidx.constraintlayout.widget.VirtualLayout: void setElevation(float)
com.airbnb.lottie.LottieComposition$Factory$ListenerAdapter: LottieComposition$Factory$ListenerAdapter(com.airbnb.lottie.OnCompositionLoadedListener,com.airbnb.lottie.LottieComposition$1)
net.sqlcipher.database.SQLiteQuery: void bindDouble(int,double)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable()
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
net.sqlcipher.CursorWindow: boolean isBlob(int,int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
net.sqlcipher.CursorWindow: boolean allocRow_native()
com.airbnb.lottie.TextDelegate: TextDelegate(com.airbnb.lottie.LottieDrawable)
com.airbnb.lottie.LottieImageAsset: int getWidth()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShrinkMotionSpec()
com.airbnb.lottie.LottieDrawable$16: LottieDrawable$16(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.KeyPath,java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)
com.airbnb.lottie.RenderMode: com.airbnb.lottie.RenderMode[] values()
com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatableFloatValue getEndOpacity()
com.airbnb.lottie.LottieTask: void notifyFailureListeners(java.lang.Throwable)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
net.sqlcipher.AbstractCursor: boolean isFirst()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.parser.LottieCompositionMoshiParser: void parseAssets(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition,java.util.Map,java.util.Map)
net.sqlcipher.DefaultDatabaseErrorHandler: void onCorruption(net.sqlcipher.database.SQLiteDatabase)
net.sqlcipher.database.SupportHelper$1: SupportHelper$1(net.sqlcipher.database.SupportHelper,android.content.Context,java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory,int,net.sqlcipher.database.SQLiteDatabaseHook,androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration)
com.airbnb.lottie.parser.KeyframeParser: java.lang.ref.WeakReference getInterpolator(int)
net.sqlcipher.database.SQLiteProgram: java.lang.String getSqlString()
net.sqlcipher.AbstractCursor: boolean commitUpdates(java.util.Map)
net.sqlcipher.DatabaseErrorHandler: void onCorruption(net.sqlcipher.database.SQLiteDatabase)
shark.AndroidResourceIdNames: shark.AndroidResourceIdNames access$getHolderField$cp()
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: boolean isLiteral(int)
com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: void setProgress(float)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
com.airbnb.lottie.LottieDrawable: void setScale(float)
com.airbnb.lottie.LottieDrawable: void addAnimatorListener(android.animation.Animator$AnimatorListener)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)
com.airbnb.lottie.parser.KeyframeParser: void putInterpolator(int,java.lang.ref.WeakReference)
com.airbnb.lottie.model.content.ContentModel: com.airbnb.lottie.animation.content.Content toContent(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer)
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieResult fromZipStreamSync(java.util.zip.ZipInputStream,java.lang.String)
net.sqlcipher.database.SQLiteOpenHelper: net.sqlcipher.database.SQLiteDatabase getWritableDatabase(byte[])
com.google.android.material.tabs.TabLayout: void setSelectedTabIndicatorColor(int)
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior()
com.airbnb.lottie.parser.ValueParser: java.lang.Object parse(com.airbnb.lottie.parser.moshi.JsonReader,float)
net.sqlcipher.IContentObserver$Stub$Proxy: android.os.IBinder asBinder()
net.sqlcipher.database.SQLiteCursor: boolean deleteRow()
com.airbnb.lottie.model.layer.NullLayer: void drawLayer(android.graphics.Canvas,android.graphics.Matrix,int)
com.airbnb.lottie.LottieCompositionFactory$11: void onResult(java.lang.Throwable)
com.airbnb.lottie.parser.JsonUtils: float valueFromObject(com.airbnb.lottie.parser.moshi.JsonReader)
net.sqlcipher.database.SQLiteDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
com.airbnb.lottie.LottieAnimationView: void setRenderMode(com.airbnb.lottie.RenderMode)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
com.airbnb.lottie.LottieComposition: java.lang.String toString()
com.airbnb.lottie.model.layer.TextLayer: java.util.List getTextLines(java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
net.sqlcipher.database.SQLiteQueryBuilder: java.lang.String buildQuery(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
net.sqlcipher.AbstractCursor: android.os.Bundle getExtras()
com.airbnb.lottie.model.content.Mask$MaskMode: <clinit>()
com.airbnb.lottie.model.MutablePair: boolean equals(java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()
androidx.viewpager.widget.ViewPager: void setCurrentItem(int)
com.airbnb.lottie.LottieDrawable$ColorFilterData: int hashCode()
com.airbnb.lottie.model.content.PolystarShape$Type: PolystarShape$Type(java.lang.String,int,int)
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter getAdapter()
com.airbnb.lottie.LottieDrawable: com.airbnb.lottie.manager.FontAssetManager getFontAssetManager()
com.airbnb.lottie.LottieDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)
leakcanary.internal.AndroidSupportFragmentDestroyWatcher: void invoke(android.app.Activity)
com.airbnb.lottie.model.content.RectangleShape: RectangleShape(java.lang.String,com.airbnb.lottie.model.animatable.AnimatableValue,com.airbnb.lottie.model.animatable.AnimatablePointValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,boolean)
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
com.airbnb.lottie.TextDelegate: void setCacheText(boolean)
net.sqlcipher.database.SQLiteCursorDriver: net.sqlcipher.Cursor query(net.sqlcipher.database.SQLiteDatabase$CursorFactory,java.lang.String[])
com.airbnb.lottie.model.layer.TextLayer$1: TextLayer$1(com.airbnb.lottie.model.layer.TextLayer,int)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy: ConstraintProxy$BatteryChargingProxy()
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.google.android.material.bottomnavigation.BottomNavigationView: int getSelectedItemId()
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
com.airbnb.lottie.network.FileExtension: com.airbnb.lottie.network.FileExtension forFile(java.lang.String)
androidx.viewpager2.widget.ViewPager2: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
com.airbnb.lottie.model.KeyPath: boolean fullyResolvesTo(java.lang.String,int)
com.airbnb.lottie.LottieImageAsset: java.lang.String getId()
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: void clear()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.airbnb.lottie.LottieDrawable: com.airbnb.lottie.utils.LottieValueAnimator access$100(com.airbnb.lottie.LottieDrawable)
com.google.android.material.card.MaterialCardView: void setDragged(boolean)
net.sqlcipher.database.SQLiteStatement: void native_execute()
androidx.cardview.widget.CardView: void setCardElevation(float)
com.airbnb.lottie.model.KeyPath: boolean propagateToChildren(java.lang.String,int)
com.airbnb.lottie.parser.RectangleShapeParser: <clinit>()
com.airbnb.lottie.animation.content.RepeaterContent: RepeaterContent(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer,com.airbnb.lottie.model.content.Repeater)
com.google.android.material.button.MaterialButton: void setElevation(float)
shark.PrimitiveType: shark.PrimitiveType[] values()
com.airbnb.lottie.parser.AnimatableValueParser: com.airbnb.lottie.model.animatable.AnimatableFloatValue parseFloat(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition,boolean)
com.airbnb.lottie.LottieAnimationView: void addAnimatorUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.airbnb.lottie.value.LottieValueCallback: LottieValueCallback(java.lang.Object)
com.airbnb.lottie.LottieComposition$Factory: com.airbnb.lottie.LottieComposition fromJsonSync(java.lang.String)
androidx.constraintlayout.widget.Placeholder: android.view.View getContent()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
androidx.viewpager.widget.ViewPager: int getOffscreenPageLimit()
com.google.android.material.chip.ChipGroup: void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
com.airbnb.lottie.animation.keyframe.SplitDimensionPathKeyframeAnimation: java.lang.Object getValue(com.airbnb.lottie.value.Keyframe,float)
com.airbnb.lottie.LottieDrawable: boolean isRunning()
com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setItemIconSize(int)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
com.airbnb.lottie.utils.Logger: void debug(java.lang.String,java.lang.Throwable)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.airbnb.lottie.network.NetworkFetcher: com.airbnb.lottie.LottieResult fetchSync()
com.airbnb.lottie.value.LottieRelativeFloatValueCallback: java.lang.Float getOffset(com.airbnb.lottie.value.LottieFrameInfo)
net.sqlcipher.BuildConfig: BuildConfig()
com.google.android.material.card.MaterialCardView: void setCheckedIcon(android.graphics.drawable.Drawable)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
com.airbnb.lottie.model.animatable.AnimatableTextFrame: java.lang.String toString()
com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatableScaleValue getScale()
com.google.android.material.tabs.TabLayout: void setOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener)
leakcanary.internal.NotificationReceiver$Action: leakcanary.internal.NotificationReceiver$Action valueOf(java.lang.String)
net.sqlcipher.AbstractCursor: boolean onMove(int,int)
com.airbnb.lottie.model.content.RectangleShape: com.airbnb.lottie.model.animatable.AnimatableFloatValue getCornerRadius()
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapper: com.airbnb.lottie.value.Keyframe getCurrentKeyframe()
com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable getStatusBarForeground()
net.sqlcipher.database.SupportHelper: void setWriteAheadLoggingEnabled(boolean)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$AvlBuilder: void add(com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node)
com.airbnb.lottie.model.content.GradientStroke: GradientStroke(java.lang.String,com.airbnb.lottie.model.content.GradientType,com.airbnb.lottie.model.animatable.AnimatableGradientColorValue,com.airbnb.lottie.model.animatable.AnimatableIntegerValue,com.airbnb.lottie.model.animatable.AnimatablePointValue,com.airbnb.lottie.model.animatable.AnimatablePointValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.content.ShapeStroke$LineCapType,com.airbnb.lottie.model.content.ShapeStroke$LineJoinType,float,java.util.List,com.airbnb.lottie.model.animatable.AnimatableFloatValue,boolean)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$EntrySet$1: LinkedHashTreeMap$EntrySet$1(com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$EntrySet)
com.google.android.material.internal.FlowLayout: void setItemSpacing(int)
com.google.android.material.internal.ForegroundLinearLayout: ForegroundLinearLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
net.sqlcipher.AbstractCursor: android.os.Bundle respond(android.os.Bundle)
com.airbnb.lottie.model.content.RectangleShape: com.airbnb.lottie.model.animatable.AnimatableValue getPosition()
com.airbnb.lottie.LottieDrawable: void setMinFrame(int)
com.airbnb.lottie.parser.AnimatablePathValueParser: com.airbnb.lottie.model.animatable.AnimatablePathValue parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
net.sqlcipher.DatabaseUtils$InsertHelper: long replace(android.content.ContentValues)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(int)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
net.sqlcipher.database.SQLiteQueryBuilder: void appendClauseEscapeClause(java.lang.StringBuilder,java.lang.String,java.lang.String)
net.sqlcipher.BulkCursorProxy: android.os.Bundle respond(android.os.Bundle)
net.sqlcipher.database.SQLiteProgram: void onAllReferencesReleasedFromContainer()
com.airbnb.lottie.utils.LottieValueAnimator: void setMinAndMaxFrames(float,float)
com.google.android.material.bottomappbar.BottomAppBar: void setTitle(java.lang.CharSequence)
net.sqlcipher.database.SupportHelper: java.lang.String getDatabaseName()
com.google.android.material.appbar.AppBarLayout: void setOrientation(int)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
net.sqlcipher.BulkCursorProxy: boolean deleteRow(int)
net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType: net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType valueOf(java.lang.String)
net.sqlcipher.database.SQLiteCompiledSql: void release()
com.airbnb.lottie.model.layer.CompositionLayer: void setProgress(float)
net.sqlcipher.database.SQLiteDatabase: void endTransaction()
com.airbnb.lottie.model.content.ShapeGroup: java.util.List getItems()
com.airbnb.lottie.model.animatable.AnimatableTransform: AnimatableTransform(com.airbnb.lottie.model.animatable.AnimatablePathValue,com.airbnb.lottie.model.animatable.AnimatableValue,com.airbnb.lottie.model.animatable.AnimatableScaleValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableIntegerValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue)
net.sqlcipher.IContentObserver$Stub: IContentObserver$Stub()
com.google.android.material.bottomappbar.BottomAppBar: int getBottomInset()
net.sqlcipher.database.SQLiteProgram: void onAllReferencesReleased()
androidx.work.WorkInfo$State: androidx.work.WorkInfo$State valueOf(java.lang.String)
com.airbnb.lottie.LottieCompositionFactory$7: LottieCompositionFactory$7(com.airbnb.lottie.parser.moshi.JsonReader,java.lang.String)
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.google.android.material.tabs.TabLayout: void setTabIconTintResource(int)
androidx.work.impl.workers.ConstraintTrackingWorker: ConstraintTrackingWorker(android.content.Context,androidx.work.WorkerParameters)
com.airbnb.lottie.LottieDrawable: void removeAllAnimatorListeners()
shark.LeakTraceObject$ObjectType: shark.LeakTraceObject$ObjectType[] values()
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
androidx.constraintlayout.helper.widget.Flow: void setPaddingRight(int)
com.airbnb.lottie.LottieDrawable: android.graphics.Typeface getTypeface(java.lang.String,java.lang.String)
com.google.android.material.chip.Chip: void setChipTextResource(int)
com.google.android.material.tabs.TabLayout: int getTabMaxWidth()
leakcanary.internal.AndroidHeapDumper: android.content.Context access$getContext$p(leakcanary.internal.AndroidHeapDumper)
com.airbnb.lottie.parser.FloatParser: FloatParser()
com.airbnb.lottie.animation.LPaint: LPaint(int)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
net.sqlcipher.AbstractCursor: java.lang.Object getUpdatedField(int)
androidx.work.OverwritingInputMerger: OverwritingInputMerger()
com.airbnb.lottie.animation.keyframe.IntegerKeyframeAnimation: java.lang.Integer getValue(com.airbnb.lottie.value.Keyframe,float)
net.sqlcipher.database.SQLiteOpenHelper: void close()
shark.PrimitiveType: shark.PrimitiveType valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: float getRadius()
com.airbnb.lottie.utils.BaseLottieAnimator: void notifyEnd(boolean)
com.airbnb.lottie.parser.KeyframeParser: KeyframeParser()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatableValue getPosition()
com.airbnb.lottie.LottieCompositionFactory$2: LottieCompositionFactory$2(android.content.Context,java.lang.String,java.lang.String)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$EmptyKeyframeWrapper: float getStartDelayProgress()
com.airbnb.lottie.animation.content.EllipseContent: java.lang.String getName()
net.sqlcipher.DatabaseUtils: void writeExceptionToParcel(android.os.Parcel,java.lang.Exception)
androidx.work.impl.background.systemalarm.ConstraintProxy: ConstraintProxy()
androidx.navigation.fragment.NavHostFragment: NavHostFragment()
net.sqlcipher.database.SqliteWrapper: int delete(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String[])
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
net.sqlcipher.database.SQLiteQueryBuilder: void appendClause(java.lang.StringBuilder,java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.airbnb.lottie.L: void beginSection(java.lang.String)
com.google.android.material.chip.Chip: void setChipIconVisible(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$SingleKeyframeWrapper: boolean isEmpty()
com.airbnb.lottie.LottieAnimationView: void setScale(float)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
leakcanary.internal.InternalLeakCanary: void invoke(android.app.Application)
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory[] values()
net.sqlcipher.database.SupportHelper: androidx.sqlite.db.SupportSQLiteDatabase getReadableDatabase()
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: void replaceInParent(com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node,com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node)
net.sqlcipher.DatabaseUtils$InsertHelper: void prepareForReplace()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.airbnb.lottie.model.Font: java.lang.String getStyle()
net.sqlcipher.MatrixCursor: void addRow(java.util.ArrayList,int)
com.airbnb.lottie.model.animatable.AnimatableTextFrame: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation createAnimation()
net.sqlcipher.DatabaseUtils: java.lang.String dumpCursorToString(net.sqlcipher.Cursor)
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
com.airbnb.lottie.parser.moshi.JsonReader: com.airbnb.lottie.parser.moshi.JsonReader of(okio.BufferedSource)
net.sqlcipher.database.SupportHelper$1: void onCreate(net.sqlcipher.database.SQLiteDatabase)
com.airbnb.lottie.parser.FontCharacterParser: FontCharacterParser()
com.google.gson.internal.bind.TypeAdapters$16: TypeAdapters$16()
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
com.google.android.material.tabs.TabLayout: int getTabMode()
net.sqlcipher.CursorWindow: boolean putNull_native(int,int)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.airbnb.lottie.model.animatable.AnimatableTextFrame: java.util.List getKeyframes()
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
com.airbnb.lottie.utils.LogcatLogger: void warning(java.lang.String,java.lang.Throwable)
com.airbnb.lottie.model.content.ShapeTrimPath: boolean isHidden()
net.sqlcipher.CursorWindow: net.sqlcipher.CursorWindowAllocation getCursorWindowAllocation()
com.airbnb.lottie.utils.Utils: android.graphics.Path createPath(android.graphics.PointF,android.graphics.PointF,android.graphics.PointF,android.graphics.PointF)
androidx.lifecycle.LifecycleService: LifecycleService()
com.airbnb.lottie.LottieAnimationView: void addValueCallback(com.airbnb.lottie.model.KeyPath,java.lang.Object,com.airbnb.lottie.value.SimpleLottieValueCallback)
com.airbnb.lottie.model.layer.BaseLayer: void onValueChanged()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
com.airbnb.lottie.LottieDrawable: void invalidateSelf()
leakcanary.internal.NotificationType: leakcanary.internal.NotificationType[] values()
com.airbnb.lottie.parser.DocumentDataParser: java.lang.Object parse(com.airbnb.lottie.parser.moshi.JsonReader,float)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
com.airbnb.lottie.model.content.GradientColor: GradientColor(float[],int[])
com.airbnb.lottie.model.LottieCompositionCache: void clear()
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
com.google.android.material.chip.Chip: float getIconEndPadding()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZ(float)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
com.airbnb.lottie.parser.moshi.JsonReader$Token: com.airbnb.lottie.parser.moshi.JsonReader$Token valueOf(java.lang.String)
net.sqlcipher.database.SqliteWrapper: SqliteWrapper()
com.airbnb.lottie.animation.content.PolystarContent: void createStarPath()
com.airbnb.lottie.animation.keyframe.ColorKeyframeAnimation: int getIntValue()
com.airbnb.lottie.animation.keyframe.ValueCallbackKeyframeAnimation: void setProgress(float)
androidx.viewpager.widget.ViewPager: void setScrollingCacheEnabled(boolean)
com.airbnb.lottie.TextDelegate: void invalidateText(java.lang.String)
com.airbnb.lottie.parser.AnimatableValueParser: com.airbnb.lottie.model.animatable.AnimatableScaleValue parseScale(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
leakcanary.internal.InternalLeakCanary: void onDumpHeapReceived(boolean)
net.sqlcipher.DefaultCursorWindowAllocation: DefaultCursorWindowAllocation()
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnClickListener(android.view.View$OnClickListener)
net.sqlcipher.database.SQLiteDatabase: boolean inTransaction()
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
com.airbnb.lottie.animation.content.PolystarContent: void setContents(java.util.List,java.util.List)
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
net.sqlcipher.database.SQLiteContentHelper: android.content.res.AssetFileDescriptor getBlobColumnAsAssetFile(net.sqlcipher.database.SQLiteDatabase,java.lang.String,java.lang.String[])
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
net.sqlcipher.database.SQLiteCursor: void queryThreadUnlock()
com.google.android.material.bottomappbar.BottomAppBar: float getCradleVerticalOffset()
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase create(net.sqlcipher.database.SQLiteDatabase$CursorFactory,char[])
net.sqlcipher.database.SQLiteCursor: void access$700(net.sqlcipher.database.SQLiteCursor)
com.google.android.material.chip.Chip: float getTextEndPadding()
com.airbnb.lottie.model.KeyPathElement: void resolveKeyPath(com.airbnb.lottie.model.KeyPath,int,java.util.List,com.airbnb.lottie.model.KeyPath)
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
net.sqlcipher.database.SqliteWrapper: boolean requery(android.content.Context,android.database.Cursor)
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
com.airbnb.lottie.LottieAnimationView: void setComposition(com.airbnb.lottie.LottieComposition)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getSuffixTextView()
com.airbnb.lottie.animation.content.GradientFillContent: void resolveKeyPath(com.airbnb.lottie.model.KeyPath,int,java.util.List,com.airbnb.lottie.model.KeyPath)
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
net.sqlcipher.database.SQLiteDatabase: void purgeFromCompiledSqlCache(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
com.airbnb.lottie.animation.content.ContentGroup: com.airbnb.lottie.model.animatable.AnimatableTransform findTransform(java.util.List)
net.sqlcipher.database.SQLiteDatabase: int update(java.lang.String,int,android.content.ContentValues,java.lang.String,java.lang.Object[])
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPlaceholderText()
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation createAnimation()
androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()
com.airbnb.lottie.animation.content.TrimPathContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation getOffset()
com.airbnb.lottie.model.animatable.BaseAnimatableValue: BaseAnimatableValue(java.lang.Object)
com.airbnb.lottie.RenderMode: com.airbnb.lottie.RenderMode valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
com.airbnb.lottie.LottieAnimationView: void cancelLoaderTask()
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
com.airbnb.lottie.animation.content.GradientFillContent: java.lang.String getName()
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleRoundedCornerRadius(float)
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
com.airbnb.lottie.model.layer.BaseLayer: void recordRenderTime(float)
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
leakcanary.internal.NotificationType: leakcanary.internal.NotificationType valueOf(java.lang.String)
com.airbnb.lottie.model.content.ShapeStroke$LineCapType: android.graphics.Paint$Cap toPaintCap()
net.sqlcipher.database.SQLiteCursor: int getCount()
com.airbnb.lottie.parser.AnimatableTransformParser: AnimatableTransformParser()
net.sqlcipher.DatabaseUtils: java.lang.String getCollationKey(java.lang.String)
com.airbnb.lottie.LottieComposition$Factory: com.airbnb.lottie.Cancellable fromJsonReader(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.OnCompositionLoadedListener)
com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation: FloatKeyframeAnimation(java.util.List)
com.google.gson.internal.bind.TypeAdapters$27: TypeAdapters$27()
com.airbnb.lottie.PerformanceTracker$1: int compare(java.lang.Object,java.lang.Object)
com.airbnb.lottie.utils.MiscUtils: boolean contains(float,float,float)
net.sqlcipher.CursorWindow: android.os.IBinder native_getBinder()
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage[] values()
com.airbnb.lottie.model.content.Repeater: boolean isHidden()
com.airbnb.lottie.parser.AnimatableValueParser: com.airbnb.lottie.model.animatable.AnimatableGradientColorValue parseGradientColor(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition,int)
com.airbnb.lottie.model.content.GradientType: com.airbnb.lottie.model.content.GradientType valueOf(java.lang.String)
com.airbnb.lottie.network.FileExtension: java.lang.String toString()
net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType: SQLiteDatabase$SQLiteDatabaseTransactionType(java.lang.String,int)
com.google.android.material.tabs.TabLayout: void setTabTextColors(android.content.res.ColorStateList)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.airbnb.lottie.parser.moshi.JsonReader: com.airbnb.lottie.parser.moshi.JsonEncodingException syntaxError(java.lang.String)
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPrefixTextColor()
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
com.airbnb.lottie.parser.MergePathsParser: <clinit>()
com.airbnb.lottie.LottieLogger: void error(java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.SearchView: int getImeOptions()
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
com.airbnb.lottie.LottieAnimationView: void clearComposition()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
com.airbnb.lottie.model.content.ShapePath: java.lang.String getName()
com.airbnb.lottie.LottieDrawable: void disableExtraScaleModeInFitXY()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
com.airbnb.lottie.model.content.RectangleShape: java.lang.String toString()
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node first()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
com.airbnb.lottie.LottieAnimationView: boolean hasMatte()
net.sqlcipher.MatrixCursor: boolean isNull(int)
com.airbnb.lottie.LottieAnimationView: void setMaxFrame(int)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapperImpl: BaseKeyframeAnimation$KeyframesWrapperImpl(java.util.List)
com.airbnb.lottie.model.layer.Layer: com.airbnb.lottie.model.layer.Layer$MatteType getMatteType()
net.sqlcipher.CursorWindow$1: java.lang.Object createFromParcel(android.os.Parcel)
com.airbnb.lottie.animation.keyframe.ValueCallbackKeyframeAnimation: ValueCallbackKeyframeAnimation(com.airbnb.lottie.value.LottieValueCallback)
net.sqlcipher.database.SQLiteQueryStats: long getLargestIndividualRowSize()
androidx.room.RoomDatabase: RoomDatabase()
com.airbnb.lottie.model.content.ShapeStroke: com.airbnb.lottie.model.content.ShapeStroke$LineCapType getCapType()
com.airbnb.lottie.parser.moshi.JsonReader: <clinit>()
com.airbnb.lottie.model.layer.Layer: com.airbnb.lottie.LottieComposition getComposition()
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieTask fromJsonReader(com.airbnb.lottie.parser.moshi.JsonReader,java.lang.String)
com.google.android.material.card.MaterialCardView: int getContentPaddingRight()
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
com.airbnb.lottie.LottieDrawable: int getRepeatMode()
com.airbnb.lottie.parser.ShapeTrimPathParser: <clinit>()
net.sqlcipher.DatabaseUtils: java.lang.String sqlEscapeString(java.lang.String)
net.sqlcipher.AbstractCursor: void checkPosition()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
net.sqlcipher.DatabaseUtils$InsertHelper: void bind(int,boolean)
com.airbnb.lottie.parser.LottieCompositionParser: void parseLayers(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition,java.util.List,androidx.collection.LongSparseArray)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
net.sqlcipher.database.SQLiteDatabase: long getMaximumSize()
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: com.airbnb.lottie.parser.moshi.JsonReader$Token peek()
com.bumptech.glide.module.LibraryGlideModule: LibraryGlideModule()
com.airbnb.lottie.network.FileExtension: <clinit>()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
com.airbnb.lottie.model.layer.Layer: java.lang.String toString(java.lang.String)
net.sqlcipher.CursorWindow: int getInt(int,int)
androidx.work.ArrayCreatingInputMerger: ArrayCreatingInputMerger()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
net.sqlcipher.database.SQLiteCursor: void fillWindow(int,android.database.CursorWindow)
net.sqlcipher.database.SQLiteQueryBuilder: java.lang.String getTables()
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpecResource(int)
com.google.android.material.textfield.TextInputLayout: int getBaseline()
net.sqlcipher.AbstractCursor: boolean updateDouble(int,double)
com.google.android.material.bottomappbar.BottomAppBar: void setHideOnScroll(boolean)
com.airbnb.lottie.LottieComposition: void init(android.graphics.Rect,float,float,float,java.util.List,androidx.collection.LongSparseArray,java.util.Map,java.util.Map,androidx.collection.SparseArrayCompat,java.util.Map,java.util.List)
androidx.viewpager.widget.ViewPager: void setAdapter(androidx.viewpager.widget.PagerAdapter)
com.bumptech.glide.load.PreferredColorSpace: com.bumptech.glide.load.PreferredColorSpace[] values()
com.airbnb.lottie.LottieDrawable: boolean hasMatte()
com.google.android.material.chip.ChipGroup: void setDividerDrawableVertical(android.graphics.drawable.Drawable)
com.airbnb.lottie.network.NetworkFetcher: com.airbnb.lottie.LottieResult fetchSync(android.content.Context,java.lang.String,java.lang.String)
net.sqlcipher.MatrixCursor: int getCount()
net.sqlcipher.database.SQLiteQuery: int columnCountLocked()
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
net.sqlcipher.AbstractCursor: void finalize()
com.airbnb.lottie.FontAssetDelegate: android.graphics.Typeface fetchFont(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
net.sqlcipher.database.SQLiteOpenHelper: net.sqlcipher.database.SQLiteDatabase getWritableDatabase(java.lang.String)
com.airbnb.lottie.LottieComposition: boolean hasDashPattern()
com.airbnb.lottie.LottieCompositionFactory$11: LottieCompositionFactory$11(java.lang.String)
com.airbnb.lottie.value.LottieInterpolatedValue: LottieInterpolatedValue(java.lang.Object,java.lang.Object)
com.airbnb.lottie.LottieTask: void access$100(com.airbnb.lottie.LottieTask,java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
com.airbnb.lottie.model.layer.Layer: java.util.List getMasks()
net.sqlcipher.CursorWindow: boolean isNull_native(int,int)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
com.airbnb.lottie.animation.keyframe.KeyframeAnimation: KeyframeAnimation(java.util.List)
leakcanary.internal.InternalLeakCanary: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SQLiteDatabase$5: void onBegin()
net.sqlcipher.database.SQLiteDatabase: void rawExecSQL(java.lang.String)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setElevation(float)
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int findString(java.lang.String,com.airbnb.lottie.parser.moshi.JsonReader$Options)
com.google.gson.internal.bind.TypeAdapters$21: TypeAdapters$21()
com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList getTabTextColors()
com.airbnb.lottie.LottieCompositionFactory$1: java.lang.Object call()
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
net.sqlcipher.MatrixCursor: java.lang.Object[] access$000(net.sqlcipher.MatrixCursor)
com.airbnb.lottie.LottieAnimationView: void setMinAndMaxFrame(java.lang.String,java.lang.String,boolean)
net.sqlcipher.MatrixCursor: long getLong(int)
com.airbnb.lottie.model.animatable.AnimatableFloatValue: AnimatableFloatValue()
com.airbnb.lottie.parser.ShapeGroupParser: com.airbnb.lottie.model.content.ShapeGroup parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
com.google.android.material.card.MaterialCardView: void setProgress(float)
com.airbnb.lottie.L: float endSection(java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
com.airbnb.lottie.LottieDrawable: int getRepeatCount()
androidx.fragment.app.Fragment: Fragment()
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
com.airbnb.lottie.parser.PolystarShapeParser: <clinit>()
com.google.android.material.bottomappbar.BottomAppBar: int getFabAnimationMode()
com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: void clearSkewValues()
net.sqlcipher.DatabaseUtils: void readExceptionWithFileNotFoundExceptionFromParcel(android.os.Parcel)
com.airbnb.lottie.LottieAnimationView: void setMinFrame(int)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
net.sqlcipher.database.SQLiteDatabase: boolean yieldIfContendedHelper(boolean,long)
net.sqlcipher.database.SQLiteCursor: void setSelectionArguments(java.lang.String[])
com.airbnb.lottie.utils.LottieValueAnimator: boolean isReversed()
com.airbnb.lottie.parser.AnimatableTextPropertiesParser: AnimatableTextPropertiesParser()
com.google.android.material.appbar.AppBarLayout: float getTargetElevation()
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.airbnb.lottie.animation.content.TrimPathContent: void onValueChanged()
com.airbnb.lottie.LottieDrawable$12: LottieDrawable$12(com.airbnb.lottie.LottieDrawable,int,int)
androidx.cardview.widget.CardView: void setRadius(float)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
com.google.android.material.bottomnavigation.BottomNavigationView: void setOnNavigationItemReselectedListener(com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener)
net.sqlcipher.database.SQLiteProgram: void native_clear_bindings()
com.google.android.material.chip.Chip: void setCheckedIconTint(android.content.res.ColorStateList)
net.sqlcipher.database.SQLiteDatabase: void finalize()
com.airbnb.lottie.animation.keyframe.IntegerKeyframeAnimation: java.lang.Object getValue(com.airbnb.lottie.value.Keyframe,float)
com.airbnb.lottie.model.KeyPath: boolean matches(java.lang.String,int)
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
com.airbnb.lottie.model.content.Repeater: Repeater(java.lang.String,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableTransform,boolean)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
net.sqlcipher.AbstractWindowedCursor: net.sqlcipher.CursorWindow getWindow()
net.sqlcipher.database.SQLiteDatabase: java.util.ArrayList getAttachedDbs(net.sqlcipher.database.SQLiteDatabase)
com.airbnb.lottie.model.layer.BaseLayer: void resolveChildKeyPath(com.airbnb.lottie.model.KeyPath,int,java.util.List,com.airbnb.lottie.model.KeyPath)
com.airbnb.lottie.parser.KeyframeParser: com.airbnb.lottie.value.Keyframe parseStaticValue(com.airbnb.lottie.parser.moshi.JsonReader,float,com.airbnb.lottie.parser.ValueParser)
com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatableFloatValue getSkewAngle()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
com.google.android.material.card.MaterialCardView: void setRadius(float)
net.sqlcipher.database.SQLiteQueryBuilder: void setStrictProjectionMap(boolean)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: boolean skipToEndOfBlockComment()
androidx.work.CoroutineWorker: CoroutineWorker(android.content.Context,androidx.work.WorkerParameters)
com.airbnb.lottie.LottieAnimationView$2: void onResult(com.airbnb.lottie.LottieComposition)
net.sqlcipher.BulkCursorNative: net.sqlcipher.IBulkCursor asInterface(android.os.IBinder)
com.google.android.material.tabs.TabItem: TabItem(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.parser.LottieCompositionMoshiParser: void parseMarkers(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition,java.util.List)
com.google.android.material.button.MaterialButton: int getInsetTop()
com.google.android.material.tabs.TabLayout: void setUnboundedRippleResource(int)
com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.animation.content.Content toContent(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
com.airbnb.lottie.animation.content.TrimPathContent: void addListener(com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$AnimationListener)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
androidx.navigation.dynamicfeatures.fragment.ui.AbstractProgressFragment: AbstractProgressFragment()
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.airbnb.lottie.utils.Logger: void warning(java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
com.airbnb.lottie.model.content.PolystarShape: java.lang.String getName()
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
com.airbnb.lottie.animation.keyframe.MaskKeyframeAnimation: java.util.List getOpacityAnimations()
com.airbnb.lottie.model.layer.Layer$LayerType: com.airbnb.lottie.model.layer.Layer$LayerType valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
com.google.android.material.card.MaterialCardView: void setMaxCardElevation(float)
com.dimas.made1.home.HomeActivity: HomeActivity()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
com.airbnb.lottie.animation.content.GradientStrokeContent: android.graphics.LinearGradient getLinearGradient()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SQLiteDebug: long getHeapFreeSize()
com.airbnb.lottie.model.LottieCompositionCache: void put(java.lang.String,com.airbnb.lottie.LottieComposition)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
net.sqlcipher.AbstractWindowedCursor: float getFloat(int)
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
com.airbnb.lottie.animation.keyframe.ColorKeyframeAnimation: ColorKeyframeAnimation(java.util.List)
com.airbnb.lottie.model.animatable.AnimatableColorValue: java.util.List getKeyframes()
com.airbnb.lottie.model.content.GradientFill: boolean isHidden()
net.sqlcipher.database.SQLiteCursor: int access$500(net.sqlcipher.database.SQLiteCursor)
com.airbnb.lottie.animation.content.EllipseContent: void onValueChanged()
com.google.gson.internal.bind.TypeAdapters$10: TypeAdapters$10()
com.google.android.material.card.MaterialCardView: MaterialCardView(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.widget.ConstraintHelper: int[] getReferencedIds()
net.sqlcipher.database.SQLiteContentHelper: android.os.MemoryFile simpleQueryForBlobMemoryFile(net.sqlcipher.database.SQLiteDatabase,java.lang.String,java.lang.String[])
net.sqlcipher.database.SQLiteDatabase: void dbclose()
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
net.sqlcipher.DatabaseUtils$InsertHelper: DatabaseUtils$InsertHelper(net.sqlcipher.database.SQLiteDatabase,java.lang.String)
com.airbnb.lottie.network.FileExtension: com.airbnb.lottie.network.FileExtension[] values()
com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation: java.lang.Object getValue(com.airbnb.lottie.value.Keyframe,float)
net.sqlcipher.database.SQLiteDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal)
com.airbnb.lottie.parser.JsonUtils: android.graphics.PointF jsonArrayToPoint(com.airbnb.lottie.parser.moshi.JsonReader,float)
com.airbnb.lottie.model.animatable.AnimatablePathValue: AnimatablePathValue(java.util.List)
com.airbnb.lottie.LottieDrawable$10: LottieDrawable$10(com.airbnb.lottie.LottieDrawable,java.lang.String)
net.sqlcipher.DefaultDatabaseErrorHandler: void deleteDatabaseFile(java.lang.String)
com.airbnb.lottie.model.animatable.AnimatableTextFrame: boolean isStatic()
com.airbnb.lottie.utils.GammaEvaluator: GammaEvaluator()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
net.sqlcipher.DatabaseUtils: <clinit>()
com.airbnb.lottie.LottieAnimationView$SavedState: <clinit>()
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: int getBaseline()
com.airbnb.lottie.model.content.CircleShape: com.airbnb.lottie.model.animatable.AnimatableValue getPosition()
net.sqlcipher.DatabaseUtils: void cursorStringToContentValuesIfPresent(net.sqlcipher.Cursor,android.content.ContentValues,java.lang.String)
androidx.lifecycle.ViewModelStore: ViewModelStore()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
com.airbnb.lottie.model.content.GradientFill: GradientFill(java.lang.String,com.airbnb.lottie.model.content.GradientType,android.graphics.Path$FillType,com.airbnb.lottie.model.animatable.AnimatableGradientColorValue,com.airbnb.lottie.model.animatable.AnimatableIntegerValue,com.airbnb.lottie.model.animatable.AnimatablePointValue,com.airbnb.lottie.model.animatable.AnimatablePointValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,boolean)
com.airbnb.lottie.model.content.GradientFill: com.airbnb.lottie.model.animatable.AnimatableGradientColorValue getGradientColor()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getStrokeColorStateList()
com.dimas.made1.base.BaseNavigationFragment: BaseNavigationFragment()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.airbnb.lottie.model.layer.BaseLayer: void applySubtractMask(android.graphics.Canvas,android.graphics.Matrix,com.airbnb.lottie.model.content.Mask,com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation,com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation)
com.airbnb.lottie.utils.LottieValueAnimator: float getFrameDurationNs()
com.google.android.material.chip.ChipGroup: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)
net.sqlcipher.CursorWindow: short getShort(int,int)
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type[] values()
com.airbnb.lottie.model.layer.Layer: java.lang.String getName()
leakcanary.internal.InternalLeakCanary: leakcanary.internal.LeakDirectoryProvider createLeakDirectoryProvider(android.content.Context)
com.google.android.material.timepicker.ChipTextInputComboView: ChipTextInputComboView(android.content.Context,android.util.AttributeSet)
leakcanary.internal.AppWatcherInstaller$MainProcess: AppWatcherInstaller$MainProcess()
com.airbnb.lottie.manager.FontAssetManager: android.graphics.Typeface getFontFamily(java.lang.String)
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
com.airbnb.lottie.model.animatable.AnimatableFloatValue: java.lang.String toString()
com.airbnb.lottie.model.CubicCurveData: void setControlPoint2(float,float)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
com.google.android.material.button.MaterialButton: void setIconResource(int)
net.sqlcipher.database.SQLiteCursorDriver: void cursorRequeried(android.database.Cursor)
com.airbnb.lottie.animation.content.ContentGroup: void setContents(java.util.List,java.util.List)
com.airbnb.lottie.manager.ImageAssetManager: <clinit>()
net.sqlcipher.database.SQLiteCompiledSql: void compile(java.lang.String,boolean)
com.google.android.material.card.MaterialCardView: android.graphics.RectF getBoundsAsRectF()
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
androidx.constraintlayout.widget.Constraints: androidx.constraintlayout.widget.ConstraintSet getConstraintSet()
com.google.gson.TypeAdapter: TypeAdapter()
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapperImpl: boolean isCachedValueEnabled(float)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
shark.LeakTraceReference$ReferenceType: shark.LeakTraceReference$ReferenceType[] values()
com.google.gson.internal.bind.DateTypeAdapter$1: DateTypeAdapter$1()
com.google.android.material.circularreveal.CircularRevealFrameLayout: int getCircularRevealScrimColor()
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.value.LottieFrameInfo: float getStartFrame()
com.airbnb.lottie.model.content.Mask: boolean isInverted()
com.airbnb.lottie.model.layer.CompositionLayer: void drawLayer(android.graphics.Canvas,android.graphics.Matrix,int)
com.airbnb.lottie.model.Font: Font(java.lang.String,java.lang.String,java.lang.String,float)
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
com.google.android.material.button.MaterialButtonToggleGroup: MaterialButtonToggleGroup(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)
com.dimas.made1.explore.ExploreFragment: ExploreFragment()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpec(com.google.android.material.animation.MotionSpec)
net.sqlcipher.database.SQLiteDatabase: java.lang.String findEditTable(java.lang.String)
com.airbnb.lottie.model.content.ShapeStroke$LineJoinType: <clinit>()
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
leakcanary.internal.InternalLeakCanary: void get_application$annotations()
net.sqlcipher.database.SQLiteProgram: void bindDouble(int,double)
com.airbnb.lottie.model.layer.BaseLayer: void invalidateSelf()
leakcanary.internal.LeakCanaryFileProvider: LeakCanaryFileProvider()
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
net.sqlcipher.database.SQLiteDatabase: <clinit>()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.airbnb.lottie.animation.content.GradientFillContent: int[] applyDynamicColorsIfNeeded(int[])
com.airbnb.lottie.LottieCompositionFactory$10: LottieCompositionFactory$10(java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconSize(float)
com.airbnb.lottie.value.Keyframe: float getEndProgress()
com.airbnb.lottie.animation.content.RectangleContent: void invalidate()
shark.HprofRecordTag: shark.HprofRecordTag valueOf(java.lang.String)
com.airbnb.lottie.parser.moshi.JsonReader: JsonReader()
com.airbnb.lottie.LottieAnimationView$2: void onResult(java.lang.Object)
com.airbnb.lottie.value.ScaleXY: java.lang.String toString()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpecResource(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.model.CubicCurveData: android.graphics.PointF getControlPoint2()
com.airbnb.lottie.model.content.ShapePath: com.airbnb.lottie.animation.content.Content toContent(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer)
shark.AndroidReferenceMatchers: shark.AndroidReferenceMatchers[] values()
com.google.android.material.bottomnavigation.BottomNavigationView: void setItemIconSize(int)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapperImpl: float getEndProgress()
androidx.viewpager2.widget.ViewPager2: void setOrientation(int)
com.airbnb.lottie.model.FontCharacter: double getWidth()
com.airbnb.lottie.parser.ScaleXYParser: com.airbnb.lottie.value.ScaleXY parse(com.airbnb.lottie.parser.moshi.JsonReader,float)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.airbnb.lottie.animation.content.FillContent: void getBounds(android.graphics.RectF,android.graphics.Matrix,boolean)
com.airbnb.lottie.parser.moshi.JsonReader: void beginArray()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType[] values()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
net.sqlcipher.database.SQLiteCursor$QueryThread: void sendMessage()
net.sqlcipher.CursorWindow: boolean allocRow()
shark.HprofVersion: shark.HprofVersion valueOf(java.lang.String)
com.airbnb.lottie.value.LottieValueCallback: java.lang.Object getValue(com.airbnb.lottie.value.LottieFrameInfo)
androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()
net.sqlcipher.BulkCursorToCursorAdaptor: void unregisterDataSetObserver(android.database.DataSetObserver)
net.sqlcipher.database.SQLiteQueryBuilder: void appendWhereEscapeString(java.lang.String)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: BaseKeyframeAnimation(java.util.List)
net.sqlcipher.InvalidRowColumnException: InvalidRowColumnException()
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapperImpl: boolean isEmpty()
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
com.google.gson.internal.bind.SqlDateTypeAdapter: SqlDateTypeAdapter()
com.airbnb.lottie.LottieDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: int getItemBackgroundRes()
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.card.MaterialCardView: android.graphics.drawable.Drawable getCheckedIcon()
net.sqlcipher.AbstractCursor: double getDouble(int)
com.airbnb.lottie.model.layer.BaseLayer: void access$100(com.airbnb.lottie.model.layer.BaseLayer,boolean)
com.airbnb.lottie.LottieAnimationView$1: LottieAnimationView$1()
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.airbnb.lottie.model.layer.ShapeLayer: void resolveChildKeyPath(com.airbnb.lottie.model.KeyPath,int,java.util.List,com.airbnb.lottie.model.KeyPath)
com.airbnb.lottie.LottieDrawable$2: void run(com.airbnb.lottie.LottieComposition)
com.airbnb.lottie.LottieComposition$Factory: com.airbnb.lottie.LottieComposition fromJsonSync(android.content.res.Resources,org.json.JSONObject)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
net.sqlcipher.database.SQLiteDatabase$4: void onRollback()
androidx.cardview.widget.CardView: void setMaxCardElevation(float)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.airbnb.lottie.model.animatable.AnimatableScaleValue: java.lang.String toString()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.airbnb.lottie.animation.content.ContentGroup: void addValueCallback(java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)
net.sqlcipher.database.SQLiteFullException: SQLiteFullException(java.lang.String)
com.airbnb.lottie.model.content.Mask: com.airbnb.lottie.model.animatable.AnimatableIntegerValue getOpacity()
androidx.viewpager2.widget.ViewPager2: int getPageSize()
net.sqlcipher.database.SQLiteQuery: void bindArguments(java.lang.Object[])
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
shark.ObjectInspectors: shark.ObjectInspectors[] values()
net.sqlcipher.database.SQLiteOpenHelper: net.sqlcipher.database.SQLiteDatabase getWritableDatabase(char[])
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.animation.content.RectangleContent: java.lang.String getName()
net.sqlcipher.database.SQLiteDatabase: void loadLibs(android.content.Context)
com.airbnb.lottie.LottieCompositionFactory: LottieCompositionFactory()
com.google.android.material.button.MaterialButton: void setInsetBottom(int)
leakcanary.internal.InternalLeakCanary: android.app.Application getApplication()
androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)
com.airbnb.lottie.animation.content.CompoundTrimPathContent: CompoundTrimPathContent()
com.airbnb.lottie.model.content.ShapePath: ShapePath(java.lang.String,int,com.airbnb.lottie.model.animatable.AnimatableShapeValue,boolean)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
net.sqlcipher.database.SQLiteCursorDriver: void cursorDeactivated()
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openOrCreateDatabase(java.io.File,java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory,net.sqlcipher.database.SQLiteDatabaseHook,net.sqlcipher.DatabaseErrorHandler)
com.airbnb.lottie.LottieDrawable$15: void run(com.airbnb.lottie.LottieComposition)
net.sqlcipher.database.SQLiteDatabase$5: void onCommit()
com.airbnb.lottie.model.content.ShapeStroke: com.airbnb.lottie.animation.content.Content toContent(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer)
net.sqlcipher.database.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)
com.airbnb.lottie.LottieCompositionFactory$8: LottieCompositionFactory$8(java.util.zip.ZipInputStream,java.lang.String)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
net.sqlcipher.AbstractCursor: boolean hasUpdates()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior(android.content.Context,android.util.AttributeSet)
net.sqlcipher.AbstractCursor$SelfContentObserver: boolean deliverSelfNotifications()
com.airbnb.lottie.LottieImageAsset: android.graphics.Bitmap getBitmap()
com.airbnb.lottie.LottieAnimationView$3: LottieAnimationView$3(com.airbnb.lottie.LottieAnimationView)
net.sqlcipher.BulkCursorToCursorAdaptor: boolean onMove(int,int)
net.sqlcipher.AbstractCursor: boolean isAfterLast()
net.sqlcipher.AbstractCursor: android.net.Uri getNotificationUri()
com.google.android.material.chip.Chip: void setChipIconSize(float)
com.airbnb.lottie.LottieDrawable: void addValueCallback(com.airbnb.lottie.model.KeyPath,java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)
com.airbnb.lottie.parser.DocumentDataParser: DocumentDataParser()
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
net.sqlcipher.database.SQLiteDatabase: void beginTransactionWithListenerNonExclusive(net.sqlcipher.database.SQLiteTransactionListener)
com.airbnb.lottie.model.layer.SolidLayer: void addValueCallback(java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)
com.airbnb.lottie.model.content.ShapeData: boolean isClosed()
androidx.fragment.app.Fragment: Fragment(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: java.lang.Object getValue()
com.airbnb.lottie.model.layer.CompositionLayer: boolean hasMatte()
com.airbnb.lottie.model.CubicCurveData: CubicCurveData(android.graphics.PointF,android.graphics.PointF,android.graphics.PointF)
com.airbnb.lottie.model.animatable.AnimatableFloatValue: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation createAnimation()
com.airbnb.lottie.animation.content.FillContent: void onValueChanged()
com.airbnb.lottie.LottieDrawable: com.airbnb.lottie.PerformanceTracker getPerformanceTracker()
leakcanary.internal.AndroidHeapDumper: AndroidHeapDumper(android.content.Context,leakcanary.internal.LeakDirectoryProvider)
com.airbnb.lottie.model.layer.Layer: com.airbnb.lottie.model.animatable.AnimatableTextProperties getTextProperties()
androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalStyle(int)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidthFocused()
com.airbnb.lottie.LottieDrawable: boolean useTextGlyphs()
net.sqlcipher.database.SQLiteOpenHelper: void onOpen(net.sqlcipher.database.SQLiteDatabase)
com.airbnb.lottie.parser.MergePathsParser: MergePathsParser()
com.airbnb.lottie.animation.content.ShapeContent: void invalidate()
com.google.android.material.chip.Chip: void setLayoutDirection(int)
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationY()
com.google.android.material.button.MaterialButton: int getCornerRadius()
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
com.airbnb.lottie.model.animatable.AnimatableTextProperties: AnimatableTextProperties(com.airbnb.lottie.model.animatable.AnimatableColorValue,com.airbnb.lottie.model.animatable.AnimatableColorValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue)
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieTask fromRawRes(android.content.Context,int)
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: TransformKeyframeAnimation(com.airbnb.lottie.model.animatable.AnimatableTransform)
com.airbnb.lottie.parser.RectangleShapeParser: com.airbnb.lottie.model.content.RectangleShape parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
com.airbnb.lottie.parser.LayerParser: <clinit>()
com.airbnb.lottie.model.content.GradientFill: com.airbnb.lottie.animation.content.Content toContent(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer)
net.sqlcipher.database.SQLiteOpenHelper: net.sqlcipher.database.SQLiteDatabase getReadableDatabase(java.lang.String)
net.sqlcipher.CursorWindow: boolean isString_native(int,int)
net.sqlcipher.database.SQLiteDatabase: java.lang.String getPathForLogs()
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setItemPosition(int)
com.airbnb.lottie.animation.content.StrokeContent: java.lang.String getName()
com.airbnb.lottie.network.FileExtension: FileExtension(java.lang.String,int,java.lang.String)
com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: void rotateLeft(com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node)
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.model.layer.Layer: long getParentId()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackground(android.graphics.drawable.Drawable)
com.airbnb.lottie.LottieProperty: <clinit>()
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
com.airbnb.lottie.value.LottieInterpolatedPointValue: LottieInterpolatedPointValue(android.graphics.PointF,android.graphics.PointF,android.view.animation.Interpolator)
com.airbnb.lottie.model.layer.TextLayer: void drawCharacter(java.lang.String,android.graphics.Paint,android.graphics.Canvas)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.model.content.Repeater: com.airbnb.lottie.animation.content.Content toContent(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer)
com.airbnb.lottie.utils.LottieValueAnimator: long getDuration()
com.airbnb.lottie.model.layer.SolidLayer: void getBounds(android.graphics.RectF,android.graphics.Matrix,boolean)
net.sqlcipher.database.SQLiteQuery: void bindString(int,java.lang.String)
com.airbnb.lottie.model.animatable.AnimatableGradientColorValue: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation createAnimation()
com.airbnb.lottie.LottieAnimationView: void setMinFrame(java.lang.String)
com.airbnb.lottie.LottieDrawable: float getProgress()
com.airbnb.lottie.model.content.GradientFill: com.airbnb.lottie.model.animatable.AnimatableFloatValue getHighlightAngle()
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
androidx.viewpager2.widget.ViewPager2: void setLayoutDirection(int)
com.google.android.material.card.MaterialCardView: void setUseCompatPadding(boolean)
com.airbnb.lottie.parser.LottieCompositionParser: <clinit>()
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
com.airbnb.lottie.model.content.PolystarShape: com.airbnb.lottie.model.animatable.AnimatableValue getPosition()
com.airbnb.lottie.parser.PathParser: java.lang.Object parse(com.airbnb.lottie.parser.moshi.JsonReader,float)
com.airbnb.lottie.animation.content.ContentGroup: void getBounds(android.graphics.RectF,android.graphics.Matrix,boolean)
androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy: ConstraintProxy$StorageNotLowProxy()
net.sqlcipher.database.SQLiteDatabase: boolean isWriteAheadLoggingEnabled()
com.airbnb.lottie.utils.LogcatLogger: void debug(java.lang.String)
net.sqlcipher.CursorWindow: int getType(int,int)
com.google.android.material.bottomnavigation.BottomNavigationItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.google.android.material.chip.ChipGroup: void setSingleLine(int)
net.sqlcipher.database.SQLiteOpenHelper: void onConfigure(net.sqlcipher.database.SQLiteDatabase)
com.airbnb.lottie.parser.DocumentDataParser: <clinit>()
com.airbnb.lottie.utils.LottieValueAnimator: void setComposition(com.airbnb.lottie.LottieComposition)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
shark.HprofRecordTag: shark.HprofRecordTag[] values()
com.airbnb.lottie.LottieTask: <clinit>()
androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()
com.airbnb.lottie.LottieImageAsset: java.lang.String getFileName()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setExpandedComponentIdHint(int)
com.airbnb.lottie.LottieDrawable$12: void run(com.airbnb.lottie.LottieComposition)
com.airbnb.lottie.LottieCompositionFactory$4: com.airbnb.lottie.LottieResult call()
com.airbnb.lottie.model.content.GradientStroke: java.util.List getLineDashPattern()
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
net.sqlcipher.database.SQLiteProgram: void compile(java.lang.String,boolean)
com.airbnb.lottie.model.content.PolystarShape: com.airbnb.lottie.model.content.PolystarShape$Type getType()
com.google.gson.internal.bind.TypeAdapters$8: TypeAdapters$8()
com.airbnb.lottie.animation.content.BaseStrokeContent: void applyTrimPath(android.graphics.Canvas,com.airbnb.lottie.animation.content.BaseStrokeContent$PathGroup,android.graphics.Matrix)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
com.airbnb.lottie.LottieComposition$Factory$ListenerAdapter: void cancel()
androidx.cardview.widget.CardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.google.android.material.tabs.TabLayout: int getSelectedTabPosition()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode[] values()
com.airbnb.lottie.value.LottieFrameInfo: float getEndFrame()
com.google.android.material.chip.ChipGroup: int getChipSpacingHorizontal()
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
leakcanary.KeyedWeakReference: void setHeapDumpUptimeMillis(long)
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
androidx.viewpager2.widget.ViewPager2: void setOffscreenPageLimit(int)
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason valueOf(java.lang.String)
net.sqlcipher.CursorIndexOutOfBoundsException: CursorIndexOutOfBoundsException(java.lang.String)
com.airbnb.lottie.parser.ShapeTrimPathParser: ShapeTrimPathParser()
com.airbnb.lottie.LottieAnimationView: void setFrame(int)
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
net.sqlcipher.database.SQLiteCursor: void deactivateCommon()
com.airbnb.lottie.model.content.ShapePath: com.airbnb.lottie.model.animatable.AnimatableShapeValue getShapePath()
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openOrCreateDatabase(java.lang.String,byte[],net.sqlcipher.database.SQLiteDatabase$CursorFactory,net.sqlcipher.database.SQLiteDatabaseHook)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
org.koin.core.logger.Level: org.koin.core.logger.Level[] values()
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
com.airbnb.lottie.parser.DocumentDataParser: com.airbnb.lottie.model.DocumentData parse(com.airbnb.lottie.parser.moshi.JsonReader,float)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
com.airbnb.lottie.model.animatable.BaseAnimatableValue: BaseAnimatableValue(java.util.List)
com.airbnb.lottie.LottieDrawable: void setMaxFrame(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node: LinkedHashTreeMap$Node(com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node,java.lang.Object,int,com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node,com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setItemTextAppearanceInactive(int)
androidx.constraintlayout.widget.Placeholder: void setEmptyVisibility(int)
com.airbnb.lottie.model.layer.TextLayer: void applyJustification(com.airbnb.lottie.model.DocumentData$Justification,android.graphics.Canvas,float)
com.airbnb.lottie.model.layer.Layer: com.airbnb.lottie.model.layer.Layer$LayerType getLayerType()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
com.airbnb.lottie.LottieTask: void notifySuccessListeners(java.lang.Object)
leakcanary.internal.InternalLeakCanary: void setDumpEnabledInAboutScreen$leakcanary_android_core_release(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(int)
com.airbnb.lottie.parser.ShapeFillParser: <clinit>()
androidx.constraintlayout.widget.Guideline: void setVisibility(int)
net.sqlcipher.BulkCursorToCursorAdaptor: BulkCursorToCursorAdaptor()
androidx.viewpager.widget.ViewPager: void setScrollState(int)
net.sqlcipher.CursorWrapper: net.sqlcipher.Cursor getWrappedCursor()
com.airbnb.lottie.LottieDrawable$LazyCompositionTask: void run(com.airbnb.lottie.LottieComposition)
com.airbnb.lottie.utils.BaseLottieAnimator: void setInterpolator(android.animation.TimeInterpolator)
com.google.gson.internal.bind.TypeAdapters$4: TypeAdapters$4()
net.sqlcipher.CursorWindow: boolean putString_native(java.lang.String,int,int)
androidx.work.impl.WorkManagerInitializer: WorkManagerInitializer()
com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.badge.BadgeDrawable getBadge()
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
com.airbnb.lottie.model.content.ShapeTrimPath$Type: com.airbnb.lottie.model.content.ShapeTrimPath$Type forId(int)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
net.sqlcipher.MatrixCursor: void addRow(java.lang.Object[])
com.airbnb.lottie.LottieCompositionFactory$4: LottieCompositionFactory$4(java.io.InputStream,java.lang.String)
com.airbnb.lottie.animation.content.RectangleContent: void resolveKeyPath(com.airbnb.lottie.model.KeyPath,int,java.util.List,com.airbnb.lottie.model.KeyPath)
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType valueOf(java.lang.String)
com.airbnb.lottie.model.Marker: Marker(java.lang.String,float,float)
com.airbnb.lottie.value.LottieInterpolatedPointValue: java.lang.Object interpolateValue(java.lang.Object,java.lang.Object,float)
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.google.android.material.textfield.TextInputLayout: void setExpandedHintEnabled(boolean)
com.airbnb.lottie.animation.content.TrimPathContent: boolean isHidden()
com.airbnb.lottie.model.content.ShapeData: android.graphics.PointF getInitialPoint()
com.airbnb.lottie.model.layer.TextLayer: void addValueCallback(java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetViewId(int)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCheckedIconTint()
com.airbnb.lottie.LottieLogger: void warning(java.lang.String)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.network.NetworkCache: java.lang.String filenameForUrl(java.lang.String,com.airbnb.lottie.network.FileExtension,boolean)
com.airbnb.lottie.utils.LottieValueAnimator: void playAnimation()
com.airbnb.lottie.model.animatable.AnimatablePathValue: boolean isStatic()
com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.animation.content.Content toContent(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer)
com.google.android.material.bottomnavigation.BottomNavigationView: int getItemIconSize()
androidx.work.WorkInfo$State: androidx.work.WorkInfo$State[] values()
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.LottieDrawable: void setColorFilter(android.graphics.ColorFilter)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
com.airbnb.lottie.model.content.ShapeStroke$LineCapType: com.airbnb.lottie.model.content.ShapeStroke$LineCapType valueOf(java.lang.String)
net.sqlcipher.AbstractCursor: float getFloat(int)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
net.sqlcipher.database.SQLiteCursor: boolean supportsUpdates()
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
net.sqlcipher.database.SQLiteCursor: boolean requery()
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: <clinit>()
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setItemBackground(int)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.airbnb.lottie.model.content.ShapeData: ShapeData()
com.dimas.made1.detail.DetailFragmentArgs: com.dimas.made1.detail.DetailFragmentArgs fromBundle(android.os.Bundle)
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setEnabled(boolean)
com.airbnb.lottie.SimpleColorFilter: SimpleColorFilter(int)
net.sqlcipher.database.SQLiteDatabase$SQLiteDatabaseTransactionType: <clinit>()
com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatableIntegerValue getOpacity()
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.model.content.CircleShape: com.airbnb.lottie.animation.content.Content toContent(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer)
com.google.android.material.card.MaterialCardView: int getCheckedIconSize()
androidx.lifecycle.LifecycleCoroutineScope: LifecycleCoroutineScope()
com.airbnb.lottie.LottieDrawable: void loop(boolean)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
com.google.android.material.bottomnavigation.BottomNavigationView: void setItemRippleColor(android.content.res.ColorStateList)
net.sqlcipher.BulkCursorToCursorAdaptor: int findRowIdColumnIndex(java.lang.String[])
com.google.android.material.button.MaterialButtonToggleGroup: int getFirstVisibleChildIndex()
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
com.google.android.play.core.missingsplits.PlayCoreMissingSplitsActivity: PlayCoreMissingSplitsActivity()
com.google.android.material.chip.Chip: void setBackgroundColor(int)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentMode(int)
com.airbnb.lottie.model.content.ShapeData: void setInitialPoint(float,float)
com.google.android.material.textfield.TextInputLayout: int getPlaceholderTextAppearance()
com.airbnb.lottie.R$styleable: <clinit>()
com.airbnb.lottie.model.content.RectangleShape: com.airbnb.lottie.animation.content.Content toContent(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer)
com.airbnb.lottie.animation.keyframe.SplitDimensionPathKeyframeAnimation: android.graphics.PointF getValue(com.airbnb.lottie.value.Keyframe,float)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
shark.LeakTraceObject$LeakingStatus: shark.LeakTraceObject$LeakingStatus[] values()
com.airbnb.lottie.LottieAnimationView: void addValueCallback(com.airbnb.lottie.model.KeyPath,java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)
com.airbnb.lottie.animation.content.PolystarContent: void addValueCallback(java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)
net.sqlcipher.CursorWindow: void copyStringToBuffer(int,int,android.database.CharArrayBuffer)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.airbnb.lottie.LottieAnimationView: float getScale()
com.airbnb.lottie.LottieDrawable: android.content.Context getContext()
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundColor(int)
com.airbnb.lottie.TextDelegate: java.lang.String getTextInternal(java.lang.String)
com.airbnb.lottie.LottieAnimationView$3: void onResult(java.lang.Throwable)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: android.content.res.ColorStateList getIconTintList()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpecResource(int)
com.airbnb.lottie.model.KeyPath: <clinit>()
com.airbnb.lottie.animation.content.StrokeContent: StrokeContent(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer,com.airbnb.lottie.model.content.ShapeStroke)
net.sqlcipher.database.SQLiteQuery: int native_fill_window(net.sqlcipher.CursorWindow,int,int,int,int,int)
com.airbnb.lottie.LottieAnimationView: long getDuration()
com.airbnb.lottie.LottieCompositionFactory$5: com.airbnb.lottie.LottieResult call()
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderText(java.lang.CharSequence)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
com.airbnb.lottie.model.content.ShapeFill: java.lang.String getName()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.airbnb.lottie.parser.AnimatableValueParser: com.airbnb.lottie.model.animatable.AnimatableColorValue parseColor(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.airbnb.lottie.animation.content.RepeaterContent: java.lang.String getName()
com.airbnb.lottie.parser.LayerParser: com.airbnb.lottie.model.layer.Layer parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
com.airbnb.lottie.animation.keyframe.MaskKeyframeAnimation: java.util.List getMasks()
com.airbnb.lottie.animation.content.GradientFillContent: android.graphics.LinearGradient getLinearGradient()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
com.airbnb.lottie.LottieCompositionFactory$11: void onResult(java.lang.Object)
com.airbnb.lottie.LottieDrawable: void setMaxFrame(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setItemTextColor(android.content.res.ColorStateList)
com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()
com.google.gson.internal.bind.TypeAdapters$5: TypeAdapters$5()
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setCheckableResource(int)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidth()
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$AvlIterator: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node next()
net.sqlcipher.CursorWindow: boolean putBlob_native(byte[],int,int)
net.sqlcipher.CursorWindow: boolean putLong_native(long,int,int)
com.airbnb.lottie.model.content.ShapeStroke$LineJoinType: ShapeStroke$LineJoinType(java.lang.String,int)
com.google.android.material.card.MaterialCardView: int getStrokeColor()
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openDatabase(java.lang.String,char[],net.sqlcipher.database.SQLiteDatabase$CursorFactory,int,net.sqlcipher.database.SQLiteDatabaseHook)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealScrimColor(int)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
net.sqlcipher.database.SQLiteDatabase$1: void loadLibraries(java.lang.String[])
com.airbnb.lottie.model.content.ShapeStroke: com.airbnb.lottie.model.animatable.AnimatableIntegerValue getOpacity()
androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalBias(float)
net.sqlcipher.database.SQLiteCursor: int access$400(net.sqlcipher.database.SQLiteCursor)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
net.sqlcipher.RowAllocationException: RowAllocationException()
androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
com.google.android.material.bottomnavigation.BottomNavigationView: void setOnNavigationItemSelectedListener(com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
leakcanary.KeyedWeakReference: java.lang.String getDescription()
net.sqlcipher.database.SQLiteDirectCursorDriver: java.lang.String toString()
com.google.android.material.bottomnavigation.BottomNavigationMenuView: com.google.android.material.bottomnavigation.BottomNavigationItemView getNewItem()
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapper: boolean isEmpty()
androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
net.sqlcipher.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel,java.lang.String,int)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
com.airbnb.lottie.OnCompositionLoadedListener: void onCompositionLoaded(com.airbnb.lottie.LottieComposition)
com.airbnb.lottie.model.animatable.AnimatablePointValue: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation createAnimation()
net.sqlcipher.CursorWindow: long getLong(int,int)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
com.airbnb.lottie.model.CubicCurveData: void setVertex(float,float)
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
net.sqlcipher.DatabaseUtils: void dumpCurrentRow(net.sqlcipher.Cursor,java.io.PrintStream)
com.airbnb.lottie.utils.LottieValueAnimator: void doFrame(long)
com.airbnb.lottie.LottieDrawable$17: LottieDrawable$17(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.value.SimpleLottieValueCallback)
androidx.activity.ComponentActivity: void setContentView(android.view.View)
com.airbnb.lottie.utils.Logger: Logger()
com.airbnb.lottie.model.animatable.AnimatableScaleValue: AnimatableScaleValue(java.util.List)
com.airbnb.lottie.model.content.ShapeStroke$LineJoinType: com.airbnb.lottie.model.content.ShapeStroke$LineJoinType[] values()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
com.airbnb.lottie.utils.LogcatLogger: <clinit>()
com.airbnb.lottie.model.content.GradientStroke: java.lang.String getName()
androidx.constraintlayout.helper.widget.Flow: void setVerticalStyle(int)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
net.sqlcipher.database.SQLiteProgram: void bindString(int,java.lang.String)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.airbnb.lottie.parser.AnimatableValueParser: com.airbnb.lottie.model.animatable.AnimatableShapeValue parseShapeData(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
com.airbnb.lottie.model.content.GradientFill: java.lang.String getName()
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState valueOf(java.lang.String)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener)
androidx.viewpager.widget.ViewPager: int getPageMargin()
com.airbnb.lottie.parser.IntegerParser: java.lang.Object parse(com.airbnb.lottie.parser.moshi.JsonReader,float)
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
com.airbnb.lottie.parser.moshi.JsonReader$Token: com.airbnb.lottie.parser.moshi.JsonReader$Token[] values()
com.airbnb.lottie.LottieAnimationView: void removeAllAnimatorListeners()
net.sqlcipher.DatabaseUtils: java.lang.String concatenateWhere(java.lang.String,java.lang.String)
androidx.appcompat.widget.SearchView: int getMaxWidth()
androidx.work.impl.workers.DiagnosticsWorker: DiagnosticsWorker(android.content.Context,androidx.work.WorkerParameters)
net.sqlcipher.database.SupportHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase()
com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setItemBackground(android.graphics.drawable.Drawable)
net.sqlcipher.CursorWindow: float getFloat(int,int)
com.airbnb.lottie.animation.content.GreedyContent: void absorbContent(java.util.ListIterator)
net.sqlcipher.database.SQLiteStatement: int executeUpdateDelete()
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
com.airbnb.lottie.value.Keyframe: float getEndValueFloat()
net.sqlcipher.database.SQLiteDatabase: android.util.Pair getResultFromPragma(java.lang.String)
com.airbnb.lottie.parser.ContentModelParser: com.airbnb.lottie.model.content.ContentModel parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
net.sqlcipher.database.SQLiteDatabase: long lastInsertRow()
androidx.constraintlayout.helper.widget.Flow: void setMaxElementsWrap(int)
com.airbnb.lottie.LottieComposition: java.util.List getPrecomps(java.lang.String)
com.airbnb.lottie.LottieDrawable: void setMinAndMaxProgress(float,float)
com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()
androidx.lifecycle.ProcessLifecycleOwner$3$1: ProcessLifecycleOwner$3$1(androidx.lifecycle.ProcessLifecycleOwner$3)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openOrCreateDatabase(java.lang.String,byte[],net.sqlcipher.database.SQLiteDatabase$CursorFactory)
net.sqlcipher.database.SQLiteClosable: void releaseReferenceFromContainer()
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
net.sqlcipher.AbstractWindowedCursor: void checkPosition()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
net.sqlcipher.database.SQLiteDatabase: void changePassword(char[])
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
net.sqlcipher.database.SQLiteDatabase: boolean isInCompiledSqlCache(java.lang.String)
androidx.viewpager2.widget.ViewPager2: int getOrientation()
net.sqlcipher.DatabaseUtils$InsertHelper: long insert(android.content.ContentValues)
com.google.android.material.appbar.AppBarLayout: void setVisibility(int)
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleMargin()
net.sqlcipher.database.SQLiteDatabase: void key_mutf8(char[])
com.airbnb.lottie.LottieDrawable$7: void run(com.airbnb.lottie.LottieComposition)
net.sqlcipher.CursorWindow: boolean isBlob_native(int,int)
com.airbnb.lottie.LottieCompositionFactory$5: java.lang.Object call()
com.google.android.material.tabs.TabLayout: void setTabGravity(int)
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
com.airbnb.lottie.LottieDrawable: int getIntrinsicHeight()
com.google.android.material.tabs.TabLayout$TabView: void setTab(com.google.android.material.tabs.TabLayout$Tab)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
com.airbnb.lottie.parser.moshi.JsonReader: double nextDouble()
com.google.android.material.chip.Chip: void setCheckedIconTintResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.constraintlayout.widget.ConstraintLayout: int getPaddingWidth()
androidx.lifecycle.ViewModelStore: void put(java.lang.String,androidx.lifecycle.ViewModel)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.airbnb.lottie.utils.BaseLottieAnimator: void removeAllListeners()
com.airbnb.lottie.animation.content.ContentGroup: java.lang.String getName()
com.airbnb.lottie.parser.moshi.JsonEncodingException: JsonEncodingException(java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
net.sqlcipher.MatrixCursor: void addRow(java.lang.Iterable)
com.airbnb.lottie.model.content.PolystarShape: boolean isHidden()
com.airbnb.lottie.parser.PathParser: android.graphics.PointF parse(com.airbnb.lottie.parser.moshi.JsonReader,float)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
androidx.work.BackoffPolicy: androidx.work.BackoffPolicy[] values()
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
net.sqlcipher.database.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.Object[])
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node: LinkedHashTreeMap$Node()
net.sqlcipher.CursorWindow: boolean isFloat_native(int,int)
com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatableFloatValue getStartOpacity()
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.animatable.AnimatableFloatValue getDashOffset()
com.airbnb.lottie.LottieAnimationView: void setImageAssetsFolder(java.lang.String)
com.google.android.material.tabs.TabLayout$TabView: void setSelected(boolean)
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
com.airbnb.lottie.parser.GradientColorParser: com.airbnb.lottie.model.content.GradientColor parse(com.airbnb.lottie.parser.moshi.JsonReader,float)
net.sqlcipher.database.SQLiteDebug: long getHeapSize()
net.sqlcipher.BulkCursorProxy: BulkCursorProxy(android.os.IBinder)
com.airbnb.lottie.LottieDrawable$ColorFilterData: boolean equals(java.lang.Object)
net.sqlcipher.database.SQLiteCompiledSql: void releaseSqlStatement()
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteCompiledSql getCompiledStatementForSql(java.lang.String)
com.airbnb.lottie.model.layer.ShapeLayer: void drawLayer(android.graphics.Canvas,android.graphics.Matrix,int)
net.sqlcipher.MatrixCursor: MatrixCursor(java.lang.String[])
androidx.work.impl.utils.futures.DirectExecutor: androidx.work.impl.utils.futures.DirectExecutor[] values()
com.google.android.material.card.MaterialCardView: void setRippleColor(android.content.res.ColorStateList)
com.google.android.material.bottomnavigation.BottomNavigationView: void setItemIconTintList(android.content.res.ColorStateList)
net.sqlcipher.DatabaseUtils$InsertHelper: void bind(int,java.lang.String)
net.sqlcipher.database.SQLiteDatabaseCorruptException: SQLiteDatabaseCorruptException(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: java.lang.String nextName()
com.airbnb.lottie.utils.LottieValueAnimator: void setMaxFrame(float)
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
androidx.core.widget.NestedScrollView: int getScrollRange()
net.sqlcipher.BulkCursorProxy: void close()
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
net.sqlcipher.database.SQLiteCursorDriver: void cursorClosed()
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
net.sqlcipher.CursorWindow: void clear()
com.airbnb.lottie.model.layer.BaseLayer: void clearCanvas(android.graphics.Canvas)
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
net.sqlcipher.BulkCursorToCursorAdaptor: void unregisterContentObserver(android.database.ContentObserver)
com.google.android.material.card.MaterialCardView: void setBackgroundInternal(android.graphics.drawable.Drawable)
net.sqlcipher.AbstractCursor: void unregisterContentObserver(android.database.ContentObserver)
androidx.constraintlayout.widget.ConstraintHelper: void setIds(java.lang.String)
com.airbnb.lottie.parser.ShapeTrimPathParser: com.airbnb.lottie.model.content.ShapeTrimPath parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
com.airbnb.lottie.model.layer.SolidLayer: void drawLayer(android.graphics.Canvas,android.graphics.Matrix,int)
com.google.android.material.internal.VisibilityAwareImageButton: void setVisibility(int)
com.google.gson.internal.bind.TypeAdapters$3: TypeAdapters$3()
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$EmptyKeyframeWrapper: BaseKeyframeAnimation$EmptyKeyframeWrapper(com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$1)
com.airbnb.lottie.model.animatable.AnimatableColorValue: AnimatableColorValue(java.util.List)
com.airbnb.lottie.parser.AnimatableTransformParser: boolean isScaleIdentity(com.airbnb.lottie.model.animatable.AnimatableScaleValue)
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: java.lang.String nextUnquotedValue()
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
net.sqlcipher.database.SQLiteProgram: void bindLong(int,long)
com.airbnb.lottie.LottieAnimationView: void invalidateDrawable(android.graphics.drawable.Drawable)
com.google.android.material.internal.FlowLayout: void setSingleLine(boolean)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
com.google.android.material.bottomnavigation.BottomNavigationView: void setItemBackground(android.graphics.drawable.Drawable)
androidx.constraintlayout.widget.ConstraintHelper: ConstraintHelper(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.parser.moshi.JsonReader: int nextInt()
com.airbnb.lottie.model.LottieCompositionCache: <clinit>()
com.airbnb.lottie.TextDelegate: TextDelegate(com.airbnb.lottie.LottieAnimationView)
net.sqlcipher.database.SQLiteDatabase: void key(byte[])
org.koin.androidx.scope.LifecycleScopeDelegate$2: void onDestroy(androidx.lifecycle.LifecycleOwner)
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: void endObject()
com.airbnb.lottie.LottieDrawable$15: LottieDrawable$15(com.airbnb.lottie.LottieDrawable,float)
leakcanary.internal.AndroidXFragmentDestroyWatcher: void invoke(android.app.Activity)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
com.airbnb.lottie.LottieAnimationView: void setAnimationFromJson(java.lang.String,java.lang.String)
net.sqlcipher.database.SQLiteDatabase: boolean containsNull(char[])
net.sqlcipher.database.SQLiteDatabaseCorruptException: SQLiteDatabaseCorruptException()
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapperImpl: float getStartDelayProgress()
com.airbnb.lottie.animation.content.TrimPathContent: java.lang.String getName()
com.airbnb.lottie.model.content.PolystarShape: com.airbnb.lottie.model.animatable.AnimatableFloatValue getInnerRadius()
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: java.lang.String toString()
net.sqlcipher.AbstractCursor: void notifyDataSetChange()
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieTask fromAsset(android.content.Context,java.lang.String,java.lang.String)
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
androidx.constraintlayout.helper.widget.Flow: void setOrientation(int)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
leakcanary.internal.InternalLeakCanary: void access$setApplicationVisible$p(leakcanary.internal.InternalLeakCanary,boolean)
net.sqlcipher.database.SQLiteDebug: <clinit>()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.work.ListenableWorker: ListenableWorker(android.content.Context,androidx.work.WorkerParameters)
com.google.android.material.card.MaterialCardView: int getContentPaddingTop()
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy[] values()
net.sqlcipher.CursorWindow: boolean putDouble_native(double,int,int)
androidx.cardview.widget.CardView: void setCardBackgroundColor(int)
com.airbnb.lottie.manager.FontAssetManager: void setDelegate(com.airbnb.lottie.FontAssetDelegate)
com.airbnb.lottie.LottieDrawable$17: java.lang.Object getValue(com.airbnb.lottie.value.LottieFrameInfo)
net.sqlcipher.DatabaseUtils: void cursorFloatToContentValuesIfPresent(net.sqlcipher.Cursor,android.content.ContentValues,java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
net.sqlcipher.database.SQLiteClosable: void onAllReferencesReleased()
net.sqlcipher.DatabaseUtils$InsertHelper: void bind(int,int)
com.airbnb.lottie.model.content.GradientColor: int getSize()
com.airbnb.lottie.LottieDrawable: int getAlpha()
net.sqlcipher.database.SQLiteOpenHelper: java.lang.String getDatabaseName()
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
com.airbnb.lottie.model.layer.Layer$MatteType: com.airbnb.lottie.model.layer.Layer$MatteType valueOf(java.lang.String)
com.airbnb.lottie.LottieAnimationView: void resumeAnimation()
com.airbnb.lottie.LottieAnimationView: boolean isMergePathsEnabledForKitKatAndAbove()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
net.sqlcipher.database.SQLiteDiskIOException: SQLiteDiskIOException()
com.airbnb.lottie.animation.content.GradientFillContent: GradientFillContent(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer,com.airbnb.lottie.model.content.GradientFill)
com.airbnb.lottie.model.content.ShapeStroke$LineJoinType: com.airbnb.lottie.model.content.ShapeStroke$LineJoinType valueOf(java.lang.String)
net.sqlcipher.DatabaseUtils$InsertHelper: long insertInternal(android.content.ContentValues,boolean)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
androidx.viewpager.widget.ViewPager: void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
com.airbnb.lottie.LottieDrawable: void removeAllUpdateListeners()
net.sqlcipher.database.SQLiteDatabase: boolean yieldIfContended()
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
com.airbnb.lottie.model.content.ShapeFill: com.airbnb.lottie.model.animatable.AnimatableColorValue getColor()
com.airbnb.lottie.animation.content.ShapeContent: android.graphics.Path getPath()
com.airbnb.lottie.animation.content.GradientStrokeContent: void draw(android.graphics.Canvas,android.graphics.Matrix,int)
com.airbnb.lottie.LottieAnimationView: void setImageAssetDelegate(com.airbnb.lottie.ImageAssetDelegate)
net.sqlcipher.database.SQLiteDatabase: boolean isOpen()
com.airbnb.lottie.model.layer.BaseLayer: void setParentLayer(com.airbnb.lottie.model.layer.BaseLayer)
com.airbnb.lottie.parser.ShapePathParser: ShapePathParser()
androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver: ForceStopRunnable$BroadcastReceiver()
androidx.lifecycle.ViewModelStore: androidx.lifecycle.ViewModel get(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
com.airbnb.lottie.LottieAnimationView: void onRestoreInstanceState(android.os.Parcelable)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.animation.content.ContentGroup: java.util.List getPathList()
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
net.sqlcipher.BulkCursorToCursorAdaptor: boolean commitUpdates(java.util.Map)
net.sqlcipher.database.SQLiteCursor: void setLoadStyle(int,int)
net.sqlcipher.CursorWindow: boolean putNull(int,int)
net.sqlcipher.database.SQLiteProgram: void clearBindings()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openDatabase(java.lang.String,java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory,int,net.sqlcipher.database.SQLiteDatabaseHook)
net.sqlcipher.CursorWindow: boolean setNumColumns(int)
net.sqlcipher.BulkCursorProxy: void onMove(int)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
net.sqlcipher.AbstractCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(android.content.res.ColorStateList)
com.airbnb.lottie.model.animatable.AnimatableSplitDimensionPathValue: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation createAnimation()
com.airbnb.lottie.LottieResult: java.lang.Object getValue()
com.airbnb.lottie.parser.KeyframeParser: androidx.collection.SparseArrayCompat pathInterpolatorCache()
com.google.android.material.internal.FlowLayout: int getRowCount()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()
com.airbnb.lottie.model.animatable.AnimatableColorValue: java.lang.String toString()
com.airbnb.lottie.parser.AnimatableValueParser: java.util.List parse(com.airbnb.lottie.parser.moshi.JsonReader,float,com.airbnb.lottie.LottieComposition,com.airbnb.lottie.parser.ValueParser)
net.sqlcipher.AbstractCursor: int getPosition()
com.airbnb.lottie.model.layer.BaseLayer$1: void onValueChanged()
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node[] doubleCapacity(com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node[])
androidx.media.AudioAttributesImplBase: AudioAttributesImplBase()
net.sqlcipher.database.SqliteWrapper: void checkSQLiteException(android.content.Context,net.sqlcipher.database.SQLiteException)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
net.sqlcipher.StaleDataException: StaleDataException()
net.sqlcipher.database.SQLiteDatabase: void lockForced()
com.airbnb.lottie.TextDelegate: void invalidateAllText()
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int nextNonWhitespace(boolean)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
com.airbnb.lottie.animation.content.GradientFillContent: android.graphics.RadialGradient getRadialGradient()
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(boolean)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
com.airbnb.lottie.LottieDrawable: android.graphics.Bitmap getImageAsset(java.lang.String)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$EntrySet: void clear()
com.airbnb.lottie.parser.ColorParser: java.lang.Integer parse(com.airbnb.lottie.parser.moshi.JsonReader,float)
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int peekKeyword()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.airbnb.lottie.parser.ScaleXYParser: <clinit>()
com.airbnb.lottie.LottieDrawable: java.util.List resolveKeyPath(com.airbnb.lottie.model.KeyPath)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$KeySet: boolean remove(java.lang.Object)
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: java.lang.String nextString()
com.airbnb.lottie.model.animatable.AnimatableColorValue: boolean isStatic()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
shark.LeakTraceObject$LeakingStatus: shark.LeakTraceObject$LeakingStatus valueOf(java.lang.String)
com.airbnb.lottie.model.content.GradientFill: com.airbnb.lottie.model.animatable.AnimatablePointValue getStartPoint()
com.google.android.material.circularreveal.CircularRevealFrameLayout: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
com.airbnb.lottie.model.DocumentData$Justification: com.airbnb.lottie.model.DocumentData$Justification[] values()
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
net.sqlcipher.AbstractCursor: android.database.DataSetObservable getDataSetObservable()
com.airbnb.lottie.model.content.ShapeData: ShapeData(android.graphics.PointF,boolean,java.util.List)
com.airbnb.lottie.LottieDrawable: void addAnimatorUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$EmptyKeyframeWrapper: BaseKeyframeAnimation$EmptyKeyframeWrapper()
shark.AndroidResourceIdNames: java.lang.String get(int)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
net.sqlcipher.CursorWindow: boolean putBlob(byte[],int,int)
com.airbnb.lottie.model.content.Mask: com.airbnb.lottie.model.animatable.AnimatableShapeValue getMaskPath()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(int)
com.airbnb.lottie.PerformanceTracker: PerformanceTracker()
com.airbnb.lottie.model.content.ShapeGroup: com.airbnb.lottie.animation.content.Content toContent(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer)
com.airbnb.lottie.animation.content.ContentGroup: ContentGroup(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer,com.airbnb.lottie.model.content.ShapeGroup)
net.sqlcipher.database.SQLiteDatabase$5: void onRollback()
net.sqlcipher.database.SQLiteCursor$MainThreadNotificationHandler: void handleMessage(android.os.Message)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
leakcanary.internal.InternalLeakCanary: leakcanary.internal.OnRetainInstanceListener getOnRetainInstanceListener()
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
androidx.viewpager2.widget.ViewPager2: int getScrollState()
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
com.airbnb.lottie.LottieAnimationView$4: LottieAnimationView$4(com.airbnb.lottie.LottieAnimationView,com.airbnb.lottie.value.SimpleLottieValueCallback)
androidx.work.NetworkType: androidx.work.NetworkType valueOf(java.lang.String)
com.airbnb.lottie.LottieResult: LottieResult(java.lang.Throwable)
leakcanary.KeyedWeakReference: void setRetainedUptimeMillis(long)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
net.sqlcipher.CursorWindow: void onAllReferencesReleased()
com.airbnb.lottie.manager.ImageAssetManager: android.graphics.Bitmap updateBitmap(java.lang.String,android.graphics.Bitmap)
net.sqlcipher.database.SqliteWrapper: android.net.Uri insert(android.content.Context,android.content.ContentResolver,android.net.Uri,android.content.ContentValues)
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment()
com.google.gson.Gson$3: Gson$3()
com.airbnb.lottie.animation.content.ContentGroup: void onValueChanged()
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
com.airbnb.lottie.model.content.ShapeTrimPath: com.airbnb.lottie.model.animatable.AnimatableFloatValue getEnd()
net.sqlcipher.IBulkCursor: void close()
com.airbnb.lottie.model.content.ShapeStroke: com.airbnb.lottie.model.animatable.AnimatableFloatValue getDashOffset()
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
net.sqlcipher.AbstractWindowedCursor: boolean isBlob(int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnLayoutChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener)
net.sqlcipher.database.SupportHelper: SupportHelper(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration,byte[],net.sqlcipher.database.SQLiteDatabaseHook,boolean)
com.google.android.material.card.MaterialCardView: void setCardForegroundColor(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthResource(int)
com.airbnb.lottie.animation.keyframe.TextKeyframeAnimation: java.lang.Object getValue(com.airbnb.lottie.value.Keyframe,float)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieResult fromZipStreamSyncInternal(java.util.zip.ZipInputStream,java.lang.String)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapperImpl: com.airbnb.lottie.value.Keyframe findKeyframe(float)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontalResource(int)
net.sqlcipher.database.SQLiteDatabase: void deallocCachedSqlStatements()
com.google.android.material.chip.ChipGroup: int getChipSpacingVertical()
net.sqlcipher.database.SQLiteQueryBuilder: void setProjectionMap(java.util.Map)
com.airbnb.lottie.model.layer.Layer$MatteType: Layer$MatteType(java.lang.String,int)
net.sqlcipher.database.SQLiteDatabase: void beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)
com.airbnb.lottie.utils.BaseLottieAnimator: long getStartDelay()
leakcanary.internal.InternalLeakCanary: void onObjectRetained()
com.airbnb.lottie.animation.keyframe.ValueCallbackKeyframeAnimation: java.lang.Object getValue(com.airbnb.lottie.value.Keyframe,float)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
net.sqlcipher.AbstractCursor: net.sqlcipher.CursorWindow getWindow()
com.airbnb.lottie.LottieResult: java.lang.Throwable getException()
com.google.android.material.card.MaterialCardView: int getContentPaddingLeft()
com.google.gson.internal.bind.TypeAdapters$12: TypeAdapters$12()
com.google.android.material.chip.ChipGroup: int getCheckedChipId()
com.airbnb.lottie.value.LottieFrameInfo: java.lang.Object getEndValue()
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
shark.OnAnalysisProgressListener$Step: shark.OnAnalysisProgressListener$Step[] values()
com.google.android.material.button.MaterialButton: int getIconSize()
com.airbnb.lottie.parser.moshi.JsonReader: com.airbnb.lottie.parser.moshi.JsonReader$Token peek()
shark.AndroidReferenceMatchers: shark.AndroidReferenceMatchers valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
com.airbnb.lottie.LottieComposition: float getDurationFrames()
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.model.animatable.AnimatableIntegerValue: java.util.List getKeyframes()
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
net.sqlcipher.DatabaseUtils$InsertHelper: void bind(int,double)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$AvlBuilder: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node root()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
net.sqlcipher.database.SQLiteDatabase: long replaceOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)
com.airbnb.lottie.LottieDrawable: LottieDrawable()
com.airbnb.lottie.parser.IntegerParser: java.lang.Integer parse(com.airbnb.lottie.parser.moshi.JsonReader,float)
net.sqlcipher.AbstractCursor: boolean updateShort(int,short)
com.google.android.material.bottomnavigation.BottomNavigationView: int getLabelVisibilityMode()
net.sqlcipher.database.SQLiteDatabase: long insert(java.lang.String,int,android.content.ContentValues)
com.airbnb.lottie.parser.moshi.JsonReader$Token: <clinit>()
com.airbnb.lottie.utils.BaseLottieAnimator: android.animation.Animator setDuration(long)
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
net.sqlcipher.CrossProcessCursorWrapper: boolean onMove(int,int)
com.airbnb.lottie.LottieComposition: float getDuration()
androidx.constraintlayout.helper.widget.Flow: void setVerticalGap(int)
com.google.gson.Gson$FutureTypeAdapter: Gson$FutureTypeAdapter()
com.airbnb.lottie.R$string: R$string()
com.airbnb.lottie.model.layer.Layer: java.util.List getShapes()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
com.airbnb.lottie.manager.ImageAssetManager: ImageAssetManager(android.graphics.drawable.Drawable$Callback,java.lang.String,com.airbnb.lottie.ImageAssetDelegate,java.util.Map)
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
androidx.work.InputMerger: InputMerger()
net.sqlcipher.IContentObserver$Stub$Proxy: void onChange(boolean)
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
com.airbnb.lottie.utils.MeanCalculator: MeanCalculator()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.airbnb.lottie.network.NetworkFetcher: com.airbnb.lottie.LottieResult getResultFromConnection(java.net.HttpURLConnection)
com.airbnb.lottie.LottieCompositionFactory$2: java.lang.Object call()
com.airbnb.lottie.value.LottieRelativeFloatValueCallback: java.lang.Float getValue(com.airbnb.lottie.value.LottieFrameInfo)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
com.airbnb.lottie.LottieAnimationView: void setMinProgress(float)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.airbnb.lottie.animation.content.PolystarContent: android.graphics.Path getPath()
shark.OnAnalysisProgressListener$Step: shark.OnAnalysisProgressListener$Step valueOf(java.lang.String)
com.airbnb.lottie.model.FontCharacter: double getSize()
net.sqlcipher.database.SQLiteException: SQLiteException()
com.airbnb.lottie.model.FontCharacter: FontCharacter(java.util.List,char,double,double,java.lang.String,java.lang.String)
com.airbnb.lottie.LottieTask$LottieFutureTask: void done()
net.sqlcipher.database.SQLiteQueryBuilder: SQLiteQueryBuilder()
com.google.android.material.textfield.TextInputLayout: void setPrefixText(java.lang.CharSequence)
com.google.android.material.chip.Chip: float getChipEndPadding()
net.sqlcipher.CursorWindow: void setStartPosition(int)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$KeySet$1: LinkedHashTreeMap$KeySet$1(com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$KeySet)
leakcanary.KeyedWeakReference: long getHeapDumpUptimeMillis()
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
com.airbnb.lottie.model.content.Mask$MaskMode: com.airbnb.lottie.model.content.Mask$MaskMode[] values()
com.google.android.material.tabs.TabLayout: void setTabRippleColorResource(int)
com.airbnb.lottie.animation.content.BaseStrokeContent: void getBounds(android.graphics.RectF,android.graphics.Matrix,boolean)
com.airbnb.lottie.utils.MiscUtils: android.graphics.PointF addPoints(android.graphics.PointF,android.graphics.PointF)
net.sqlcipher.database.SQLiteStatement: SQLiteStatement(net.sqlcipher.database.SQLiteDatabase,java.lang.String)
com.airbnb.lottie.model.CubicCurveData: android.graphics.PointF getControlPoint1()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
com.airbnb.lottie.LottieComposition$Factory: com.airbnb.lottie.Cancellable fromInputStream(java.io.InputStream,com.airbnb.lottie.OnCompositionLoadedListener)
com.google.android.material.chip.Chip: float getCloseIconSize()
net.sqlcipher.DatabaseUtils: long longForQuery(net.sqlcipher.database.SQLiteDatabase,java.lang.String,java.lang.String[])
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
com.airbnb.lottie.parser.moshi.JsonReader: java.lang.String nextString()
com.dimas.made1.utils.DataState: com.dimas.made1.utils.DataState valueOf(java.lang.String)
com.airbnb.lottie.LottieAnimationView: void setScaleType(android.widget.ImageView$ScaleType)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPaused(android.app.Activity)
com.airbnb.lottie.LottieDrawable$1: void onAnimationUpdate(android.animation.ValueAnimator)
com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.content.ShapeStroke$LineCapType getCapType()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSize(int)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
net.sqlcipher.database.SQLiteQuery: void bindLong(int,long)
com.airbnb.lottie.LottieDrawable$14: void run(com.airbnb.lottie.LottieComposition)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.database.SQLiteDatabase openDatabase(java.lang.String,java.lang.String,net.sqlcipher.database.SQLiteDatabase$CursorFactory,int,net.sqlcipher.database.SQLiteDatabaseHook,net.sqlcipher.DatabaseErrorHandler)
com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList getTabIconTint()
androidx.navigation.NavControllerViewModel: NavControllerViewModel()
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapper: float getEndProgress()
net.sqlcipher.DatabaseUtils: void cursorIntToContentValues(net.sqlcipher.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)
com.airbnb.lottie.LottieDrawable: int getIntrinsicWidth()
com.airbnb.lottie.model.content.ShapeFill: boolean isHidden()
net.sqlcipher.AbstractCursor: void registerDataSetObserver(android.database.DataSetObserver)
net.sqlcipher.DatabaseUtils: void cursorIntToContentValues(net.sqlcipher.Cursor,java.lang.String,android.content.ContentValues)
com.airbnb.lottie.animation.LPaint: LPaint()
androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)
com.airbnb.lottie.model.CubicCurveData: CubicCurveData()
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
com.airbnb.lottie.LottieListener: void onResult(java.lang.Object)
net.sqlcipher.AbstractWindowedCursor: void setWindow(net.sqlcipher.CursorWindow)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAnimationMode(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
com.airbnb.lottie.value.ScaleXY: void set(float,float)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalBias(float)
net.sqlcipher.database.SQLiteDatabase: void setMaxSqlCacheSize(int)
com.airbnb.lottie.value.SimpleLottieValueCallback: java.lang.Object getValue(com.airbnb.lottie.value.LottieFrameInfo)
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: void checkLenient()
net.sqlcipher.database.SQLiteDiskIOException: SQLiteDiskIOException(java.lang.String)
com.airbnb.lottie.parser.AnimatableTextPropertiesParser: <clinit>()
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
com.google.android.material.datepicker.MaterialDatePicker: MaterialDatePicker()
com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation getEndOpacity()
com.airbnb.lottie.LottieDrawable: void setSystemAnimationsAreEnabled(java.lang.Boolean)
com.google.android.material.card.MaterialCardView: void setCardElevation(float)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)
net.sqlcipher.AbstractWindowedCursor: boolean isNull(int)
net.sqlcipher.MatrixCursor: java.lang.Object get(int)
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setTextAppearanceInactive(int)
com.airbnb.lottie.LottieAnimationView: void setRepeatMode(int)
com.airbnb.lottie.LottieAnimationView: void removeAllLottieOnCompositionLoadedListener()
com.airbnb.lottie.LottieAnimationView$SavedState$1: java.lang.Object[] newArray(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: android.graphics.Matrix getMatrixForRepeater(float)
com.airbnb.lottie.animation.keyframe.PointKeyframeAnimation: java.lang.Object getValue(com.airbnb.lottie.value.Keyframe,float)
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setLabelVisibilityMode(int)
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int peekNumber()
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
com.airbnb.lottie.parser.FontCharacterParser: com.airbnb.lottie.model.FontCharacter parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
com.google.android.material.bottomappbar.BottomAppBar: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
com.google.android.material.card.MaterialCardView: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
net.sqlcipher.database.SQLiteDirectCursorDriver: void cursorClosed()
com.airbnb.lottie.LottieComposition$Factory$ListenerAdapter: LottieComposition$Factory$ListenerAdapter(com.airbnb.lottie.OnCompositionLoadedListener)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatElevation()
com.airbnb.lottie.RenderMode: <clinit>()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable getContentBackground()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleY(float)
com.airbnb.lottie.utils.GammaEvaluator: float OECF_sRGB(float)
com.google.android.material.chip.Chip: void setGravity(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
net.sqlcipher.database.SQLiteDatabaseHook: void postKey(net.sqlcipher.database.SQLiteDatabase)
net.sqlcipher.database.SQLiteCursor: void close()
com.google.android.material.tabs.TabLayout: void setTabIndicatorFullWidth(boolean)
net.sqlcipher.database.SQLiteQueryBuilder: void setDistinct(boolean)
com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.animatable.AnimatableGradientColorValue getGradientColor()
com.airbnb.lottie.animation.keyframe.TextKeyframeAnimation: com.airbnb.lottie.model.DocumentData getValue(com.airbnb.lottie.value.Keyframe,float)
com.airbnb.lottie.animation.keyframe.PathKeyframe: android.graphics.Path getPath()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
com.airbnb.lottie.model.content.GradientColor: void lerp(com.airbnb.lottie.model.content.GradientColor,com.airbnb.lottie.model.content.GradientColor,float)
com.airbnb.lottie.animation.keyframe.ScaleKeyframeAnimation: java.lang.Object getValue(com.airbnb.lottie.value.Keyframe,float)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setProgress(float)
com.airbnb.lottie.LottieAnimationView: void setImageResource(int)
androidx.work.impl.background.systemjob.SystemJobService: SystemJobService()
com.airbnb.lottie.animation.content.FillContent: void draw(android.graphics.Canvas,android.graphics.Matrix,int)
net.sqlcipher.DatabaseUtils: void cursorDoubleToContentValuesIfPresent(net.sqlcipher.Cursor,android.content.ContentValues,java.lang.String)
com.airbnb.lottie.parser.GradientColorParser: java.lang.Object parse(com.airbnb.lottie.parser.moshi.JsonReader,float)
com.google.android.material.tabs.TabLayout: void setTabRippleColor(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
com.google.android.material.bottomnavigation.BottomNavigationMenuView: android.util.SparseArray getBadgeDrawables()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
net.sqlcipher.database.SQLiteMisuseException: SQLiteMisuseException(java.lang.String)
com.airbnb.lottie.animation.keyframe.ColorKeyframeAnimation: java.lang.Object getValue(com.airbnb.lottie.value.Keyframe,float)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$Node find(java.lang.Object,boolean)
com.airbnb.lottie.LottieDrawable: java.lang.String getImageAssetsFolder()
com.airbnb.lottie.value.ScaleXY: ScaleXY()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
com.google.gson.internal.bind.TypeAdapters$11: TypeAdapters$11()
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieResult fromJsonInputStreamSync(java.io.InputStream,java.lang.String)
com.airbnb.lottie.LottieAnimationView: LottieAnimationView(android.content.Context,android.util.AttributeSet,int)
com.airbnb.lottie.utils.MiscUtils: MiscUtils()
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
com.airbnb.lottie.model.layer.BaseLayer: boolean areAllMasksNone()
leakcanary.KeyedWeakReference: <clinit>()
com.google.android.material.internal.VisibilityAwareImageButton: VisibilityAwareImageButton(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$SingleKeyframeWrapper: com.airbnb.lottie.value.Keyframe getCurrentKeyframe()
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
net.sqlcipher.database.SQLiteDatabase: void setForeignKeyConstraintsEnabled(boolean)
com.airbnb.lottie.parser.PointFParser: java.lang.Object parse(com.airbnb.lottie.parser.moshi.JsonReader,float)
com.airbnb.lottie.model.content.PolystarShape: com.airbnb.lottie.model.animatable.AnimatableFloatValue getRotation()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode[] values()
com.airbnb.lottie.model.content.ShapeStroke$LineCapType: <clinit>()
com.bumptech.glide.Priority: com.bumptech.glide.Priority[] values()
net.sqlcipher.database.SQLiteCompiledSql: void finalize()
net.sqlcipher.BulkCursorProxy: android.os.IBinder asBinder()
com.google.android.material.textfield.TextInputLayout: void setHint(int)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
com.google.android.material.chip.ChipGroup: ChipGroup(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.utils.Logger: void error(java.lang.String,java.lang.Throwable)
com.airbnb.lottie.LottieAnimationView$SavedState$1: com.airbnb.lottie.LottieAnimationView$SavedState createFromParcel(android.os.Parcel)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorStateList(android.content.res.ColorStateList)
net.sqlcipher.database.SQLiteConstraintException: SQLiteConstraintException()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.airbnb.lottie.LottieDrawable$13: void run(com.airbnb.lottie.LottieComposition)
com.google.android.material.chip.ChipGroup: void setSingleLine(boolean)
com.airbnb.lottie.LottieDrawable: void setSpeed(float)
net.sqlcipher.database.SQLiteDatabase$1: SQLiteDatabase$1()
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
com.airbnb.lottie.model.layer.Layer$LayerType: com.airbnb.lottie.model.layer.Layer$LayerType[] values()
net.sqlcipher.BulkCursorToCursorAdaptor: void close()
com.google.android.material.tabs.TabLayout: void setTabIconTint(android.content.res.ColorStateList)
net.sqlcipher.database.SQLiteDatabase: net.sqlcipher.Cursor rawQuery(java.lang.String,java.lang.String[],int,int)
com.airbnb.lottie.parser.JsonUtils: android.graphics.PointF jsonNumbersToPoint(com.airbnb.lottie.parser.moshi.JsonReader,float)
com.airbnb.lottie.Cancellable: void cancel()
com.airbnb.lottie.LottieComposition: java.util.ArrayList getWarnings()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
com.airbnb.lottie.parser.LottieCompositionMoshiParser: void parseFonts(com.airbnb.lottie.parser.moshi.JsonReader,java.util.Map)
com.airbnb.lottie.LottieCompositionFactory: java.lang.String rawResCacheKey(android.content.Context,int)
com.airbnb.lottie.LottieDrawable$4: LottieDrawable$4(com.airbnb.lottie.LottieDrawable,int)
com.airbnb.lottie.LottieDrawable$9: void run(com.airbnb.lottie.LottieComposition)
com.google.android.material.card.MaterialCardView: void setRippleColorResource(int)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
com.airbnb.lottie.parser.JsonUtils: <clinit>()
net.sqlcipher.database.SQLiteCursor: net.sqlcipher.database.SQLiteDatabase getDatabase()
com.google.gson.internal.bind.TypeAdapters$9: TypeAdapters$9()
com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.animatable.AnimatablePointValue getEndPoint()
com.airbnb.lottie.parser.PathParser: PathParser()
com.airbnb.lottie.animation.content.RectangleContent: RectangleContent(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer,com.airbnb.lottie.model.content.RectangleShape)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$KeySet: LinkedHashTreeMap$KeySet(com.airbnb.lottie.parser.moshi.LinkedHashTreeMap)
net.sqlcipher.CursorWindow: java.lang.String getString(int,int)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleMargin(float)
androidx.work.impl.background.systemalarm.SystemAlarmService: SystemAlarmService()
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieResult fromJsonSync(org.json.JSONObject,java.lang.String)
leakcanary.internal.DisplayLeakConnectorView$Type: leakcanary.internal.DisplayLeakConnectorView$Type[] values()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
net.sqlcipher.BulkCursorToCursorAdaptor: int getCount()
com.airbnb.lottie.model.animatable.AnimatableIntegerValue: boolean isStatic()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintList(android.content.res.ColorStateList)
com.airbnb.lottie.LottieDrawable$3: LottieDrawable$3(com.airbnb.lottie.LottieDrawable)
com.airbnb.lottie.model.CubicCurveData: android.graphics.PointF getVertex()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
com.airbnb.lottie.model.content.MergePaths: com.airbnb.lottie.animation.content.Content toContent(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
com.airbnb.lottie.parser.PointFParser: <clinit>()
com.airbnb.lottie.LottieAnimationView: void setFontAssetDelegate(com.airbnb.lottie.FontAssetDelegate)
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieTask fromAsset(android.content.Context,java.lang.String)
androidx.constraintlayout.widget.Placeholder: void setContentId(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$AvlBuilder: void reset(int)
com.airbnb.lottie.LottieAnimationView$2: LottieAnimationView$2(com.airbnb.lottie.LottieAnimationView)
com.google.android.material.textfield.TextInputEditText: void setTextInputLayoutFocusedRectEnabled(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
com.airbnb.lottie.parser.RepeaterParser: RepeaterParser()
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap: java.lang.Object writeReplace()
com.airbnb.lottie.LottieDrawable$14: LottieDrawable$14(com.airbnb.lottie.LottieDrawable,int)
androidx.appcompat.widget.SearchView: int getInputType()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnAttachStateChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener)
com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: void addListener(com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$AnimationListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
net.sqlcipher.AbstractCursor: boolean isBeforeFirst()
com.airbnb.lottie.PerformanceTracker$1: PerformanceTracker$1(com.airbnb.lottie.PerformanceTracker)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.airbnb.lottie.network.NetworkCache: void renameTempFile(java.lang.String,com.airbnb.lottie.network.FileExtension)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalStyle(int)
com.airbnb.lottie.LottieDrawable$ColorFilterData: LottieDrawable$ColorFilterData(java.lang.String,java.lang.String,android.graphics.ColorFilter)
net.sqlcipher.database.SQLiteDatabase: java.util.List getAttachedDbs()
com.airbnb.lottie.utils.BaseLottieAnimator: android.animation.ValueAnimator setDuration(long)
com.airbnb.lottie.model.layer.ImageLayer: ImageLayer(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.Layer)
com.airbnb.lottie.model.content.ShapeStroke$LineJoinType: android.graphics.Paint$Join toPaintJoin()
net.sqlcipher.database.SQLiteCursor: void setWindow(net.sqlcipher.CursorWindow)
net.sqlcipher.DatabaseUtils: java.lang.String stringForQuery(net.sqlcipher.database.SQLiteStatement,java.lang.String[])
com.google.android.material.chip.ChipGroup: void setSingleSelection(int)
com.airbnb.lottie.parser.ScaleXYParser: java.lang.Object parse(com.airbnb.lottie.parser.moshi.JsonReader,float)
com.airbnb.lottie.model.content.ShapeStroke: java.util.List getLineDashPattern()
com.airbnb.lottie.model.layer.Layer: int getSolidHeight()
net.sqlcipher.CursorWindow: CursorWindow(android.os.Parcel,int)
com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieResult fromRawResSync(android.content.Context,int,java.lang.String)
com.airbnb.lottie.R$style: R$style()
leakcanary.internal.InternalLeakCanary: <clinit>()
androidx.viewpager2.widget.ViewPager2: int getOffscreenPageLimit()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$LinkedTreeMapIterator: void remove()
com.airbnb.lottie.animation.content.ContentGroup: void resolveKeyPath(com.airbnb.lottie.model.KeyPath,int,java.util.List,com.airbnb.lottie.model.KeyPath)
net.sqlcipher.database.SQLiteOpenHelper: <clinit>()
com.airbnb.lottie.LottieCompositionFactory$3: java.lang.Object call()
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: boolean nextBoolean()
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
net.sqlcipher.database.SQLiteClosable: void onAllReferencesReleasedFromContainer()
androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.parser.AnimatableValueParser: com.airbnb.lottie.model.animatable.AnimatableTextFrame parseDocumentData(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)
com.airbnb.lottie.parser.LottieCompositionParser: com.airbnb.lottie.LottieComposition parse(com.airbnb.lottie.parser.moshi.JsonReader)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
net.sqlcipher.InvalidRowColumnException: InvalidRowColumnException(java.lang.String)
com.airbnb.lottie.utils.BaseLottieAnimator: void removeListener(android.animation.Animator$AnimatorListener)
com.google.android.material.bottomnavigation.BottomNavigationMenuView: android.content.res.ColorStateList getItemTextColor()
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding valueOf(java.lang.String)
com.airbnb.lottie.LottieDrawable: void enableMergePathsForKitKatAndAbove(boolean)
com.google.android.material.bottomnavigation.BottomNavigationItemView: void setItemBackground(android.graphics.drawable.Drawable)
com.airbnb.lottie.parser.moshi.JsonUtf8Reader: void skipValue()
